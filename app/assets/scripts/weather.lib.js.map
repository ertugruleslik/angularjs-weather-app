{"version":3,"sources":["angular.min.js","angular-ui-router.js","angular-resource.min.js"],"names":[],"mappingsz+UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"weather.lib.js","sourcesContent":["/*\n AngularJS v1.7.8\n (c) 2010-2018 Google, Inc. http://angularjs.org\n License: MIT\n*/\n(function(C){'use strict';function re(a){if(D(a))w(a.objectMaxDepth)&&(Wb.objectMaxDepth=Xb(a.objectMaxDepth)?a.objectMaxDepth:NaN),w(a.urlErrorParamsEnabled)&&Ga(a.urlErrorParamsEnabled)&&(Wb.urlErrorParamsEnabled=a.urlErrorParamsEnabled);else return Wb}function Xb(a){return W(a)&&0<a}function F(a,b){b=b||Error;return function(){var d=arguments[0],c;c=\"[\"+(a?a+\":\":\"\")+d+\"] http://errors.angularjs.org/1.7.8/\"+(a?a+\"/\":\"\")+d;for(d=1;d<arguments.length;d++){c=c+(1==d?\"?\":\"&\")+\"p\"+(d-1)+\"=\";var e=encodeURIComponent,\nf;f=arguments[d];f=\"function\"==typeof f?f.toString().replace(/ \\{[\\s\\S]*$/,\"\"):\"undefined\"==typeof f?\"undefined\":\"string\"!=typeof f?JSON.stringify(f):f;c+=e(f)}return new b(c)}}function ya(a){if(null==a||$a(a))return!1;if(H(a)||A(a)||x&&a instanceof x)return!0;var b=\"length\"in Object(a)&&a.length;return W(b)&&(0<=b&&b-1 in a||\"function\"===typeof a.item)}function r(a,b,d){var c,e;if(a)if(B(a))for(c in a)\"prototype\"!==c&&\"length\"!==c&&\"name\"!==c&&a.hasOwnProperty(c)&&b.call(d,a[c],c,a);else if(H(a)||\nya(a)){var f=\"object\"!==typeof a;c=0;for(e=a.length;c<e;c++)(f||c in a)&&b.call(d,a[c],c,a)}else if(a.forEach&&a.forEach!==r)a.forEach(b,d,a);else if(Nc(a))for(c in a)b.call(d,a[c],c,a);else if(\"function\"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&&b.call(d,a[c],c,a);else for(c in a)ta.call(a,c)&&b.call(d,a[c],c,a);return a}function Oc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e<c.length;e++)b.call(d,a[c[e]],c[e]);return c}function Yb(a){return function(b,d){a(d,b)}}function se(){return++pb}\nfunction Zb(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e<f;++e){var g=b[e];if(D(g)||B(g))for(var k=Object.keys(g),h=0,l=k.length;h<l;h++){var m=k[h],p=g[m];d&&D(p)?ha(p)?a[m]=new Date(p.valueOf()):ab(p)?a[m]=new RegExp(p):p.nodeName?a[m]=p.cloneNode(!0):$b(p)?a[m]=p.clone():(D(a[m])||(a[m]=H(p)?[]:{}),Zb(a[m],[p],!0)):a[m]=p}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function S(a){return Zb(a,Ha.call(arguments,1),!1)}function te(a){return Zb(a,Ha.call(arguments,1),!0)}function fa(a){return parseInt(a,\n10)}function ac(a,b){return S(Object.create(a),b)}function E(){}function Ta(a){return a}function ia(a){return function(){return a}}function bc(a){return B(a.toString)&&a.toString!==la}function z(a){return\"undefined\"===typeof a}function w(a){return\"undefined\"!==typeof a}function D(a){return null!==a&&\"object\"===typeof a}function Nc(a){return null!==a&&\"object\"===typeof a&&!Pc(a)}function A(a){return\"string\"===typeof a}function W(a){return\"number\"===typeof a}function ha(a){return\"[object Date]\"===la.call(a)}\nfunction H(a){return Array.isArray(a)||a instanceof Array}function cc(a){switch(la.call(a)){case \"[object Error]\":return!0;case \"[object Exception]\":return!0;case \"[object DOMException]\":return!0;default:return a instanceof Error}}function B(a){return\"function\"===typeof a}function ab(a){return\"[object RegExp]\"===la.call(a)}function $a(a){return a&&a.window===a}function bb(a){return a&&a.$evalAsync&&a.$watch}function Ga(a){return\"boolean\"===typeof a}function ue(a){return a&&W(a.length)&&ve.test(la.call(a))}\nfunction $b(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function we(a){var b={};a=a.split(\",\");var d;for(d=0;d<a.length;d++)b[a[d]]=!0;return b}function ua(a){return K(a.nodeName||a[0]&&a[0].nodeName)}function cb(a,b){var d=a.indexOf(b);0<=d&&a.splice(d,1);return d}function Ia(a,b,d){function c(a,b,c){c--;if(0>c)return\"...\";var d=b.$$hashKey,f;if(H(a)){f=0;for(var g=a.length;f<g;f++)b.push(e(a[f],c))}else if(Nc(a))for(f in a)b[f]=e(a[f],c);else if(a&&\"function\"===typeof a.hasOwnProperty)for(f in a)a.hasOwnProperty(f)&&\n(b[f]=e(a[f],c));else for(f in a)ta.call(a,f)&&(b[f]=e(a[f],c));d?b.$$hashKey=d:delete b.$$hashKey;return b}function e(a,b){if(!D(a))return a;var d=g.indexOf(a);if(-1!==d)return k[d];if($a(a)||bb(a))throw pa(\"cpws\");var d=!1,e=f(a);void 0===e&&(e=H(a)?[]:Object.create(Pc(a)),d=!0);g.push(a);k.push(e);return d?c(a,e,b):e}function f(a){switch(la.call(a)){case \"[object Int8Array]\":case \"[object Int16Array]\":case \"[object Int32Array]\":case \"[object Float32Array]\":case \"[object Float64Array]\":case \"[object Uint8Array]\":case \"[object Uint8ClampedArray]\":case \"[object Uint16Array]\":case \"[object Uint32Array]\":return new a.constructor(e(a.buffer),\na.byteOffset,a.length);case \"[object ArrayBuffer]\":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));return b}return a.slice(0);case \"[object Boolean]\":case \"[object Number]\":case \"[object String]\":case \"[object Date]\":return new a.constructor(a.valueOf());case \"[object RegExp]\":return b=new RegExp(a.source,a.toString().match(/[^/]*$/)[0]),b.lastIndex=a.lastIndex,b;case \"[object Blob]\":return new a.constructor([a],{type:a.type})}if(B(a.cloneNode))return a.cloneNode(!0)}\nvar g=[],k=[];d=Xb(d)?d:NaN;if(b){if(ue(b)||\"[object ArrayBuffer]\"===la.call(b))throw pa(\"cpta\");if(a===b)throw pa(\"cpi\");H(b)?b.length=0:r(b,function(a,c){\"$$hashKey\"!==c&&delete b[c]});g.push(a);k.push(b);return c(a,b,d)}return e(a,d)}function dc(a,b){return a===b||a!==a&&b!==b}function va(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&&b!==b)return!0;var d=typeof a,c;if(d===typeof b&&\"object\"===d)if(H(a)){if(!H(b))return!1;if((d=a.length)===b.length){for(c=0;c<d;c++)if(!va(a[c],\nb[c]))return!1;return!0}}else{if(ha(a))return ha(b)?dc(a.getTime(),b.getTime()):!1;if(ab(a))return ab(b)?a.toString()===b.toString():!1;if(bb(a)||bb(b)||$a(a)||$a(b)||H(b)||ha(b)||ab(b))return!1;d=T();for(c in a)if(\"$\"!==c.charAt(0)&&!B(a[c])){if(!va(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&&\"$\"!==c.charAt(0)&&w(b[c])&&!B(b[c]))return!1;return!0}return!1}function db(a,b,d){return a.concat(Ha.call(b,d))}function Va(a,b){var d=2<arguments.length?Ha.call(arguments,2):[];return!B(b)||b instanceof\nRegExp?b:d.length?function(){return arguments.length?b.apply(a,db(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function Qc(a,b){var d=b;\"string\"===typeof a&&\"$\"===a.charAt(0)&&\"$\"===a.charAt(1)?d=void 0:$a(b)?d=\"$WINDOW\":b&&C.document===b?d=\"$DOCUMENT\":bb(b)&&(d=\"$SCOPE\");return d}function eb(a,b){if(!z(a))return W(b)||(b=b?2:null),JSON.stringify(a,Qc,b)}function Rc(a){return A(a)?JSON.parse(a):a}function ec(a,b){a=a.replace(xe,\"\");var d=Date.parse(\"Jan 01, 1970 00:00:00 \"+\na)/6E4;return X(d)?b:d}function Sc(a,b){a=new Date(a.getTime());a.setMinutes(a.getMinutes()+b);return a}function fc(a,b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=ec(b,c);return Sc(a,d*(b-c))}function za(a){a=x(a).clone().empty();var b=x(\"<div></div>\").append(a).html();try{return a[0].nodeType===Pa?K(b):b.match(/^(<[^>]+>)/)[1].replace(/^<([\\w-]+)/,function(a,b){return\"<\"+K(b)})}catch(d){return K(b)}}function Tc(a){try{return decodeURIComponent(a)}catch(b){}}function gc(a){var b={};r((a||\"\").split(\"&\"),\nfunction(a){var c,e,f;a&&(e=a=a.replace(/\\+/g,\"%20\"),c=a.indexOf(\"=\"),-1!==c&&(e=a.substring(0,c),f=a.substring(c+1)),e=Tc(e),w(e)&&(f=w(f)?Tc(f):!0,ta.call(b,e)?H(b[e])?b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function ye(a){var b=[];r(a,function(a,c){H(a)?r(a,function(a){b.push(ba(c,!0)+(!0===a?\"\":\"=\"+ba(a,!0)))}):b.push(ba(c,!0)+(!0===a?\"\":\"=\"+ba(a,!0)))});return b.length?b.join(\"&\"):\"\"}function hc(a){return ba(a,!0).replace(/%26/gi,\"&\").replace(/%3D/gi,\"=\").replace(/%2B/gi,\"+\")}function ba(a,\nb){return encodeURIComponent(a).replace(/%40/gi,\"@\").replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%3B/gi,\";\").replace(/%20/g,b?\"%20\":\"+\")}function ze(a,b){var d,c,e=Qa.length;for(c=0;c<e;++c)if(d=Qa[c]+b,A(d=a.getAttribute(d)))return d;return null}function Ae(a,b){var d,c,e={};r(Qa,function(b){b+=\"app\";!d&&a.hasAttribute&&a.hasAttribute(b)&&(d=a,c=a.getAttribute(b))});r(Qa,function(b){b+=\"app\";var e;!d&&(e=a.querySelector(\"[\"+b.replace(\":\",\"\\\\:\")+\"]\"))&&(d=e,c=e.getAttribute(b))});\nd&&(Be?(e.strictDi=null!==ze(d,\"strict-di\"),b(d,c?[c]:[],e)):C.console.error(\"AngularJS: disabling automatic bootstrap. <script> protocol indicates an extension, document.location.href does not match.\"))}function Uc(a,b,d){D(d)||(d={});d=S({strictDi:!1},d);var c=function(){a=x(a);if(a.injector()){var c=a[0]===C.document?\"document\":za(a);throw pa(\"btstrpd\",c.replace(/</,\"&lt;\").replace(/>/,\"&gt;\"));}b=b||[];b.unshift([\"$provide\",function(b){b.value(\"$rootElement\",a)}]);d.debugInfoEnabled&&b.push([\"$compileProvider\",\nfunction(a){a.debugInfoEnabled(!0)}]);b.unshift(\"ng\");c=fb(b,d.strictDi);c.invoke([\"$rootScope\",\"$rootElement\",\"$compile\",\"$injector\",function(a,b,c,d){a.$apply(function(){b.data(\"$injector\",d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;C&&e.test(C.name)&&(d.debugInfoEnabled=!0,C.name=C.name.replace(e,\"\"));if(C&&!f.test(C.name))return c();C.name=C.name.replace(f,\"\");ca.resumeBootstrap=function(a){r(a,function(a){b.push(a)});return c()};B(ca.resumeDeferredBootstrap)&&\nca.resumeDeferredBootstrap()}function Ce(){C.name=\"NG_ENABLE_DEBUG_INFO!\"+C.name;C.location.reload()}function De(a){a=ca.element(a).injector();if(!a)throw pa(\"test\");return a.get(\"$$testability\")}function Vc(a,b){b=b||\"_\";return a.replace(Ee,function(a,c){return(c?b:\"\")+a.toLowerCase()})}function Fe(){var a;if(!Wc){var b=qb();(rb=z(b)?C.jQuery:b?C[b]:void 0)&&rb.fn.on?(x=rb,S(rb.fn,{scope:Wa.scope,isolateScope:Wa.isolateScope,controller:Wa.controller,injector:Wa.injector,inheritedData:Wa.inheritedData})):\nx=Y;a=x.cleanData;x.cleanData=function(b){for(var c,e=0,f;null!=(f=b[e]);e++)(c=(x._data(f)||{}).events)&&c.$destroy&&x(f).triggerHandler(\"$destroy\");a(b)};ca.element=x;Wc=!0}}function gb(a,b,d){if(!a)throw pa(\"areq\",b||\"?\",d||\"required\");return a}function sb(a,b,d){d&&H(a)&&(a=a[a.length-1]);gb(B(a),b,\"not a function, got \"+(a&&\"object\"===typeof a?a.constructor.name||\"Object\":typeof a));return a}function Ja(a,b){if(\"hasOwnProperty\"===a)throw pa(\"badname\",b);}function Ge(a,b,d){if(!b)return a;b=b.split(\".\");\nfor(var c,e=a,f=b.length,g=0;g<f;g++)c=b[g],a&&(a=(e=a)[c]);return!d&&B(a)?Va(e,a):a}function tb(a){for(var b=a[0],d=a[a.length-1],c,e=1;b!==d&&(b=b.nextSibling);e++)if(c||a[e]!==b)c||(c=x(Ha.call(a,0,e))),c.push(b);return c||a}function T(){return Object.create(null)}function ic(a){if(null==a)return\"\";switch(typeof a){case \"string\":break;case \"number\":a=\"\"+a;break;default:a=!bc(a)||H(a)||ha(a)?eb(a):a.toString()}return a}function He(a){function b(a,b,c){return a[b]||(a[b]=c())}var d=F(\"$injector\"),\nc=F(\"ng\");a=b(a,\"angular\",Object);a.$$minErr=a.$$minErr||F;return b(a,\"module\",function(){var a={};return function(f,g,k){var h={};if(\"hasOwnProperty\"===f)throw c(\"badname\",\"module\");g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,c,d,f){f||(f=e);return function(){f[d||\"push\"]([b,c,arguments]);return t}}function b(a,c,d){d||(d=e);return function(b,e){e&&B(e)&&(e.$$moduleName=f);d.push([a,c,arguments]);return t}}if(!g)throw d(\"nomod\",f);var e=[],n=[],s=[],G=a(\"$injector\",\"invoke\",\n\"push\",n),t={_invokeQueue:e,_configBlocks:n,_runBlocks:s,info:function(a){if(w(a)){if(!D(a))throw c(\"aobj\",\"value\");h=a;return this}return h},requires:g,name:f,provider:b(\"$provide\",\"provider\"),factory:b(\"$provide\",\"factory\"),service:b(\"$provide\",\"service\"),value:a(\"$provide\",\"value\"),constant:a(\"$provide\",\"constant\",\"unshift\"),decorator:b(\"$provide\",\"decorator\",n),animation:b(\"$animateProvider\",\"register\"),filter:b(\"$filterProvider\",\"register\"),controller:b(\"$controllerProvider\",\"register\"),directive:b(\"$compileProvider\",\n\"directive\"),component:b(\"$compileProvider\",\"component\"),config:G,run:function(a){s.push(a);return this}};k&&G(k);return t})}})}function ja(a,b){if(H(a)){b=b||[];for(var d=0,c=a.length;d<c;d++)b[d]=a[d]}else if(D(a))for(d in b=b||{},a)if(\"$\"!==d.charAt(0)||\"$\"!==d.charAt(1))b[d]=a[d];return b||a}function Ie(a,b){var d=[];Xb(b)&&(a=ca.copy(a,null,b));return JSON.stringify(a,function(a,b){b=Qc(a,b);if(D(b)){if(0<=d.indexOf(b))return\"...\";d.push(b)}return b})}function Je(a){S(a,{errorHandlingConfig:re,\nbootstrap:Uc,copy:Ia,extend:S,merge:te,equals:va,element:x,forEach:r,injector:fb,noop:E,bind:Va,toJson:eb,fromJson:Rc,identity:Ta,isUndefined:z,isDefined:w,isString:A,isFunction:B,isObject:D,isNumber:W,isElement:$b,isArray:H,version:Ke,isDate:ha,callbacks:{$$counter:0},getTestability:De,reloadWithDebugInfo:Ce,$$minErr:F,$$csp:Aa,$$encodeUriSegment:hc,$$encodeUriQuery:ba,$$lowercase:K,$$stringify:ic,$$uppercase:ub});kc=He(C);kc(\"ng\",[\"ngLocale\"],[\"$provide\",function(a){a.provider({$$sanitizeUri:Le});\na.provider(\"$compile\",Xc).directive({a:Me,input:Yc,textarea:Yc,form:Ne,script:Oe,select:Pe,option:Qe,ngBind:Re,ngBindHtml:Se,ngBindTemplate:Te,ngClass:Ue,ngClassEven:Ve,ngClassOdd:We,ngCloak:Xe,ngController:Ye,ngForm:Ze,ngHide:$e,ngIf:af,ngInclude:bf,ngInit:cf,ngNonBindable:df,ngPluralize:ef,ngRef:ff,ngRepeat:gf,ngShow:hf,ngStyle:jf,ngSwitch:kf,ngSwitchWhen:lf,ngSwitchDefault:mf,ngOptions:nf,ngTransclude:of,ngModel:pf,ngList:qf,ngChange:rf,pattern:Zc,ngPattern:Zc,required:$c,ngRequired:$c,minlength:ad,\nngMinlength:ad,maxlength:bd,ngMaxlength:bd,ngValue:sf,ngModelOptions:tf}).directive({ngInclude:uf,input:vf}).directive(vb).directive(cd);a.provider({$anchorScroll:wf,$animate:xf,$animateCss:yf,$$animateJs:zf,$$animateQueue:Af,$$AnimateRunner:Bf,$$animateAsyncRun:Cf,$browser:Df,$cacheFactory:Ef,$controller:Ff,$document:Gf,$$isDocumentHidden:Hf,$exceptionHandler:If,$filter:dd,$$forceReflow:Jf,$interpolate:Kf,$interval:Lf,$$intervalFactory:Mf,$http:Nf,$httpParamSerializer:Of,$httpParamSerializerJQLike:Pf,\n$httpBackend:Qf,$xhrFactory:Rf,$jsonpCallbacks:Sf,$location:Tf,$log:Uf,$parse:Vf,$rootScope:Wf,$q:Xf,$$q:Yf,$sce:Zf,$sceDelegate:$f,$sniffer:ag,$$taskTrackerFactory:bg,$templateCache:cg,$templateRequest:dg,$$testability:eg,$timeout:fg,$window:gg,$$rAF:hg,$$jqLite:ig,$$Map:jg,$$cookieReader:kg})}]).info({angularVersion:\"1.7.8\"})}function wb(a,b){return b.toUpperCase()}function xb(a){return a.replace(lg,wb)}function lc(a){a=a.nodeType;return 1===a||!a||9===a}function ed(a,b){var d,c,e=b.createDocumentFragment(),\nf=[];if(mc.test(a)){d=e.appendChild(b.createElement(\"div\"));c=(mg.exec(a)||[\"\",\"\"])[1].toLowerCase();c=oa[c]||oa._default;d.innerHTML=c[1]+a.replace(ng,\"<$1></$2>\")+c[2];for(c=c[0];c--;)d=d.lastChild;f=db(f,d.childNodes);d=e.firstChild;d.textContent=\"\"}else f.push(b.createTextNode(a));e.textContent=\"\";e.innerHTML=\"\";r(f,function(a){e.appendChild(a)});return e}function Y(a){if(a instanceof Y)return a;var b;A(a)&&(a=U(a),b=!0);if(!(this instanceof Y)){if(b&&\"<\"!==a.charAt(0))throw nc(\"nosel\");return new Y(a)}if(b){b=\nC.document;var d;a=(d=og.exec(a))?[b.createElement(d[1])]:(d=ed(a,b))?d.childNodes:[];oc(this,a)}else B(a)?fd(a):oc(this,a)}function pc(a){return a.cloneNode(!0)}function yb(a,b){!b&&lc(a)&&x.cleanData([a]);a.querySelectorAll&&x.cleanData(a.querySelectorAll(\"*\"))}function gd(a){for(var b in a)return!1;return!0}function hd(a){var b=a.ng339,d=b&&Ka[b],c=d&&d.events,d=d&&d.data;d&&!gd(d)||c&&!gd(c)||(delete Ka[b],a.ng339=void 0)}function id(a,b,d,c){if(w(c))throw nc(\"offargs\");var e=(c=zb(a))&&c.events,\nf=c&&c.handle;if(f){if(b){var g=function(b){var c=e[b];w(d)&&cb(c||[],d);w(d)&&c&&0<c.length||(a.removeEventListener(b,f),delete e[b])};r(b.split(\" \"),function(a){g(a);Ab[a]&&g(Ab[a])})}else for(b in e)\"$destroy\"!==b&&a.removeEventListener(b,f),delete e[b];hd(a)}}function qc(a,b){var d=a.ng339;if(d=d&&Ka[d])b?delete d.data[b]:d.data={},hd(a)}function zb(a,b){var d=a.ng339,d=d&&Ka[d];b&&!d&&(a.ng339=d=++pg,d=Ka[d]={events:{},data:{},handle:void 0});return d}function rc(a,b,d){if(lc(a)){var c,e=w(d),\nf=!e&&b&&!D(b),g=!b;a=(a=zb(a,!f))&&a.data;if(e)a[xb(b)]=d;else{if(g)return a;if(f)return a&&a[xb(b)];for(c in b)a[xb(c)]=b[c]}}}function Bb(a,b){return a.getAttribute?-1<(\" \"+(a.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").indexOf(\" \"+b+\" \"):!1}function Cb(a,b){if(b&&a.setAttribute){var d=(\" \"+(a.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \"),c=d;r(b.split(\" \"),function(a){a=U(a);c=c.replace(\" \"+a+\" \",\" \")});c!==d&&a.setAttribute(\"class\",U(c))}}function Db(a,b){if(b&&a.setAttribute){var d=\n(\" \"+(a.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \"),c=d;r(b.split(\" \"),function(a){a=U(a);-1===c.indexOf(\" \"+a+\" \")&&(c+=a+\" \")});c!==d&&a.setAttribute(\"class\",U(c))}}function oc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if(\"number\"===typeof d&&b.window!==b){if(d)for(var c=0;c<d;c++)a[a.length++]=b[c]}else a[a.length++]=b}}function jd(a,b){return Eb(a,\"$\"+(b||\"ngController\")+\"Controller\")}function Eb(a,b,d){9===a.nodeType&&(a=a.documentElement);for(b=H(b)?b:[b];a;){for(var c=\n0,e=b.length;c<e;c++)if(w(d=x.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&&a.host}}function kd(a){for(yb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function Fb(a,b){b||yb(a);var d=a.parentNode;d&&d.removeChild(a)}function qg(a,b){b=b||C;if(\"complete\"===b.document.readyState)b.setTimeout(a);else x(b).on(\"load\",a)}function fd(a){function b(){C.document.removeEventListener(\"DOMContentLoaded\",b);C.removeEventListener(\"load\",b);a()}\"complete\"===C.document.readyState?C.setTimeout(a):(C.document.addEventListener(\"DOMContentLoaded\",\nb),C.addEventListener(\"load\",b))}function ld(a,b){var d=Gb[b.toLowerCase()];return d&&md[ua(a)]&&d}function rg(a,b){var d=function(c,d){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=b[d||c.type],g=f?f.length:0;if(g){if(z(c.immediatePropagationStopped)){var k=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();k&&k.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};\nvar h=f.specialHandlerWrapper||sg;1<g&&(f=ja(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||h(a,c,f[l])}};d.elem=a;return d}function sg(a,b,d){d.call(a,b)}function tg(a,b,d){var c=b.relatedTarget;c&&(c===a||ug.call(a,c))||d.call(a,b)}function ig(){this.$get=function(){return S(Y,{hasClass:function(a,b){a.attr&&(a=a[0]);return Bb(a,b)},addClass:function(a,b){a.attr&&(a=a[0]);return Db(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Cb(a,b)}})}}function La(a,b){var d=a&&a.$$hashKey;\nif(d)return\"function\"===typeof d&&(d=a.$$hashKey()),d;d=typeof a;return d=\"function\"===d||\"object\"===d&&null!==a?a.$$hashKey=d+\":\"+(b||se)():d+\":\"+a}function nd(){this._keys=[];this._values=[];this._lastKey=NaN;this._lastIndex=-1}function od(a){a=Function.prototype.toString.call(a).replace(vg,\"\");return a.match(wg)||a.match(xg)}function yg(a){return(a=od(a))?\"function(\"+(a[1]||\"\").replace(/[\\s\\r\\n]+/,\" \")+\")\":\"fn\"}function fb(a,b){function d(a){return function(b,c){if(D(b))r(b,Yb(a));else return a(b,\nc)}}function c(a,b){Ja(a,\"service\");if(B(b)||H(b))b=n.instantiate(b);if(!b.$get)throw Ba(\"pget\",a);return p[a+\"Provider\"]=b}function e(a,b){return function(){var c=t.invoke(b,this);if(z(c))throw Ba(\"undef\",a);return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){gb(z(a)||H(a),\"modulesToLoad\",\"not an array\");var b=[],c;r(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=n.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.set(a,!0);try{A(a)?(c=kc(a),\nt.modules[a]=c,b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):B(a)?b.push(n.invoke(a)):H(a)?b.push(n.invoke(a)):sb(a,\"module\")}catch(e){throw H(a)&&(a=a[a.length-1]),e.message&&e.stack&&-1===e.stack.indexOf(e.message)&&(e=e.message+\"\\n\"+e.stack),Ba(\"modulerr\",a,e.stack||e.message||e);}}});return b}function k(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===h)throw Ba(\"cdep\",b+\" <- \"+l.join(\" <- \"));return a[b]}try{return l.unshift(b),a[b]=h,a[b]=c(b,e),\na[b]}catch(f){throw a[b]===h&&delete a[b],f;}finally{l.shift()}}function e(a,c,f){var g=[];a=fb.$$annotate(a,b,f);for(var h=0,k=a.length;h<k;h++){var l=a[h];if(\"string\"!==typeof l)throw Ba(\"itkn\",l);g.push(c&&c.hasOwnProperty(l)?c[l]:d(l,f))}return g}return{invoke:function(a,b,c,d){\"string\"===typeof c&&(d=c,c=null);c=e(a,c,d);H(a)&&(a=a[a.length-1]);d=a;if(Ca||\"function\"!==typeof d)d=!1;else{var f=d.$$ngIsClass;Ga(f)||(f=d.$$ngIsClass=/^class\\b/.test(Function.prototype.toString.call(d)));d=f}return d?\n(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=H(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,a))},get:d,annotate:fb.$$annotate,has:function(b){return p.hasOwnProperty(b+\"Provider\")||a.hasOwnProperty(b)}}}b=!0===b;var h={},l=[],m=new Hb,p={$provide:{provider:d(c),factory:d(f),service:d(function(a,b){return f(a,[\"$injector\",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,\nia(b),!1)}),constant:d(function(a,b){Ja(a,\"constant\");p[a]=b;s[a]=b}),decorator:function(a,b){var c=n.get(a+\"Provider\"),d=c.$get;c.$get=function(){var a=t.invoke(d,c);return t.invoke(b,null,{$delegate:a})}}}},n=p.$injector=k(p,function(a,b){ca.isString(b)&&l.push(b);throw Ba(\"unpr\",l.join(\" <- \"));}),s={},G=k(s,function(a,b){var c=n.get(a+\"Provider\",b);return t.invoke(c.$get,c,void 0,a)}),t=G;p.$injectorProvider={$get:ia(G)};t.modules=n.modules=T();var N=g(a),t=G.get(\"$injector\");t.strictDi=b;r(N,\nfunction(a){a&&t.invoke(a)});t.loadNewModules=function(a){r(g(a),function(a){a&&t.invoke(a)})};return t}function wf(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=[\"$window\",\"$location\",\"$rootScope\",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,function(a){if(\"a\"===ua(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();var c;c=g.yOffset;B(c)?c=c():$b(c)?(c=c[0],c=\"fixed\"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):W(c)||\n(c=0);c&&(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=A(a)?a:W(a)?a.toString():d.hash();var b;a?(b=k.getElementById(a))?f(b):(b=e(k.getElementsByName(a)))?f(b):\"top\"===a&&f(null):f(null)}var k=b.document;a&&c.$watch(function(){return d.hash()},function(a,b){a===b&&\"\"===a||qg(function(){c.$evalAsync(g)})});return g}]}function hb(a,b){if(!a&&!b)return\"\";if(!a)return b;if(!b)return a;H(a)&&(a=a.join(\" \"));H(b)&&(b=b.join(\" \"));return a+\" \"+b}function zg(a){A(a)&&\n(a=a.split(\" \"));var b=T();r(a,function(a){a.length&&(b[a]=!0)});return b}function ra(a){return D(a)?a:{}}function Ag(a,b,d,c,e){function f(){qa=null;k()}function g(){t=y();t=z(t)?null:t;va(t,P)&&(t=P);N=P=t}function k(){var a=N;g();if(v!==h.url()||a!==t)v=h.url(),N=t,r(J,function(a){a(h.url(),t)})}var h=this,l=a.location,m=a.history,p=a.setTimeout,n=a.clearTimeout,s={},G=e(d);h.isMock=!1;h.$$completeOutstandingRequest=G.completeTask;h.$$incOutstandingRequestCount=G.incTaskCount;h.notifyWhenNoOutstandingRequests=\nG.notifyWhenNoPendingTasks;var t,N,v=l.href,jc=b.find(\"base\"),qa=null,y=c.history?function(){try{return m.state}catch(a){}}:E;g();h.url=function(b,d,e){z(e)&&(e=null);l!==a.location&&(l=a.location);m!==a.history&&(m=a.history);if(b){var f=N===e;b=ga(b).href;if(v===b&&(!c.history||f))return h;var k=v&&Da(v)===Da(b);v=b;N=e;!c.history||k&&f?(k||(qa=b),d?l.replace(b):k?(d=l,e=b,f=e.indexOf(\"#\"),e=-1===f?\"\":e.substr(f),d.hash=e):l.href=b,l.href!==b&&(qa=b)):(m[d?\"replaceState\":\"pushState\"](e,\"\",b),g());\nqa&&(qa=b);return h}return(qa||l.href).replace(/#$/,\"\")};h.state=function(){return t};var J=[],I=!1,P=null;h.onUrlChange=function(b){if(!I){if(c.history)x(a).on(\"popstate\",f);x(a).on(\"hashchange\",f);I=!0}J.push(b);return b};h.$$applicationDestroyed=function(){x(a).off(\"hashchange popstate\",f)};h.$$checkUrlChange=k;h.baseHref=function(){var a=jc.attr(\"href\");return a?a.replace(/^(https?:)?\\/\\/[^/]*/,\"\"):\"\"};h.defer=function(a,b,c){var d;b=b||0;c=c||G.DEFAULT_TASK_TYPE;G.incTaskCount(c);d=p(function(){delete s[d];\nG.completeTask(a,c)},b);s[d]=c;return d};h.defer.cancel=function(a){if(s.hasOwnProperty(a)){var b=s[a];delete s[a];n(a);G.completeTask(E,b);return!0}return!1}}function Df(){this.$get=[\"$window\",\"$log\",\"$sniffer\",\"$document\",\"$$taskTrackerFactory\",function(a,b,d,c,e){return new Ag(a,c,b,d,e)}]}function Ef(){this.$get=function(){function a(a,c){function e(a){a!==p&&(n?n===a&&(n=a.n):n=a,f(a.n,a.p),f(a,p),p=a,p.n=null)}function f(a,b){a!==b&&(a&&(a.p=b),b&&(b.n=a))}if(a in b)throw F(\"$cacheFactory\")(\"iid\",\na);var g=0,k=S({},c,{id:a}),h=T(),l=c&&c.capacity||Number.MAX_VALUE,m=T(),p=null,n=null;return b[a]={put:function(a,b){if(!z(b)){if(l<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in h||g++;h[a]=b;g>l&&this.remove(n.key);return b}},get:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;e(b)}return h[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;b===p&&(p=b.p);b===n&&(n=b.n);f(b.n,b.p);delete m[a]}a in h&&(delete h[a],g--)},removeAll:function(){h=T();g=0;m=T();\np=n=null},destroy:function(){m=k=h=null;delete b[a]},info:function(){return S({},k,{size:g})}}}var b={};a.info=function(){var a={};r(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function cg(){this.$get=[\"$cacheFactory\",function(a){return a(\"templates\")}]}function Xc(a,b){function d(a,b,c){var d=/^([@&]|[=<](\\*?))(\\??)\\s*([\\w$]*)$/,e=T();r(a,function(a,f){a=a.trim();if(a in p)e[f]=p[a];else{var g=a.match(d);if(!g)throw $(\"iscp\",b,f,a,c?\"controller bindings definition\":\n\"isolate scope definition\");e[f]={mode:g[1][0],collection:\"*\"===g[2],optional:\"?\"===g[3],attrName:g[4]||f};g[4]&&(p[a]=e[f])}});return e}function c(a){var b=a.charAt(0);if(!b||b!==K(b))throw $(\"baddir\",a);if(a!==a.trim())throw $(\"baddir\",a);}function e(a){var b=a.require||a.controller&&a.name;!H(b)&&D(b)&&r(b,function(a,c){var d=a.match(l);a.substring(d[0].length)||(b[c]=d[0]+c)});return b}var f={},g=/^\\s*directive:\\s*([\\w-]+)\\s+(.*)$/,k=/(([\\w-]+)(?::([^;]+))?;?)/,h=we(\"ngSrc,ngSrcset,src,srcset\"),\nl=/^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/,m=/^(on[a-z]+|formaction)$/,p=T();this.directive=function qa(b,d){gb(b,\"name\");Ja(b,\"directive\");A(b)?(c(b),gb(d,\"directiveFactory\"),f.hasOwnProperty(b)||(f[b]=[],a.factory(b+\"Directive\",[\"$injector\",\"$exceptionHandler\",function(a,c){var d=[];r(f[b],function(f,g){try{var h=a.invoke(f);B(h)?h={compile:ia(h)}:!h.compile&&h.link&&(h.compile=ia(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=e(h);var k=h,l=h.restrict;if(l&&(!A(l)||!/[EACM]/.test(l)))throw $(\"badrestrict\",\nl,b);k.restrict=l||\"EA\";h.$$moduleName=f.$$moduleName;d.push(h)}catch(m){c(m)}});return d}])),f[b].push(d)):r(b,Yb(qa));return this};this.component=function y(a,b){function c(a){function e(b){return B(b)||H(b)?function(c,d){return a.invoke(b,this,{$element:c,$attrs:d})}:b}var f=b.template||b.templateUrl?b.template:\"\",g={controller:d,controllerAs:Bg(b.controller)||b.controllerAs||\"$ctrl\",template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:\"E\",\nrequire:b.require};r(b,function(a,b){\"$\"===b.charAt(0)&&(g[b]=a)});return g}if(!A(a))return r(a,Yb(Va(this,y))),this;var d=b.controller||function(){};r(b,function(a,b){\"$\"===b.charAt(0)&&(c[b]=a,B(d)&&(d[b]=a))});c.$inject=[\"$injector\"];return this.directive(a,c)};this.aHrefSanitizationWhitelist=function(a){return w(a)?(b.aHrefSanitizationWhitelist(a),this):b.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=function(a){return w(a)?(b.imgSrcSanitizationWhitelist(a),this):b.imgSrcSanitizationWhitelist()};\nvar n=!0;this.debugInfoEnabled=function(a){return w(a)?(n=a,this):n};var s=!1;this.strictComponentBindingsEnabled=function(a){return w(a)?(s=a,this):s};var G=10;this.onChangesTtl=function(a){return arguments.length?(G=a,this):G};var t=!0;this.commentDirectivesEnabled=function(a){return arguments.length?(t=a,this):t};var N=!0;this.cssClassDirectivesEnabled=function(a){return arguments.length?(N=a,this):N};var v=T();this.addPropertySecurityContext=function(a,b,c){var d=a.toLowerCase()+\"|\"+b.toLowerCase();\nif(d in v&&v[d]!==c)throw $(\"ctxoverride\",a,b,v[d],c);v[d]=c;return this};(function(){function a(b,c){r(c,function(a){v[a.toLowerCase()]=b})}a(V.HTML,[\"iframe|srcdoc\",\"*|innerHTML\",\"*|outerHTML\"]);a(V.CSS,[\"*|style\"]);a(V.URL,\"area|href area|ping a|href a|ping blockquote|cite body|background del|cite input|src ins|cite q|cite\".split(\" \"));a(V.MEDIA_URL,\"audio|src img|src img|srcset source|src source|srcset track|src video|src video|poster\".split(\" \"));a(V.RESOURCE_URL,\"*|formAction applet|code applet|codebase base|href embed|src frame|src form|action head|profile html|manifest iframe|src link|href media|src object|codebase object|data script|src\".split(\" \"))})();\nthis.$get=[\"$injector\",\"$interpolate\",\"$exceptionHandler\",\"$templateRequest\",\"$parse\",\"$controller\",\"$rootScope\",\"$sce\",\"$animate\",function(a,b,c,e,p,M,L,u,R){function q(){try{if(!--Ja)throw Ua=void 0,$(\"infchng\",G);L.$apply(function(){for(var a=0,b=Ua.length;a<b;++a)try{Ua[a]()}catch(d){c(d)}Ua=void 0})}finally{Ja++}}function ma(a,b){if(!a)return a;if(!A(a))throw $(\"srcset\",b,a.toString());for(var c=\"\",d=U(a),e=/(\\s+\\d+x\\s*,|\\s+\\d+w\\s*,|\\s+,|,\\s+)/,e=/\\s/.test(d)?e:/(,)/,d=d.split(e),e=Math.floor(d.length/\n2),f=0;f<e;f++)var g=2*f,c=c+u.getTrustedMediaUrl(U(d[g])),c=c+(\" \"+U(d[g+1]));d=U(d[2*f]).split(/\\s/);c+=u.getTrustedMediaUrl(U(d[0]));2===d.length&&(c+=\" \"+U(d[1]));return c}function w(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a}function O(a,b,c){Fa.innerHTML=\"<span \"+b+\">\";b=Fa.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function sa(a,b){try{a.addClass(b)}catch(c){}}\nfunction da(a,b,c,d,e){a instanceof x||(a=x(a));var f=Xa(a,b,a,c,d,e);da.$$addScopeClass(a);var g=null;return function(b,c,d){if(!a)throw $(\"multilink\");gb(b,\"scope\");e&&e.needsNewScope&&(b=b.$parent.$new());d=d||{};var h=d.parentBoundTranscludeFn,k=d.transcludeControllers;d=d.futureParentElement;h&&h.$$boundTransclude&&(h=h.$$boundTransclude);g||(g=(d=d&&d[0])?\"foreignobject\"!==ua(d)&&la.call(d).match(/SVG/)?\"svg\":\"html\":\"html\");d=\"html\"!==g?x(ja(g,x(\"<div></div>\").append(a).html())):c?Wa.clone.call(a):\na;if(k)for(var l in k)d.data(\"$\"+l+\"Controller\",k[l].instance);da.$$addScopeInfo(d,b);c&&c(d,b);f&&f(b,d,d,h);c||(a=f=null);return d}}function Xa(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,p,I,t;if(n)for(t=Array(c.length),m=0;m<h.length;m+=3)f=h[m],t[f]=c[f];else t=c;m=0;for(p=h.length;m<p;)k=t[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=a.$new(),da.$$addScopeInfo(x(k),l)):l=a,I=c.transcludeOnThisElement?ka(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?ka(a,b):null,c(f,l,k,d,I)):f&&f(a,k.childNodes,\nvoid 0,e)}for(var h=[],k=H(a)||a instanceof x,l,m,p,I,n,t=0;t<a.length;t++){l=new w;11===Ca&&ib(a,t,k);m=sc(a[t],[],l,0===t?d:void 0,e);(f=m.length?aa(m,a[t],l,b,c,null,[],[],f):null)&&f.scope&&da.$$addScopeClass(l.$$element);l=f&&f.terminal||!(p=a[t].childNodes)||!p.length?null:Xa(p,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||l)h.push(t,f,l),I=!0,n=n||f;f=null}return I?g:null}function ib(a,b,c){var d=a[b],e=d.parentNode,f;if(d.nodeType===Pa)for(;;){f=e?d.nextSibling:\na[b+1];if(!f||f.nodeType!==Pa)break;d.nodeValue+=f.nodeValue;f.parentNode&&f.parentNode.removeChild(f);c&&f===a[b+1]&&a.splice(b+1,1)}}function ka(a,b,c){function d(e,f,g,h,k){e||(e=a.$new(!1,k),e.$$transcluded=!0);return b(e,f,{parentBoundTranscludeFn:c,transcludeControllers:g,futureParentElement:h})}var e=d.$$slots=T(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?ka(a,b.$$slots[f],c):null;return d}function sc(a,b,d,e,f){var g=d.$attr,h;switch(a.nodeType){case 1:h=ua(a);X(b,wa(h),\"E\",e,f);for(var l,m,\nn,t,J,s=a.attributes,v=0,G=s&&s.length;v<G;v++){var P=!1,N=!1,r=!1,y=!1,u=!1,M;l=s[v];m=l.name;t=l.value;n=wa(m.toLowerCase());(J=n.match(Ra))?(r=\"Attr\"===J[1],y=\"Prop\"===J[1],u=\"On\"===J[1],m=m.replace(pd,\"\").toLowerCase().substr(4+J[1].length).replace(/_(.)/g,function(a,b){return b.toUpperCase()})):(M=n.match(Sa))&&ca(M[1])&&(P=m,N=m.substr(0,m.length-5)+\"end\",m=m.substr(0,m.length-6));if(y||u)d[n]=t,g[n]=l.name,y?Ea(a,b,n,m):b.push(qd(p,L,c,n,m,!1));else{n=wa(m.toLowerCase());g[n]=m;if(r||!d.hasOwnProperty(n))d[n]=\nt,ld(a,n)&&(d[n]=!0);Ia(a,b,t,n,r);X(b,n,\"A\",e,f,P,N)}}\"input\"===h&&\"hidden\"===a.getAttribute(\"type\")&&a.setAttribute(\"autocomplete\",\"off\");if(!Qa)break;g=a.className;D(g)&&(g=g.animVal);if(A(g)&&\"\"!==g)for(;a=k.exec(g);)n=wa(a[2]),X(b,n,\"C\",e,f)&&(d[n]=U(a[3])),g=g.substr(a.index+a[0].length);break;case Pa:na(b,a.nodeValue);break;case 8:if(!Oa)break;F(a,b,d,e,f)}b.sort(ia);return b}function F(a,b,c,d,e){try{var f=g.exec(a.nodeValue);if(f){var h=wa(f[1]);X(b,h,\"M\",d,e)&&(c[h]=U(f[2]))}}catch(k){}}\nfunction V(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw $(\"uterdir\",b,c);1===a.nodeType&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return x(d)}function Y(a,b,c){return function(d,e,f,g,h){e=V(e[0],b,c);return a(d,e,f,g,h)}}function Z(a,b,c,d,e,f){var g;return a?da(b,c,d,e,f):function(){g||(g=da(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function aa(a,b,d,e,f,g,h,k,l){function m(a,b,c,d){if(a){c&&(a=\nY(a,c,d));a.require=u.require;a.directiveName=Q;if(s===u||u.$$isolateScope)a=Aa(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=Y(b,c,d));b.require=u.require;b.directiveName=Q;if(s===u||u.$$isolateScope)b=Aa(b,{isolateScope:!0});k.push(b)}}function p(a,e,f,g,l){function m(a,b,c,d){var e;bb(a)||(d=c,c=b,b=a,a=void 0);N&&(e=P);c||(c=N?Q.parent():Q);if(d){var f=l.$$slots[d];if(f)return f(a,b,e,c,R);if(z(f))throw $(\"noslot\",d,za(Q));}else return l(a,b,e,c,R)}var n,u,L,y,G,P,M,Q;b===f?(g=d,Q=d.$$element):(Q=\nx(f),g=new w(Q,d));G=e;s?y=e.$new(!0):t&&(G=e.$parent);l&&(M=m,M.$$boundTransclude=l,M.isSlotFilled=function(a){return!!l.$$slots[a]});J&&(P=ea(Q,g,M,J,y,e,s));s&&(da.$$addScopeInfo(Q,y,!0,!(v&&(v===s||v===s.$$originalDirective))),da.$$addScopeClass(Q,!0),y.$$isolateBindings=s.$$isolateBindings,u=Da(e,g,y,y.$$isolateBindings,s),u.removeWatches&&y.$on(\"$destroy\",u.removeWatches));for(n in P){u=J[n];L=P[n];var Cg=u.$$bindings.bindToController;L.instance=L();Q.data(\"$\"+u.name+\"Controller\",L.instance);\nL.bindingInfo=Da(G,g,L.instance,Cg,u)}r(J,function(a,b){var c=a.require;a.bindToController&&!H(c)&&D(c)&&S(P[b].instance,W(b,c,Q,P))});r(P,function(a){var b=a.instance;if(B(b.$onChanges))try{b.$onChanges(a.bindingInfo.initialChanges)}catch(d){c(d)}if(B(b.$onInit))try{b.$onInit()}catch(e){c(e)}B(b.$doCheck)&&(G.$watch(function(){b.$doCheck()}),b.$doCheck());B(b.$onDestroy)&&G.$on(\"$destroy\",function(){b.$onDestroy()})});n=0;for(u=h.length;n<u;n++)L=h[n],Ba(L,L.isolateScope?y:e,Q,g,L.require&&W(L.directiveName,\nL.require,Q,P),M);var R=e;s&&(s.template||null===s.templateUrl)&&(R=y);a&&a(R,f.childNodes,void 0,l);for(n=k.length-1;0<=n;n--)L=k[n],Ba(L,L.isolateScope?y:e,Q,g,L.require&&W(L.directiveName,L.require,Q,P),M);r(P,function(a){a=a.instance;B(a.$postLink)&&a.$postLink()})}l=l||{};for(var n=-Number.MAX_VALUE,t=l.newScopeDirective,J=l.controllerDirectives,s=l.newIsolateScopeDirective,v=l.templateDirective,L=l.nonTlbTranscludeDirective,G=!1,P=!1,N=l.hasElementTranscludeDirective,y=d.$$element=x(b),u,Q,\nM,R=e,q,ma=!1,Ib=!1,O,sa=0,A=a.length;sa<A;sa++){u=a[sa];var E=u.$$start,ib=u.$$end;E&&(y=V(b,E,ib));M=void 0;if(n>u.priority)break;if(O=u.scope)u.templateUrl||(D(O)?(ba(\"new/isolated scope\",s||t,u,y),s=u):ba(\"new/isolated scope\",s,u,y)),t=t||u;Q=u.name;if(!ma&&(u.replace&&(u.templateUrl||u.template)||u.transclude&&!u.$$tlb)){for(O=sa+1;ma=a[O++];)if(ma.transclude&&!ma.$$tlb||ma.replace&&(ma.templateUrl||ma.template)){Ib=!0;break}ma=!0}!u.templateUrl&&u.controller&&(J=J||T(),ba(\"'\"+Q+\"' controller\",\nJ[Q],u,y),J[Q]=u);if(O=u.transclude)if(G=!0,u.$$tlb||(ba(\"transclusion\",L,u,y),L=u),\"element\"===O)N=!0,n=u.priority,M=y,y=d.$$element=x(da.$$createComment(Q,d[Q])),b=y[0],pa(f,Ha.call(M,0),b),R=Z(Ib,M,e,n,g&&g.name,{nonTlbTranscludeDirective:L});else{var ka=T();if(D(O)){M=C.document.createDocumentFragment();var Xa=T(),F=T();r(O,function(a,b){var c=\"?\"===a.charAt(0);a=c?a.substring(1):a;Xa[a]=b;ka[b]=null;F[b]=c});r(y.contents(),function(a){var b=Xa[wa(ua(a))];b?(F[b]=!0,ka[b]=ka[b]||C.document.createDocumentFragment(),\nka[b].appendChild(a)):M.appendChild(a)});r(F,function(a,b){if(!a)throw $(\"reqslot\",b);});for(var K in ka)ka[K]&&(R=x(ka[K].childNodes),ka[K]=Z(Ib,R,e));M=x(M.childNodes)}else M=x(pc(b)).contents();y.empty();R=Z(Ib,M,e,void 0,void 0,{needsNewScope:u.$$isolateScope||u.$$newScope});R.$$slots=ka}if(u.template)if(P=!0,ba(\"template\",v,u,y),v=u,O=B(u.template)?u.template(y,d):u.template,O=Na(O),u.replace){g=u;M=mc.test(O)?rd(ja(u.templateNamespace,U(O))):[];b=M[0];if(1!==M.length||1!==b.nodeType)throw $(\"tplrt\",\nQ,\"\");pa(f,y,b);A={$attr:{}};O=sc(b,[],A);var Dg=a.splice(sa+1,a.length-(sa+1));(s||t)&&fa(O,s,t);a=a.concat(O).concat(Dg);ga(d,A);A=a.length}else y.html(O);if(u.templateUrl)P=!0,ba(\"template\",v,u,y),v=u,u.replace&&(g=u),p=ha(a.splice(sa,a.length-sa),y,d,f,G&&R,h,k,{controllerDirectives:J,newScopeDirective:t!==u&&t,newIsolateScopeDirective:s,templateDirective:v,nonTlbTranscludeDirective:L}),A=a.length;else if(u.compile)try{q=u.compile(y,d,R);var X=u.$$originalDirective||u;B(q)?m(null,Va(X,q),E,ib):\nq&&m(Va(X,q.pre),Va(X,q.post),E,ib)}catch(ca){c(ca,za(y))}u.terminal&&(p.terminal=!0,n=Math.max(n,u.priority))}p.scope=t&&!0===t.scope;p.transcludeOnThisElement=G;p.templateOnThisElement=P;p.transclude=R;l.hasElementTranscludeDirective=N;return p}function W(a,b,c,d){var e;if(A(b)){var f=b.match(l);b=b.substring(f[0].length);var g=f[1]||f[3],f=\"?\"===f[2];\"^^\"===g?c=c.parent():e=(e=d&&d[b])&&e.instance;if(!e){var h=\"$\"+b+\"Controller\";e=\"^^\"===g&&c[0]&&9===c[0].nodeType?null:g?c.inheritedData(h):c.data(h)}if(!e&&\n!f)throw $(\"ctreq\",b,a);}else if(H(b))for(e=[],g=0,f=b.length;g<f;g++)e[g]=W(a,b[g],c,d);else D(b)&&(e={},r(b,function(b,f){e[f]=W(a,b,c,d)}));return e||null}function ea(a,b,c,d,e,f,g){var h=T(),k;for(k in d){var l=d[k],m={$scope:l===g||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},p=l.controller;\"@\"===p&&(p=b[l.name]);m=M(p,m,!0,l.controllerAs);h[l.name]=m;a.data(\"$\"+l.name+\"Controller\",m.instance)}return h}function fa(a,b,c){for(var d=0,e=a.length;d<e;d++)a[d]=ac(a[d],{$$isolateScope:b,\n$$newScope:c})}function X(b,c,e,g,h,k,l){if(c===h)return null;var m=null;if(f.hasOwnProperty(c)){h=a.get(c+\"Directive\");for(var p=0,n=h.length;p<n;p++)if(c=h[p],(z(g)||g>c.priority)&&-1!==c.restrict.indexOf(e)){k&&(c=ac(c,{$$start:k,$$end:l}));if(!c.$$bindings){var I=m=c,t=c.name,u={isolateScope:null,bindToController:null};D(I.scope)&&(!0===I.bindToController?(u.bindToController=d(I.scope,t,!0),u.isolateScope={}):u.isolateScope=d(I.scope,t,!1));D(I.bindToController)&&(u.bindToController=d(I.bindToController,\nt,!0));if(u.bindToController&&!I.controller)throw $(\"noctrl\",t);m=m.$$bindings=u;D(m.isolateScope)&&(c.$$isolateBindings=m.isolateScope)}b.push(c);m=c}}return m}function ca(b){if(f.hasOwnProperty(b))for(var c=a.get(b+\"Directive\"),d=0,e=c.length;d<e;d++)if(b=c[d],b.multiElement)return!0;return!1}function ga(a,b){var c=b.$attr,d=a.$attr;r(a,function(d,e){\"$\"!==e.charAt(0)&&(b[e]&&b[e]!==d&&(d=d.length?d+((\"style\"===e?\";\":\" \")+b[e]):b[e]),a.$set(e,d,!0,c[e]))});r(b,function(b,e){a.hasOwnProperty(e)||\n\"$\"===e.charAt(0)||(a[e]=b,\"class\"!==e&&\"style\"!==e&&(d[e]=c[e]))})}function ha(a,b,d,f,g,h,k,l){var m=[],p,n,t=b[0],u=a.shift(),J=ac(u,{templateUrl:null,transclude:null,replace:null,$$originalDirective:u}),s=B(u.templateUrl)?u.templateUrl(b,d):u.templateUrl,L=u.templateNamespace;b.empty();e(s).then(function(c){var e,I;c=Na(c);if(u.replace){c=mc.test(c)?rd(ja(L,U(c))):[];e=c[0];if(1!==c.length||1!==e.nodeType)throw $(\"tplrt\",u.name,s);c={$attr:{}};pa(f,b,e);var v=sc(e,[],c);D(u.scope)&&fa(v,!0);a=\nv.concat(a);ga(d,c)}else e=t,b.html(c);a.unshift(J);p=aa(a,e,d,g,b,u,h,k,l);r(f,function(a,c){a===e&&(f[c]=b[0])});for(n=Xa(b[0].childNodes,g);m.length;){c=m.shift();I=m.shift();var y=m.shift(),P=m.shift(),v=b[0];if(!c.$$destroyed){if(I!==t){var G=I.className;l.hasElementTranscludeDirective&&u.replace||(v=pc(e));pa(y,x(I),v);sa(x(v),G)}I=p.transcludeOnThisElement?ka(c,p.transclude,P):P;p(n,c,v,f,I)}}m=null}).catch(function(a){cc(a)&&c(a)});return function(a,b,c,d,e){a=e;b.$$destroyed||(m?m.push(b,\nc,d,a):(p.transcludeOnThisElement&&(a=ka(b,p.transclude,e)),p(n,b,c,d,a)))}}function ia(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function ba(a,b,c,d){function e(a){return a?\" (module: \"+a+\")\":\"\"}if(b)throw $(\"multidir\",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,za(d));}function na(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&&da.$$addBindingClass(a);return function(a,c){var e=c.parent();\nb||da.$$addBindingClass(e);da.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function ja(a,b){a=K(a||\"html\");switch(a){case \"svg\":case \"math\":var c=C.document.createElement(\"div\");c.innerHTML=\"<\"+a+\">\"+b+\"</\"+a+\">\";return c.childNodes[0].childNodes;default:return b}}function oa(a,b){if(\"srcdoc\"===b)return u.HTML;if(\"src\"===b||\"ngSrc\"===b)return-1===[\"img\",\"video\",\"audio\",\"source\",\"track\"].indexOf(a)?u.RESOURCE_URL:u.MEDIA_URL;if(\"xlinkHref\"===b)return\"image\"===a?u.MEDIA_URL:\n\"a\"===a?u.URL:u.RESOURCE_URL;if(\"form\"===a&&\"action\"===b||\"base\"===a&&\"href\"===b||\"link\"===a&&\"href\"===b)return u.RESOURCE_URL;if(\"a\"===a&&(\"href\"===b||\"ngHref\"===b))return u.URL}function xa(a,b){var c=b.toLowerCase();return v[a+\"|\"+c]||v[\"*|\"+c]}function ya(a){return ma(u.valueOf(a),\"ng-prop-srcset\")}function Ea(a,b,c,d){if(m.test(d))throw $(\"nodomevents\");a=ua(a);var e=xa(a,d),f=Ta;\"srcset\"!==d||\"img\"!==a&&\"source\"!==a?e&&(f=u.getTrusted.bind(u,e)):f=ya;b.push({priority:100,compile:function(a,b){var e=\np(b[c]),g=p(b[c],function(a){return u.valueOf(a)});return{pre:function(a,b){function c(){var g=e(a);b[0][d]=f(g)}c();a.$watch(g,c)}}}})}function Ia(a,c,d,e,f){var g=ua(a),k=oa(g,e),l=h[e]||f,p=b(d,!f,k,l);if(p){if(\"multiple\"===e&&\"select\"===g)throw $(\"selmulti\",za(a));if(m.test(e))throw $(\"nodomevents\");c.push({priority:100,compile:function(){return{pre:function(a,c,f){c=f.$$observers||(f.$$observers=T());var g=f[e];g!==d&&(p=g&&b(g,!0,k,l),d=g);p&&(f[e]=p(a),(c[e]||(c[e]=[])).$$inter=!0,(f.$$observers&&\nf.$$observers[e].$$scope||a).$watch(p,function(a,b){\"class\"===e&&a!==b?f.$updateClass(a,b):f.$set(e,a)}))}}}})}}function pa(a,b,c){var d=b[0],e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]===d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=C.document.createDocumentFragment();for(g=0;g<e;g++)a.appendChild(b[g]);x.hasData(d)&&(x.data(c,x.data(d)),x(d).off(\"$destroy\"));x.cleanData(a.querySelectorAll(\"*\"));\nfor(g=1;g<e;g++)delete b[g];b[0]=c;b.length=1}function Aa(a,b){return S(function(){return a.apply(null,arguments)},a,b)}function Ba(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,za(d))}}function ra(a,b){if(s)throw $(\"missingattr\",a,b);}function Da(a,c,d,e,f){function g(b,c,e){B(d.$onChanges)&&!dc(c,e)&&(Ua||(a.$$postDigest(q),Ua=[]),m||(m={},Ua.push(h)),m[b]&&(e=m[b].previousValue),m[b]=new Jb(e,c))}function h(){d.$onChanges(m);m=void 0}var k=[],l={},m;r(e,function(e,h){var m=e.attrName,n=e.optional,\nI,t,u,s;switch(e.mode){case \"@\":n||ta.call(c,m)||(ra(m,f.name),d[h]=c[m]=void 0);n=c.$observe(m,function(a){if(A(a)||Ga(a))g(h,a,d[h]),d[h]=a});c.$$observers[m].$$scope=a;I=c[m];A(I)?d[h]=b(I)(a):Ga(I)&&(d[h]=I);l[h]=new Jb(tc,d[h]);k.push(n);break;case \"=\":if(!ta.call(c,m)){if(n)break;ra(m,f.name);c[m]=void 0}if(n&&!c[m])break;t=p(c[m]);s=t.literal?va:dc;u=t.assign||function(){I=d[h]=t(a);throw $(\"nonassign\",c[m],m,f.name);};I=d[h]=t(a);n=function(b){s(b,d[h])||(s(b,I)?u(a,b=d[h]):d[h]=b);return I=\nb};n.$stateful=!0;n=e.collection?a.$watchCollection(c[m],n):a.$watch(p(c[m],n),null,t.literal);k.push(n);break;case \"<\":if(!ta.call(c,m)){if(n)break;ra(m,f.name);c[m]=void 0}if(n&&!c[m])break;t=p(c[m]);var v=t.literal,L=d[h]=t(a);l[h]=new Jb(tc,d[h]);n=a[e.collection?\"$watchCollection\":\"$watch\"](t,function(a,b){if(b===a){if(b===L||v&&va(b,L))return;b=L}g(h,a,b);d[h]=a});k.push(n);break;case \"&\":n||ta.call(c,m)||ra(m,f.name);t=c.hasOwnProperty(m)?p(c[m]):E;if(t===E&&n)break;d[h]=function(b){return t(a,\nb)}}});return{initialChanges:l,removeWatches:k.length&&function(){for(var a=0,b=k.length;a<b;++a)k[a]()}}}var Ma=/^\\w/,Fa=C.document.createElement(\"div\"),Oa=t,Qa=N,Ja=G,Ua;w.prototype={$normalize:wa,$addClass:function(a){a&&0<a.length&&R.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&R.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=sd(a,b);c&&c.length&&R.addClass(this.$$element,c);(c=sd(b,a))&&c.length&&R.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=\nld(this.$$element[0],a),g=td[a],h=a;f?(this.$$element.prop(a,b),e=f):g&&(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Vc(a,\"-\"));\"img\"===ua(this.$$element)&&\"srcset\"===a&&(this[a]=b=ma(b,\"$set('srcset', value)\"));!1!==d&&(null===b||z(b)?this.$$element.removeAttr(e):Ma.test(e)?f&&!1===b?this.$$element.removeAttr(e):this.$$element.attr(e,b):O(this.$$element[0],e,b));(a=this.$$observers)&&r(a[h],function(a){try{a(b)}catch(d){c(d)}})},$observe:function(a,b){var c=this,\nd=c.$$observers||(c.$$observers=T()),e=d[a]||(d[a]=[]);e.push(b);L.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||z(c[a])||b(c[a])});return function(){cb(e,b)}}};var Ka=b.startSymbol(),La=b.endSymbol(),Na=\"{{\"===Ka&&\"}}\"===La?Ta:function(a){return a.replace(/\\{\\{/g,Ka).replace(/}}/g,La)},Ra=/^ng(Attr|Prop|On)([A-Z].*)$/,Sa=/^(.+)Start$/;da.$$addBindingInfo=n?function(a,b){var c=a.data(\"$binding\")||[];H(b)?c=c.concat(b):c.push(b);a.data(\"$binding\",c)}:E;da.$$addBindingClass=n?function(a){sa(a,\n\"ng-binding\")}:E;da.$$addScopeInfo=n?function(a,b,c,d){a.data(c?d?\"$isolateScopeNoTemplate\":\"$isolateScope\":\"$scope\",b)}:E;da.$$addScopeClass=n?function(a,b){sa(a,b?\"ng-isolate-scope\":\"ng-scope\")}:E;da.$$createComment=function(a,b){var c=\"\";n&&(c=\" \"+(a||\"\")+\": \",b&&(c+=b+\" \"));return C.document.createComment(c)};return da}]}function Jb(a,b){this.previousValue=a;this.currentValue=b}function wa(a){return a.replace(pd,\"\").replace(Eg,function(a,d,c){return c?d.toUpperCase():d})}function sd(a,b){var d=\n\"\",c=a.split(/\\s+/),e=b.split(/\\s+/),f=0;a:for(;f<c.length;f++){for(var g=c[f],k=0;k<e.length;k++)if(g===e[k])continue a;d+=(0<d.length?\" \":\"\")+g}return d}function rd(a){a=x(a);var b=a.length;if(1>=b)return a;for(;b--;){var d=a[b];(8===d.nodeType||d.nodeType===Pa&&\"\"===d.nodeValue.trim())&&Fg.call(a,b,1)}return a}function Bg(a,b){if(b&&A(b))return b;if(A(a)){var d=ud.exec(a);if(d)return d[3]}}function Ff(){var a={};this.has=function(b){return a.hasOwnProperty(b)};this.register=function(b,d){Ja(b,\n\"controller\");D(b)?S(a,b):a[b]=d};this.$get=[\"$injector\",function(b){function d(a,b,d,g){if(!a||!D(a.$scope))throw F(\"$controller\")(\"noscp\",g,b);a.$scope[b]=d}return function(c,e,f,g){var k,h,l;f=!0===f;g&&A(g)&&(l=g);if(A(c)){g=c.match(ud);if(!g)throw vd(\"ctrlfmt\",c);h=g[1];l=l||g[3];c=a.hasOwnProperty(h)?a[h]:Ge(e.$scope,h,!0);if(!c)throw vd(\"ctrlreg\",h);sb(c,h,!0)}if(f)return f=(H(c)?c[c.length-1]:c).prototype,k=Object.create(f||null),l&&d(e,l,k,h||c.name),S(function(){var a=b.invoke(c,k,e,h);\na!==k&&(D(a)||B(a))&&(k=a,l&&d(e,l,k,h||c.name));return k},{instance:k,identifier:l});k=b.instantiate(c,e,h);l&&d(e,l,k,h||c.name);return k}}]}function Gf(){this.$get=[\"$window\",function(a){return x(a.document)}]}function Hf(){this.$get=[\"$document\",\"$rootScope\",function(a,b){function d(){e=c.hidden}var c=a[0],e=c&&c.hidden;a.on(\"visibilitychange\",d);b.$on(\"$destroy\",function(){a.off(\"visibilitychange\",d)});return function(){return e}}]}function If(){this.$get=[\"$log\",function(a){return function(b,\nd){a.error.apply(a,arguments)}}]}function uc(a){return D(a)?ha(a)?a.toISOString():eb(a):a}function Of(){this.$get=function(){return function(a){if(!a)return\"\";var b=[];Oc(a,function(a,c){null===a||z(a)||B(a)||(H(a)?r(a,function(a){b.push(ba(c)+\"=\"+ba(uc(a)))}):b.push(ba(c)+\"=\"+ba(uc(a))))});return b.join(\"&\")}}}function Pf(){this.$get=function(){return function(a){function b(a,e,f){H(a)?r(a,function(a,c){b(a,e+\"[\"+(D(a)?c:\"\")+\"]\")}):D(a)&&!ha(a)?Oc(a,function(a,c){b(a,e+(f?\"\":\"[\")+c+(f?\"\":\"]\"))}):\n(B(a)&&(a=a()),d.push(ba(e)+\"=\"+(null==a?\"\":ba(uc(a)))))}if(!a)return\"\";var d=[];b(a,\"\",!0);return d.join(\"&\")}}}function vc(a,b){if(A(a)){var d=a.replace(Gg,\"\").trim();if(d){var c=b(\"Content-Type\"),c=c&&0===c.indexOf(wd),e;(e=c)||(e=(e=d.match(Hg))&&Ig[e[0]].test(d));if(e)try{a=Rc(d)}catch(f){if(!c)return a;throw Kb(\"baddata\",a,f);}}}return a}function xd(a){var b=T(),d;A(a)?r(a.split(\"\\n\"),function(a){d=a.indexOf(\":\");var e=K(U(a.substr(0,d)));a=U(a.substr(d+1));e&&(b[e]=b[e]?b[e]+\", \"+a:a)}):D(a)&&\nr(a,function(a,d){var f=K(d),g=U(a);f&&(b[f]=b[f]?b[f]+\", \"+g:g)});return b}function yd(a){var b;return function(d){b||(b=xd(a));return d?(d=b[K(d)],void 0===d&&(d=null),d):b}}function zd(a,b,d,c){if(B(c))return c(a,b,d);r(c,function(c){a=c(a,b,d)});return a}function Nf(){var a=this.defaults={transformResponse:[vc],transformRequest:[function(a){return D(a)&&\"[object File]\"!==la.call(a)&&\"[object Blob]\"!==la.call(a)&&\"[object FormData]\"!==la.call(a)?eb(a):a}],headers:{common:{Accept:\"application/json, text/plain, */*\"},\npost:ja(wc),put:ja(wc),patch:ja(wc)},xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",paramSerializer:\"$httpParamSerializer\",jsonpCallbackParam:\"callback\"},b=!1;this.useApplyAsync=function(a){return w(a)?(b=!!a,this):b};var d=this.interceptors=[],c=this.xsrfWhitelistedOrigins=[];this.$get=[\"$browser\",\"$httpBackend\",\"$$cookieReader\",\"$cacheFactory\",\"$rootScope\",\"$q\",\"$injector\",\"$sce\",function(e,f,g,k,h,l,m,p){function n(b){function c(a,b){for(var d=0,e=b.length;d<e;){var f=b[d++],g=b[d++];\na=a.then(f,g)}b.length=0;return a}function d(a,b){var c,e={};r(a,function(a,d){B(a)?(c=a(b),null!=c&&(e[d]=c)):e[d]=a});return e}function f(a){var b=S({},a);b.data=zd(a.data,a.headers,a.status,g.transformResponse);a=a.status;return 200<=a&&300>a?b:l.reject(b)}if(!D(b))throw F(\"$http\")(\"badreq\",b);if(!A(p.valueOf(b.url)))throw F(\"$http\")(\"badreq\",b.url);var g=S({method:\"get\",transformRequest:a.transformRequest,transformResponse:a.transformResponse,paramSerializer:a.paramSerializer,jsonpCallbackParam:a.jsonpCallbackParam},\nb);g.headers=function(b){var c=a.headers,e=S({},b.headers),f,g,h,c=S({},c.common,c[K(b.method)]);a:for(f in c){g=K(f);for(h in e)if(K(h)===g)continue a;e[f]=c[f]}return d(e,ja(b))}(b);g.method=ub(g.method);g.paramSerializer=A(g.paramSerializer)?m.get(g.paramSerializer):g.paramSerializer;e.$$incOutstandingRequestCount(\"$http\");var h=[],k=[];b=l.resolve(g);r(v,function(a){(a.request||a.requestError)&&h.unshift(a.request,a.requestError);(a.response||a.responseError)&&k.push(a.response,a.responseError)});\nb=c(b,h);b=b.then(function(b){var c=b.headers,d=zd(b.data,yd(c),void 0,b.transformRequest);z(d)&&r(c,function(a,b){\"content-type\"===K(b)&&delete c[b]});z(b.withCredentials)&&!z(a.withCredentials)&&(b.withCredentials=a.withCredentials);return s(b,d).then(f,f)});b=c(b,k);return b=b.finally(function(){e.$$completeOutstandingRequest(E,\"$http\")})}function s(c,d){function e(a){if(a){var c={};r(a,function(a,d){c[d]=function(c){function d(){a(c)}b?h.$applyAsync(d):h.$$phase?d():h.$apply(d)}});return c}}function k(a,\nc,d,e,f){function g(){m(c,a,d,e,f)}R&&(200<=a&&300>a?R.put(O,[a,c,xd(d),e,f]):R.remove(O));b?h.$applyAsync(g):(g(),h.$$phase||h.$apply())}function m(a,b,d,e,f){b=-1<=b?b:0;(200<=b&&300>b?L.resolve:L.reject)({data:a,status:b,headers:yd(d),config:c,statusText:e,xhrStatus:f})}function s(a){m(a.data,a.status,ja(a.headers()),a.statusText,a.xhrStatus)}function v(){var a=n.pendingRequests.indexOf(c);-1!==a&&n.pendingRequests.splice(a,1)}var L=l.defer(),u=L.promise,R,q,ma=c.headers,x=\"jsonp\"===K(c.method),\nO=c.url;x?O=p.getTrustedResourceUrl(O):A(O)||(O=p.valueOf(O));O=G(O,c.paramSerializer(c.params));x&&(O=t(O,c.jsonpCallbackParam));n.pendingRequests.push(c);u.then(v,v);!c.cache&&!a.cache||!1===c.cache||\"GET\"!==c.method&&\"JSONP\"!==c.method||(R=D(c.cache)?c.cache:D(a.cache)?a.cache:N);R&&(q=R.get(O),w(q)?q&&B(q.then)?q.then(s,s):H(q)?m(q[1],q[0],ja(q[2]),q[3],q[4]):m(q,200,{},\"OK\",\"complete\"):R.put(O,u));z(q)&&((q=jc(c.url)?g()[c.xsrfCookieName||a.xsrfCookieName]:void 0)&&(ma[c.xsrfHeaderName||a.xsrfHeaderName]=\nq),f(c.method,O,d,k,ma,c.timeout,c.withCredentials,c.responseType,e(c.eventHandlers),e(c.uploadEventHandlers)));return u}function G(a,b){0<b.length&&(a+=(-1===a.indexOf(\"?\")?\"?\":\"&\")+b);return a}function t(a,b){var c=a.split(\"?\");if(2<c.length)throw Kb(\"badjsonp\",a);c=gc(c[1]);r(c,function(c,d){if(\"JSON_CALLBACK\"===c)throw Kb(\"badjsonp\",a);if(d===b)throw Kb(\"badjsonp\",b,a);});return a+=(-1===a.indexOf(\"?\")?\"?\":\"&\")+b+\"=JSON_CALLBACK\"}var N=k(\"$http\");a.paramSerializer=A(a.paramSerializer)?m.get(a.paramSerializer):\na.paramSerializer;var v=[];r(d,function(a){v.unshift(A(a)?m.get(a):m.invoke(a))});var jc=Jg(c);n.pendingRequests=[];(function(a){r(arguments,function(a){n[a]=function(b,c){return n(S({},c||{},{method:a,url:b}))}})})(\"get\",\"delete\",\"head\",\"jsonp\");(function(a){r(arguments,function(a){n[a]=function(b,c,d){return n(S({},d||{},{method:a,url:b,data:c}))}})})(\"post\",\"put\",\"patch\");n.defaults=a;return n}]}function Rf(){this.$get=function(){return function(){return new C.XMLHttpRequest}}}function Qf(){this.$get=\n[\"$browser\",\"$jsonpCallbacks\",\"$document\",\"$xhrFactory\",function(a,b,d,c){return Kg(a,c,a.defer,b,d[0])}]}function Kg(a,b,d,c,e){function f(a,b,d){a=a.replace(\"JSON_CALLBACK\",b);var f=e.createElement(\"script\"),m=null;f.type=\"text/javascript\";f.src=a;f.async=!0;m=function(a){f.removeEventListener(\"load\",m);f.removeEventListener(\"error\",m);e.body.removeChild(f);f=null;var g=-1,s=\"unknown\";a&&(\"load\"!==a.type||c.wasCalled(b)||(a={type:\"error\"}),s=a.type,g=\"error\"===a.type?404:200);d&&d(g,s)};f.addEventListener(\"load\",\nm);f.addEventListener(\"error\",m);e.body.appendChild(f);return m}return function(e,k,h,l,m,p,n,s,G,t){function N(a){J=\"timeout\"===a;qa&&qa();y&&y.abort()}function v(a,b,c,e,f,g){w(P)&&d.cancel(P);qa=y=null;a(b,c,e,f,g)}k=k||a.url();if(\"jsonp\"===K(e))var q=c.createCallback(k),qa=f(k,q,function(a,b){var d=200===a&&c.getResponse(q);v(l,a,d,\"\",b,\"complete\");c.removeCallback(q)});else{var y=b(e,k),J=!1;y.open(e,k,!0);r(m,function(a,b){w(a)&&y.setRequestHeader(b,a)});y.onload=function(){var a=y.statusText||\n\"\",b=\"response\"in y?y.response:y.responseText,c=1223===y.status?204:y.status;0===c&&(c=b?200:\"file\"===ga(k).protocol?404:0);v(l,c,b,y.getAllResponseHeaders(),a,\"complete\")};y.onerror=function(){v(l,-1,null,null,\"\",\"error\")};y.ontimeout=function(){v(l,-1,null,null,\"\",\"timeout\")};y.onabort=function(){v(l,-1,null,null,\"\",J?\"timeout\":\"abort\")};r(G,function(a,b){y.addEventListener(b,a)});r(t,function(a,b){y.upload.addEventListener(b,a)});n&&(y.withCredentials=!0);if(s)try{y.responseType=s}catch(I){if(\"json\"!==\ns)throw I;}y.send(z(h)?null:h)}if(0<p)var P=d(function(){N(\"timeout\")},p);else p&&B(p.then)&&p.then(function(){N(w(p.$$timeoutId)?\"timeout\":\"abort\")})}}function Kf(){var a=\"{{\",b=\"}}\";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=[\"$parse\",\"$exceptionHandler\",\"$sce\",function(d,c,e){function f(a){return\"\\\\\\\\\\\\\"+a}function g(c){return c.replace(p,a).replace(n,b)}function k(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}\nfunction h(f,h,n,p){function v(a){try{return a=n&&!r?e.getTrusted(n,a):e.valueOf(a),p&&!w(a)?a:ic(a)}catch(b){c(Ma.interr(f,b))}}var r=n===e.URL||n===e.MEDIA_URL;if(!f.length||-1===f.indexOf(a)){if(h)return;h=g(f);r&&(h=e.getTrusted(n,h));h=ia(h);h.exp=f;h.expressions=[];h.$$watchDelegate=k;return h}p=!!p;for(var q,y,J=0,I=[],P,Q=f.length,M=[],L=[],u;J<Q;)if(-1!==(q=f.indexOf(a,J))&&-1!==(y=f.indexOf(b,q+l)))J!==q&&M.push(g(f.substring(J,q))),J=f.substring(q+l,y),I.push(J),J=y+m,L.push(M.length),\nM.push(\"\");else{J!==Q&&M.push(g(f.substring(J)));break}u=1===M.length&&1===L.length;var R=r&&u?void 0:v;P=I.map(function(a){return d(a,R)});if(!h||I.length){var x=function(a){for(var b=0,c=I.length;b<c;b++){if(p&&z(a[b]))return;M[L[b]]=a[b]}if(r)return e.getTrusted(n,u?M[0]:M.join(\"\"));n&&1<M.length&&Ma.throwNoconcat(f);return M.join(\"\")};return S(function(a){var b=0,d=I.length,e=Array(d);try{for(;b<d;b++)e[b]=P[b](a);return x(e)}catch(g){c(Ma.interr(f,g))}},{exp:f,expressions:I,$$watchDelegate:function(a,\nb){var c;return a.$watchGroup(P,function(d,e){var f=x(d);b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,p=new RegExp(a.replace(/./g,f),\"g\"),n=new RegExp(b.replace(/./g,f),\"g\");h.startSymbol=function(){return a};h.endSymbol=function(){return b};return h}]}function Lf(){this.$get=[\"$$intervalFactory\",\"$window\",function(a,b){var d={},c=function(a){b.clearInterval(a);delete d[a]},e=a(function(a,c,e){a=b.setInterval(a,c);d[a]=e;return a},c);e.cancel=function(a){if(!a)return!1;if(!a.hasOwnProperty(\"$$intervalId\"))throw Lg(\"badprom\");\nif(!d.hasOwnProperty(a.$$intervalId))return!1;a=a.$$intervalId;var b=d[a],e=b.promise;e.$$state&&(e.$$state.pur=!0);b.reject(\"canceled\");c(a);return!0};return e}]}function Mf(){this.$get=[\"$browser\",\"$q\",\"$$q\",\"$rootScope\",function(a,b,d,c){return function(e,f){return function(g,k,h,l){function m(){p?g.apply(null,n):g(s)}var p=4<arguments.length,n=p?Ha.call(arguments,4):[],s=0,G=w(l)&&!l,t=(G?d:b).defer(),r=t.promise;h=w(h)?h:0;r.$$intervalId=e(function(){G?a.defer(m):c.$evalAsync(m);t.notify(s++);\n0<h&&s>=h&&(t.resolve(s),f(r.$$intervalId));G||c.$apply()},k,t,G);return r}}}]}function Ad(a,b){var d=ga(a);b.$$protocol=d.protocol;b.$$host=d.hostname;b.$$port=fa(d.port)||Mg[d.protocol]||null}function Bd(a,b,d){if(Ng.test(a))throw jb(\"badpath\",a);var c=\"/\"!==a.charAt(0);c&&(a=\"/\"+a);a=ga(a);for(var c=(c&&\"/\"===a.pathname.charAt(0)?a.pathname.substring(1):a.pathname).split(\"/\"),e=c.length;e--;)c[e]=decodeURIComponent(c[e]),d&&(c[e]=c[e].replace(/\\//g,\"%2F\"));d=c.join(\"/\");b.$$path=d;b.$$search=gc(a.search);\nb.$$hash=decodeURIComponent(a.hash);b.$$path&&\"/\"!==b.$$path.charAt(0)&&(b.$$path=\"/\"+b.$$path)}function xc(a,b){return a.slice(0,b.length)===b}function xa(a,b){if(xc(b,a))return b.substr(a.length)}function Da(a){var b=a.indexOf(\"#\");return-1===b?a:a.substr(0,b)}function yc(a,b,d){this.$$html5=!0;d=d||\"\";Ad(a,this);this.$$parse=function(a){var d=xa(b,a);if(!A(d))throw jb(\"ipthprfx\",a,b);Bd(d,this,!0);this.$$path||(this.$$path=\"/\");this.$$compose()};this.$$normalizeUrl=function(a){return b+a.substr(1)};\nthis.$$parseLinkUrl=function(c,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;w(f=xa(a,c))?(g=f,g=d&&w(f=xa(d,f))?b+(xa(\"/\",f)||f):a+g):w(f=xa(b,c))?g=b+f:b===c+\"/\"&&(g=b);g&&this.$$parse(g);return!!g}}function zc(a,b,d){Ad(a,this);this.$$parse=function(c){var e=xa(a,c)||xa(b,c),f;z(e)||\"#\"!==e.charAt(0)?this.$$html5?f=e:(f=\"\",z(e)&&(a=c,this.replace())):(f=xa(d,e),z(f)&&(f=e));Bd(f,this,!1);c=this.$$path;var e=a,g=/^\\/[A-Z]:(\\/.*)/;xc(f,e)&&(f=f.replace(e,\"\"));g.exec(f)||(c=(f=g.exec(c))?\nf[1]:c);this.$$path=c;this.$$compose()};this.$$normalizeUrl=function(b){return a+(b?d+b:\"\")};this.$$parseLinkUrl=function(b,d){return Da(a)===Da(b)?(this.$$parse(b),!0):!1}}function Cd(a,b,d){this.$$html5=!0;zc.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;a===Da(c)?f=c:(g=xa(b,c))?f=a+d+g:b===c+\"/\"&&(f=b);f&&this.$$parse(f);return!!f};this.$$normalizeUrl=function(b){return a+d+b}}function Lb(a){return function(){return this[a]}}function Dd(a,\nb){return function(d){if(z(d))return this[a];this[a]=b(d);this.$$compose();return this}}function Tf(){var a=\"!\",b={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(b){return w(b)?(a=b,this):a};this.html5Mode=function(a){if(Ga(a))return b.enabled=a,this;if(D(a)){Ga(a.enabled)&&(b.enabled=a.enabled);Ga(a.requireBase)&&(b.requireBase=a.requireBase);if(Ga(a.rewriteLinks)||A(a.rewriteLinks))b.rewriteLinks=a.rewriteLinks;return this}return b};this.$get=[\"$rootScope\",\"$browser\",\"$sniffer\",\n\"$rootElement\",\"$window\",function(d,c,e,f,g){function k(a,b){return a===b||ga(a).href===ga(b).href}function h(a,b,d){var e=m.url(),f=m.$$state;try{c.url(a,b,d),m.$$state=c.state()}catch(g){throw m.url(e),m.$$state=f,g;}}function l(a,b){d.$broadcast(\"$locationChangeSuccess\",m.absUrl(),a,m.$$state,b)}var m,p;p=c.baseHref();var n=c.url(),s;if(b.enabled){if(!p&&b.requireBase)throw jb(\"nobase\");s=n.substring(0,n.indexOf(\"/\",n.indexOf(\"//\")+2))+(p||\"/\");p=e.history?yc:Cd}else s=Da(n),p=zc;var r=s.substr(0,\nDa(s).lastIndexOf(\"/\")+1);m=new p(s,r,\"#\"+a);m.$$parseLinkUrl(n,n);m.$$state=c.state();var t=/^\\s*(javascript|mailto):/i;f.on(\"click\",function(a){var e=b.rewriteLinks;if(e&&!a.ctrlKey&&!a.metaKey&&!a.shiftKey&&2!==a.which&&2!==a.button){for(var g=x(a.target);\"a\"!==ua(g[0]);)if(g[0]===f[0]||!(g=g.parent())[0])return;if(!A(e)||!z(g.attr(e))){var e=g.prop(\"href\"),h=g.attr(\"href\")||g.attr(\"xlink:href\");D(e)&&\"[object SVGAnimatedString]\"===e.toString()&&(e=ga(e.animVal).href);t.test(e)||!e||g.attr(\"target\")||\na.isDefaultPrevented()||!m.$$parseLinkUrl(e,h)||(a.preventDefault(),m.absUrl()!==c.url()&&d.$apply())}}});m.absUrl()!==n&&c.url(m.absUrl(),!0);var N=!0;c.onUrlChange(function(a,b){xc(a,r)?(d.$evalAsync(function(){var c=m.absUrl(),e=m.$$state,f;m.$$parse(a);m.$$state=b;f=d.$broadcast(\"$locationChangeStart\",a,c,b,e).defaultPrevented;m.absUrl()===a&&(f?(m.$$parse(c),m.$$state=e,h(c,!1,e)):(N=!1,l(c,e)))}),d.$$phase||d.$digest()):g.location.href=a});d.$watch(function(){if(N||m.$$urlUpdatedByLocation){m.$$urlUpdatedByLocation=\n!1;var a=c.url(),b=m.absUrl(),f=c.state(),g=m.$$replace,n=!k(a,b)||m.$$html5&&e.history&&f!==m.$$state;if(N||n)N=!1,d.$evalAsync(function(){var b=m.absUrl(),c=d.$broadcast(\"$locationChangeStart\",b,a,m.$$state,f).defaultPrevented;m.absUrl()===b&&(c?(m.$$parse(a),m.$$state=f):(n&&h(b,g,f===m.$$state?null:m.$$state),l(a,f)))})}m.$$replace=!1});return m}]}function Uf(){var a=!0,b=this;this.debugEnabled=function(b){return w(b)?(a=b,this):a};this.$get=[\"$window\",function(d){function c(a){cc(a)&&(a.stack&&\nf?a=a.message&&-1===a.stack.indexOf(a.message)?\"Error: \"+a.message+\"\\n\"+a.stack:a.stack:a.sourceURL&&(a=a.message+\"\\n\"+a.sourceURL+\":\"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||E;return function(){var a=[];r(arguments,function(b){a.push(c(b))});return Function.prototype.apply.call(e,b,a)}}var f=Ca||/\\bEdge\\//.test(d.navigator&&d.navigator.userAgent);return{log:e(\"log\"),info:e(\"info\"),warn:e(\"warn\"),error:e(\"error\"),debug:function(){var c=e(\"debug\");return function(){a&&c.apply(b,\narguments)}}()}}]}function Og(a){return a+\"\"}function Pg(a,b){return\"undefined\"!==typeof a?a:b}function Ed(a,b){return\"undefined\"===typeof a?b:\"undefined\"===typeof b?a:a+b}function Qg(a,b){switch(a.type){case q.MemberExpression:if(a.computed)return!1;break;case q.UnaryExpression:return 1;case q.BinaryExpression:return\"+\"!==a.operator?1:!1;case q.CallExpression:return!1}return void 0===b?Fd:b}function Z(a,b,d){var c,e,f=a.isPure=Qg(a,d);switch(a.type){case q.Program:c=!0;r(a.body,function(a){Z(a.expression,\nb,f);c=c&&a.expression.constant});a.constant=c;break;case q.Literal:a.constant=!0;a.toWatch=[];break;case q.UnaryExpression:Z(a.argument,b,f);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;break;case q.BinaryExpression:Z(a.left,b,f);Z(a.right,b,f);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case q.LogicalExpression:Z(a.left,b,f);Z(a.right,b,f);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.constant?[]:[a];break;case q.ConditionalExpression:Z(a.test,\nb,f);Z(a.alternate,b,f);Z(a.consequent,b,f);a.constant=a.test.constant&&a.alternate.constant&&a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case q.Identifier:a.constant=!1;a.toWatch=[a];break;case q.MemberExpression:Z(a.object,b,f);a.computed&&Z(a.property,b,f);a.constant=a.object.constant&&(!a.computed||a.property.constant);a.toWatch=a.constant?[]:[a];break;case q.CallExpression:c=d=a.filter?!b(a.callee.name).$stateful:!1;e=[];r(a.arguments,function(a){Z(a,b,f);c=c&&a.constant;e.push.apply(e,\na.toWatch)});a.constant=c;a.toWatch=d?e:[a];break;case q.AssignmentExpression:Z(a.left,b,f);Z(a.right,b,f);a.constant=a.left.constant&&a.right.constant;a.toWatch=[a];break;case q.ArrayExpression:c=!0;e=[];r(a.elements,function(a){Z(a,b,f);c=c&&a.constant;e.push.apply(e,a.toWatch)});a.constant=c;a.toWatch=e;break;case q.ObjectExpression:c=!0;e=[];r(a.properties,function(a){Z(a.value,b,f);c=c&&a.value.constant;e.push.apply(e,a.value.toWatch);a.computed&&(Z(a.key,b,!1),c=c&&a.key.constant,e.push.apply(e,\na.key.toWatch))});a.constant=c;a.toWatch=e;break;case q.ThisExpression:a.constant=!1;a.toWatch=[];break;case q.LocalsExpression:a.constant=!1,a.toWatch=[]}}function Gd(a){if(1===a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function Hd(a){return a.type===q.Identifier||a.type===q.MemberExpression}function Id(a){if(1===a.body.length&&Hd(a.body[0].expression))return{type:q.AssignmentExpression,left:a.body[0].expression,right:{type:q.NGValueParameter},operator:\"=\"}}\nfunction Jd(a){this.$filter=a}function Kd(a){this.$filter=a}function Mb(a,b,d){this.ast=new q(a,d);this.astCompiler=d.csp?new Kd(b):new Jd(b)}function Ac(a){return B(a.valueOf)?a.valueOf():Rg.call(a)}function Vf(){var a=T(),b={\"true\":!0,\"false\":!1,\"null\":null,undefined:void 0},d,c;this.addLiteral=function(a,c){b[a]=c};this.setIdentifierFns=function(a,b){d=a;c=b;return this};this.$get=[\"$filter\",function(e){function f(b,c){var d,f;switch(typeof b){case \"string\":return f=b=b.trim(),d=a[f],d||(d=new Nb(G),\nd=(new Mb(d,e,G)).parse(b),a[f]=p(d)),s(d,c);case \"function\":return s(b,c);default:return s(E,c)}}function g(a,b,c){return null==a||null==b?a===b:\"object\"!==typeof a||(a=Ac(a),\"object\"!==typeof a||c)?a===b||a!==a&&b!==b:!1}function k(a,b,c,d,e){var f=d.inputs,h;if(1===f.length){var k=g,f=f[0];return a.$watch(function(a){var b=f(a);g(b,k,f.isPure)||(h=d(a,void 0,void 0,[b]),k=b&&Ac(b));return h},b,c,e)}for(var l=[],m=[],n=0,p=f.length;n<p;n++)l[n]=g,m[n]=null;return a.$watch(function(a){for(var b=\n!1,c=0,e=f.length;c<e;c++){var k=f[c](a);if(b||(b=!g(k,l[c],f[c].isPure)))m[c]=k,l[c]=k&&Ac(k)}b&&(h=d(a,void 0,void 0,m));return h},b,c,e)}function h(a,b,c,d,e){function f(){h(m)&&k()}function g(a,b,c,d){m=u&&d?d[0]:n(a,b,c,d);h(m)&&a.$$postDigest(f);return s(m)}var h=d.literal?l:w,k,m,n=d.$$intercepted||d,s=d.$$interceptor||Ta,u=d.inputs&&!n.inputs;g.literal=d.literal;g.constant=d.constant;g.inputs=d.inputs;p(g);return k=a.$watch(g,b,c,e)}function l(a){var b=!0;r(a,function(a){w(a)||(b=!1)});return b}\nfunction m(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}function p(a){a.constant?a.$$watchDelegate=m:a.oneTime?a.$$watchDelegate=h:a.inputs&&(a.$$watchDelegate=k);return a}function n(a,b){function c(d){return b(a(d))}c.$stateful=a.$stateful||b.$stateful;c.$$pure=a.$$pure&&b.$$pure;return c}function s(a,b){if(!b)return a;a.$$interceptor&&(b=n(a.$$interceptor,b),a=a.$$intercepted);var c=!1,d=function(d,e,f,g){d=c&&g?g[0]:a(d,e,f,g);return b(d)};d.$$intercepted=a;d.$$interceptor=\nb;d.literal=a.literal;d.oneTime=a.oneTime;d.constant=a.constant;b.$stateful||(c=!a.inputs,d.inputs=a.inputs?a.inputs:[a],b.$$pure||(d.inputs=d.inputs.map(function(a){return a.isPure===Fd?function(b){return a(b)}:a})));return p(d)}var G={csp:Aa().noUnsafeEval,literals:Ia(b),isIdentifierStart:B(d)&&d,isIdentifierContinue:B(c)&&c};f.$$getAst=function(a){var b=new Nb(G);return(new Mb(b,e,G)).getAst(a).ast};return f}]}function Xf(){var a=!0;this.$get=[\"$rootScope\",\"$exceptionHandler\",function(b,d){return Ld(function(a){b.$evalAsync(a)},\nd,a)}];this.errorOnUnhandledRejections=function(b){return w(b)?(a=b,this):a}}function Yf(){var a=!0;this.$get=[\"$browser\",\"$exceptionHandler\",function(b,d){return Ld(function(a){b.defer(a)},d,a)}];this.errorOnUnhandledRejections=function(b){return w(b)?(a=b,this):a}}function Ld(a,b,d){function c(){return new e}function e(){var a=this.promise=new f;this.resolve=function(b){h(a,b)};this.reject=function(b){m(a,b)};this.notify=function(b){n(a,b)}}function f(){this.$$state={status:0}}function g(){for(;!w&&\nx.length;){var a=x.shift();if(!a.pur){a.pur=!0;var c=a.value,c=\"Possibly unhandled rejection: \"+(\"function\"===typeof c?c.toString().replace(/ \\{[\\s\\S]*$/,\"\"):z(c)?\"undefined\":\"string\"!==typeof c?Ie(c,void 0):c);cc(a.value)?b(a.value,c):b(c)}}}function k(c){!d||c.pending||2!==c.status||c.pur||(0===w&&0===x.length&&a(g),x.push(c));!c.processScheduled&&c.pending&&(c.processScheduled=!0,++w,a(function(){var e,f,k;k=c.pending;c.processScheduled=!1;c.pending=void 0;try{for(var l=0,n=k.length;l<n;++l){c.pur=\n!0;f=k[l][0];e=k[l][c.status];try{B(e)?h(f,e(c.value)):1===c.status?h(f,c.value):m(f,c.value)}catch(p){m(f,p),p&&!0===p.$$passToExceptionHandler&&b(p)}}}finally{--w,d&&0===w&&a(g)}}))}function h(a,b){a.$$state.status||(b===a?p(a,v(\"qcycle\",b)):l(a,b))}function l(a,b){function c(b){g||(g=!0,l(a,b))}function d(b){g||(g=!0,p(a,b))}function e(b){n(a,b)}var f,g=!1;try{if(D(b)||B(b))f=b.then;B(f)?(a.$$state.status=-1,f.call(b,c,d,e)):(a.$$state.value=b,a.$$state.status=1,k(a.$$state))}catch(h){d(h)}}function m(a,\nb){a.$$state.status||p(a,b)}function p(a,b){a.$$state.value=b;a.$$state.status=2;k(a.$$state)}function n(c,d){var e=c.$$state.pending;0>=c.$$state.status&&e&&e.length&&a(function(){for(var a,c,f=0,g=e.length;f<g;f++){c=e[f][0];a=e[f][3];try{n(c,B(a)?a(d):d)}catch(h){b(h)}}})}function s(a){var b=new f;m(b,a);return b}function G(a,b,c){var d=null;try{B(c)&&(d=c())}catch(e){return s(e)}return d&&B(d.then)?d.then(function(){return b(a)},s):b(a)}function t(a,b,c,d){var e=new f;h(e,a);return e.then(b,c,\nd)}function q(a){if(!B(a))throw v(\"norslvr\",a);var b=new f;a(function(a){h(b,a)},function(a){m(b,a)});return b}var v=F(\"$q\",TypeError),w=0,x=[];S(f.prototype,{then:function(a,b,c){if(z(a)&&z(b)&&z(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&k(this.$$state);return d},\"catch\":function(a){return this.then(null,a)},\"finally\":function(a,b){return this.then(function(b){return G(b,y,a)},function(b){return G(b,s,a)},\nb)}});var y=t;q.prototype=f.prototype;q.defer=c;q.reject=s;q.when=t;q.resolve=y;q.all=function(a){var b=new f,c=0,d=H(a)?[]:{};r(a,function(a,e){c++;t(a).then(function(a){d[e]=a;--c||h(b,d)},function(a){m(b,a)})});0===c&&h(b,d);return b};q.race=function(a){var b=c();r(a,function(a){t(a).then(b.resolve,b.reject)});return b.promise};return q}function hg(){this.$get=[\"$window\",\"$timeout\",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||\na.webkitCancelRequestAnimationFrame,e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function Wf(){function a(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++pb;this.$$ChildScope=null;this.$$suspended=!1}b.prototype=a;return b}var b=10,d=F(\"$rootScope\"),c=null,e=null;this.digestTtl=\nfunction(a){arguments.length&&(b=a);return b};this.$get=[\"$exceptionHandler\",\"$parse\",\"$browser\",function(f,g,k){function h(a){a.currentScope.$$destroyed=!0}function l(a){9===Ca&&(a.$$childHead&&l(a.$$childHead),a.$$nextSibling&&l(a.$$nextSibling));a.$parent=a.$$nextSibling=a.$$prevSibling=a.$$childHead=a.$$childTail=a.$root=a.$$watchers=null}function m(){this.$id=++pb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=\nthis;this.$$suspended=this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null}function p(a){if(v.$$phase)throw d(\"inprog\",v.$$phase);v.$$phase=a}function n(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function s(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function G(){}function t(){for(;y.length;)try{y.shift()()}catch(a){f(a)}e=null}function q(){null===e&&(e=k.defer(function(){v.$apply(t)},\nnull,\"$applyAsync\"))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?(d=new m,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(b||c!==this)&&d.$on(\"$destroy\",h);return d},$watch:function(a,b,d,e){var f=g(a);b=B(b)?b:E;if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l=\n{fn:b,last:G,get:f,exp:e||a,eq:!!d};c=null;k||(k=h.$$watchers=[],k.$$digestWatchIndex=-1);k.unshift(l);k.$$digestWatchIndex++;n(this,1);return function(){var a=cb(k,l);0<=a&&(n(h,-1),a<k.$$digestWatchIndex&&k.$$digestWatchIndex--);c=null}},$watchGroup:function(a,b){function c(){h=!1;try{k?(k=!1,b(e,e,g)):b(e,d,g)}finally{for(var f=0;f<a.length;f++)d[f]=e[f]}}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&&b(e,e,g)});return function(){l=\n!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});r(a,function(a,b){var d=g.$watch(a,function(a){e[b]=a;h||(h=!0,g.$evalAsync(c))});f.push(d)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!z(e)){if(D(e))if(ya(e))for(f!==n&&(f=n,t=f.length=0,l++),a=e.length,t!==a&&(l++,f.length=t=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(l++,f[b]=g);else{f!==p&&(f=p={},t=0,l++);a=0;for(b in e)ta.call(e,\nb)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(l++,f[b]=g)):(t++,f[b]=g,l++));if(t>a)for(b in l++,f)ta.call(e,b)||(t--,delete f[b])}else f!==e&&(f=e,l++);return l}}c.$$pure=g(a).literal;c.$stateful=!c.$$pure;var d=this,e,f,h,k=1<b.length,l=0,m=g(a,c),n=[],p={},s=!0,t=0;return this.$watch(m,function(){s?(s=!1,b(e,e,d)):b(e,h,d);if(k)if(D(e))if(ya(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h={},e)ta.call(e,a)&&(h[a]=e[a]);else h=e})},$digest:function(){var a,\ng,h,l,m,n,s,r=b,q,y=w.length?v:this,N=[],z,A;p(\"$digest\");k.$$checkUrlChange();this===v&&null!==e&&(k.defer.cancel(e),t());c=null;do{s=!1;q=y;for(n=0;n<w.length;n++){try{A=w[n],l=A.fn,l(A.scope,A.locals)}catch(C){f(C)}c=null}w.length=0;a:do{if(n=!q.$$suspended&&q.$$watchers)for(n.$$digestWatchIndex=n.length;n.$$digestWatchIndex--;)try{if(a=n[n.$$digestWatchIndex])if(m=a.get,(g=m(q))!==(h=a.last)&&!(a.eq?va(g,h):X(g)&&X(h)))s=!0,c=a,a.last=a.eq?Ia(g,null):g,l=a.fn,l(g,h===G?g:h,q),5>r&&(z=4-r,N[z]||\n(N[z]=[]),N[z].push({msg:B(a.exp)?\"fn: \"+(a.exp.name||a.exp.toString()):a.exp,newVal:g,oldVal:h}));else if(a===c){s=!1;break a}}catch(E){f(E)}if(!(n=!q.$$suspended&&q.$$watchersCount&&q.$$childHead||q!==y&&q.$$nextSibling))for(;q!==y&&!(n=q.$$nextSibling);)q=q.$parent}while(q=n);if((s||w.length)&&!r--)throw v.$$phase=null,d(\"infdig\",b,N);}while(s||w.length);for(v.$$phase=null;J<x.length;)try{x[J++]()}catch(D){f(D)}x.length=J=0;k.$$checkUrlChange()},$suspend:function(){this.$$suspended=!0},$isSuspended:function(){return this.$$suspended},\n$resume:function(){this.$$suspended=!1},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast(\"$destroy\");this.$$destroyed=!0;this===v&&k.$$applicationDestroyed();n(this,-this.$$watchersCount);for(var b in this.$$listenerCount)s(this,this.$$listenerCount[b],b);a&&a.$$childHead===this&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail===this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=\nthis.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=E;this.$on=this.$watch=this.$watchGroup=function(){return E};this.$$listeners={};this.$$nextSibling=null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){v.$$phase||w.length||k.defer(function(){w.length&&v.$digest()},null,\"$evalAsync\");w.push({scope:this,fn:g(a),locals:b})},$$postDigest:function(a){x.push(a)},$apply:function(a){try{p(\"$apply\");try{return this.$eval(a)}finally{v.$$phase=\nnull}}catch(b){f(b)}finally{try{v.$digest()}catch(c){throw f(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&y.push(b);a=g(a);q()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(delete c[d],s(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=\n!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},k=db([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=e;l=0;for(m=d.length;l<m;l++)if(d[l])try{d[l].apply(null,k)}catch(n){f(n)}else d.splice(l,1),l--,m--;if(g)break;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=db([e],arguments,\n1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var v=new m,w=v.$$asyncQueue=[],x=v.$$postDigestQueue=[],y=v.$$applyAsyncQueue=[],J=0;return v}]}function Le(){var a=/^\\s*(https?|s?ftp|mailto|tel|file):/,b=/^\\s*((https?|ftp|file|blob):|data:image\\/)/;\nthis.aHrefSanitizationWhitelist=function(b){return w(b)?(a=b,this):a};this.imgSrcSanitizationWhitelist=function(a){return w(a)?(b=a,this):b};this.$get=function(){return function(d,c){var e=c?b:a,f=ga(d&&d.trim()).href;return\"\"===f||f.match(e)?d:\"unsafe:\"+f}}}function Sg(a){if(\"self\"===a)return a;if(A(a)){if(-1<a.indexOf(\"***\"))throw Ea(\"iwcard\",a);a=Md(a).replace(/\\\\\\*\\\\\\*/g,\".*\").replace(/\\\\\\*/g,\"[^:/.?&;]*\");return new RegExp(\"^\"+a+\"$\")}if(ab(a))return new RegExp(\"^\"+a.source+\"$\");throw Ea(\"imatcher\");\n}function Nd(a){var b=[];w(a)&&r(a,function(a){b.push(Sg(a))});return b}function $f(){this.SCE_CONTEXTS=V;var a=[\"self\"],b=[];this.resourceUrlWhitelist=function(b){arguments.length&&(a=Nd(b));return a};this.resourceUrlBlacklist=function(a){arguments.length&&(b=Nd(a));return b};this.$get=[\"$injector\",\"$$sanitizeUri\",function(d,c){function e(a,b){var c;\"self\"===a?(c=Bc(b,Od))||(C.document.baseURI?c=C.document.baseURI:(Na||(Na=C.document.createElement(\"a\"),Na.href=\".\",Na=Na.cloneNode(!1)),c=Na.href),\nc=Bc(b,c)):c=!!a.exec(b.href);return c}function f(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var g=function(a){throw Ea(\"unsafe\");};d.has(\"$sanitize\")&&(g=d.get(\"$sanitize\"));var k=f(),h={};h[V.HTML]=f(k);h[V.CSS]=f(k);h[V.MEDIA_URL]=f(k);h[V.URL]=f(h[V.MEDIA_URL]);h[V.JS]=f(k);h[V.RESOURCE_URL]=\nf(h[V.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw Ea(\"icontext\",a,b);if(null===b||z(b)||\"\"===b)return b;if(\"string\"!==typeof b)throw Ea(\"itype\",a);return new c(b)},getTrusted:function(d,f){if(null===f||z(f)||\"\"===f)return f;var k=h.hasOwnProperty(d)?h[d]:null;if(k&&f instanceof k)return f.$$unwrapTrustedValue();B(f.$$unwrapTrustedValue)&&(f=f.$$unwrapTrustedValue());if(d===V.MEDIA_URL||d===V.URL)return c(f.toString(),d===V.MEDIA_URL);if(d===V.RESOURCE_URL){var k=\nga(f.toString()),n,s,r=!1;n=0;for(s=a.length;n<s;n++)if(e(a[n],k)){r=!0;break}if(r)for(n=0,s=b.length;n<s;n++)if(e(b[n],k)){r=!1;break}if(r)return f;throw Ea(\"insecurl\",f.toString());}if(d===V.HTML)return g(f);throw Ea(\"unsafe\");},valueOf:function(a){return a instanceof k?a.$$unwrapTrustedValue():a}}}]}function Zf(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=[\"$parse\",\"$sceDelegate\",function(b,d){if(a&&8>Ca)throw Ea(\"iequirks\");var c=ja(V);c.isEnabled=function(){return a};\nc.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Ta);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,f=c.getTrusted,g=c.trustAs;r(V,function(a,b){var d=K(b);c[(\"parse_as_\"+d).replace(Cc,wb)]=function(b){return e(a,b)};c[(\"get_trusted_\"+d).replace(Cc,wb)]=function(b){return f(a,b)};c[(\"trust_as_\"+d).replace(Cc,wb)]=function(b){return g(a,b)}});\nreturn c}]}function ag(){this.$get=[\"$window\",\"$document\",function(a,b){var d={},c=!((!a.nw||!a.nw.process)&&a.chrome&&(a.chrome.app&&a.chrome.app.runtime||!a.chrome.app&&a.chrome.runtime&&a.chrome.runtime.id))&&a.history&&a.history.pushState,e=fa((/android (\\d+)/.exec(K((a.navigator||{}).userAgent))||[])[1]),f=/Boxee/i.test((a.navigator||{}).userAgent),g=b[0]||{},k=g.body&&g.body.style,h=!1,l=!1;k&&(h=!!(\"transition\"in k||\"webkitTransition\"in k),l=!!(\"animation\"in k||\"webkitAnimation\"in k));return{history:!(!c||\n4>e||f),hasEvent:function(a){if(\"input\"===a&&Ca)return!1;if(z(d[a])){var b=g.createElement(\"div\");d[a]=\"on\"+a in b}return d[a]},csp:Aa(),transitions:h,animations:l,android:e}}]}function bg(){this.$get=ia(function(a){return new Tg(a)})}function Tg(a){function b(){var a=e.pop();return a&&a.cb}function d(a){for(var b=e.length-1;0<=b;--b){var c=e[b];if(c.type===a)return e.splice(b,1),c.cb}}var c={},e=[],f=this.ALL_TASKS_TYPE=\"$$all$$\",g=this.DEFAULT_TASK_TYPE=\"$$default$$\";this.completeTask=function(e,\nh){h=h||g;try{e()}finally{var l;l=h||g;c[l]&&(c[l]--,c[f]--);l=c[h];var m=c[f];if(!m||!l)for(l=m?d:b;m=l(h);)try{m()}catch(p){a.error(p)}}};this.incTaskCount=function(a){a=a||g;c[a]=(c[a]||0)+1;c[f]=(c[f]||0)+1};this.notifyWhenNoPendingTasks=function(a,b){b=b||f;c[b]?e.push({type:b,cb:a}):a()}}function dg(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=[\"$exceptionHandler\",\"$templateCache\",\"$http\",\"$q\",\"$sce\",function(b,d,c,e,f){function g(k,h){g.totalPendingRequests++;if(!A(k)||\nz(d.get(k)))k=f.getTrustedResourceUrl(k);var l=c.defaults&&c.defaults.transformResponse;H(l)?l=l.filter(function(a){return a!==vc}):l===vc&&(l=null);return c.get(k,S({cache:d,transformResponse:l},a)).finally(function(){g.totalPendingRequests--}).then(function(a){return d.put(k,a.data)},function(a){h||(a=Ug(\"tpload\",k,a.status,a.statusText),b(a));return e.reject(a)})}g.totalPendingRequests=0;return g}]}function eg(){this.$get=[\"$rootScope\",\"$browser\",\"$location\",function(a,b,d){return{findBindings:function(a,\nb,d){a=a.getElementsByClassName(\"ng-binding\");var g=[];r(a,function(a){var c=ca.element(a).data(\"$binding\");c&&r(c,function(c){d?(new RegExp(\"(^|\\\\s)\"+Md(b)+\"(\\\\s|\\\\||$)\")).test(c)&&g.push(a):-1!==c.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,d){for(var g=[\"ng-\",\"data-ng-\",\"ng\\\\:\"],k=0;k<g.length;++k){var h=a.querySelectorAll(\"[\"+g[k]+\"model\"+(d?\"=\":\"*=\")+'\"'+b+'\"]');if(h.length)return h}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&&(d.url(b),a.$digest())},\nwhenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}function fg(){this.$get=[\"$rootScope\",\"$browser\",\"$q\",\"$$q\",\"$exceptionHandler\",function(a,b,d,c,e){function f(f,h,l){B(f)||(l=h,h=f,f=E);var m=Ha.call(arguments,3),p=w(l)&&!l,n=(p?c:d).defer(),s=n.promise,r;r=b.defer(function(){try{n.resolve(f.apply(null,m))}catch(b){n.reject(b),e(b)}finally{delete g[s.$$timeoutId]}p||a.$apply()},h,\"$timeout\");s.$$timeoutId=r;g[r]=n;return s}var g={};f.cancel=function(a){if(!a)return!1;if(!a.hasOwnProperty(\"$$timeoutId\"))throw Vg(\"badprom\");\nif(!g.hasOwnProperty(a.$$timeoutId))return!1;a=a.$$timeoutId;var c=g[a],d=c.promise;d.$$state&&(d.$$state.pur=!0);c.reject(\"canceled\");delete g[a];return b.defer.cancel(a)};return f}]}function ga(a){if(!A(a))return a;Ca&&(aa.setAttribute(\"href\",a),a=aa.href);aa.setAttribute(\"href\",a);a=aa.hostname;!Wg&&-1<a.indexOf(\":\")&&(a=\"[\"+a+\"]\");return{href:aa.href,protocol:aa.protocol?aa.protocol.replace(/:$/,\"\"):\"\",host:aa.host,search:aa.search?aa.search.replace(/^\\?/,\"\"):\"\",hash:aa.hash?aa.hash.replace(/^#/,\n\"\"):\"\",hostname:a,port:aa.port,pathname:\"/\"===aa.pathname.charAt(0)?aa.pathname:\"/\"+aa.pathname}}function Jg(a){var b=[Od].concat(a.map(ga));return function(a){a=ga(a);return b.some(Bc.bind(null,a))}}function Bc(a,b){a=ga(a);b=ga(b);return a.protocol===b.protocol&&a.host===b.host}function gg(){this.$get=ia(C)}function Pd(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}var d=a[0]||{},c={},e=\"\";return function(){var a,g,k,h,l;try{a=d.cookie||\"\"}catch(m){a=\"\"}if(a!==e)for(e=a,a=\ne.split(\"; \"),c={},k=0;k<a.length;k++)g=a[k],h=g.indexOf(\"=\"),0<h&&(l=b(g.substring(0,h)),z(c[l])&&(c[l]=b(g.substring(h+1))));return c}}function kg(){this.$get=Pd}function dd(a){function b(d,c){if(D(d)){var e={};r(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+\"Filter\",c)}this.register=b;this.$get=[\"$injector\",function(a){return function(b){return a.get(b+\"Filter\")}}];b(\"currency\",Qd);b(\"date\",Rd);b(\"filter\",Xg);b(\"json\",Yg);b(\"limitTo\",Zg);b(\"lowercase\",$g);b(\"number\",Sd);b(\"orderBy\",\nTd);b(\"uppercase\",ah)}function Xg(){return function(a,b,d,c){if(!ya(a)){if(null==a)return a;throw F(\"filter\")(\"notarray\",a);}c=c||\"$\";var e;switch(Dc(b)){case \"function\":break;case \"boolean\":case \"null\":case \"number\":case \"string\":e=!0;case \"object\":b=bh(b,d,c,e);break;default:return a}return Array.prototype.filter.call(a,b)}}function bh(a,b,d,c){var e=D(a)&&d in a;!0===b?b=va:B(b)||(b=function(a,b){if(z(a))return!1;if(null===a||null===b)return a===b;if(D(b)||D(a)&&!bc(a))return!1;a=K(\"\"+a);b=K(\"\"+\nb);return-1!==a.indexOf(b)});return function(f){return e&&!D(f)?Fa(f,a[d],b,d,!1):Fa(f,a,b,d,c)}}function Fa(a,b,d,c,e,f){var g=Dc(a),k=Dc(b);if(\"string\"===k&&\"!\"===b.charAt(0))return!Fa(a,b.substring(1),d,c,e);if(H(a))return a.some(function(a){return Fa(a,b,d,c,e)});switch(g){case \"object\":var h;if(e){for(h in a)if(h.charAt&&\"$\"!==h.charAt(0)&&Fa(a[h],b,d,c,!0))return!0;return f?!1:Fa(a,b,d,c,!1)}if(\"object\"===k){for(h in b)if(f=b[h],!B(f)&&!z(f)&&(g=h===c,!Fa(g?a:a[h],f,d,c,g,g)))return!1;return!0}return d(a,\nb);case \"function\":return!1;default:return d(a,b)}}function Dc(a){return null===a?\"null\":typeof a}function Qd(a){var b=a.NUMBER_FORMATS;return function(a,c,e){z(c)&&(c=b.CURRENCY_SYM);z(e)&&(e=b.PATTERNS[1].maxFrac);var f=c?/\\u00A4/g:/\\s*\\u00A4\\s*/g;return null==a?a:Ud(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(f,c)}}function Sd(a){var b=a.NUMBER_FORMATS;return function(a,c){return null==a?a:Ud(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function ch(a){var b=0,d,c,e,f,g;-1<(c=a.indexOf(Vd))&&\n(a=a.replace(Vd,\"\"));0<(e=a.search(/e/i))?(0>c&&(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0>c&&(c=a.length);for(e=0;a.charAt(e)===Ec;e++);if(e===(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)===Ec;)g--;c-=e;d=[];for(f=0;e<=g;e++,f++)d[f]=+a.charAt(e)}c>Wd&&(d=d.splice(0,Wd-1),b=c-1,c=1);return{d:d,e:b,i:c}}function dh(a,b,d,c){var e=a.d,f=e.length-a.i;b=z(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0<d){e.splice(Math.max(a.i,d));for(var g=d;g<e.length;g++)e[g]=0}else for(f=Math.max(0,f),a.i=\n1,e.length=Math.max(1,d=b+1),e[0]=0,g=1;g<d;g++)e[g]=0;if(5<=c)if(0>d-1){for(c=0;c>d;c--)e.unshift(0),a.i++;e.unshift(1);a.i++}else e[d-1]++;for(;f<Math.max(0,b);f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Ud(a,b,d,c,e){if(!A(a)&&!W(a)||isNaN(a))return\"\";var f=!isFinite(a),g=!1,k=Math.abs(a)+\"\",h=\"\";if(f)h=\"\\u221e\";else{g=ch(k);dh(g,e,b.minFrac,b.maxFrac);h=g.d;k=g.i;e=g.e;f=[];for(g=h.reduce(function(a,b){return a&&!b},\n!0);0>k;)h.unshift(0),k++;0<k?f=h.splice(k,h.length):(f=h,h=[0]);k=[];for(h.length>=b.lgSize&&k.unshift(h.splice(-b.lgSize,h.length).join(\"\"));h.length>b.gSize;)k.unshift(h.splice(-b.gSize,h.length).join(\"\"));h.length&&k.unshift(h.join(\"\"));h=k.join(d);f.length&&(h+=c+f.join(\"\"));e&&(h+=\"e+\"+e)}return 0>a&&!g?b.negPre+h+b.negSuf:b.posPre+h+b.posSuf}function Ob(a,b,d,c){var e=\"\";if(0>a||c&&0>=a)c?a=-a+1:(a=-a,e=\"-\");for(a=\"\"+a;a.length<b;)a=Ec+a;d&&(a=a.substr(a.length-b));return e+a}function ea(a,\nb,d,c,e){d=d||0;return function(f){f=f[\"get\"+a]();if(0<d||f>-d)f+=d;0===f&&-12===d&&(f=12);return Ob(f,b,c,e)}}function kb(a,b,d){return function(c,e){var f=c[\"get\"+a](),g=ub((d?\"STANDALONE\":\"\")+(b?\"SHORT\":\"\")+a);return e[g][f]}}function Xd(a){var b=(new Date(a,0,1)).getDay();return new Date(a,0,(4>=b?5:12)-b)}function Yd(a){return function(b){var d=Xd(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Ob(b,a)}}function Fc(a,b){return 0>=\na.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Rd(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,k=b[8]?a.setUTCFullYear:a.setFullYear,h=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=fa(b[9]+b[10]),g=fa(b[9]+b[11]));k.call(a,fa(b[1]),fa(b[2])-1,fa(b[3]));f=fa(b[4]||0)-f;g=fa(b[5]||0)-g;k=fa(b[6]||0);b=Math.round(1E3*parseFloat(\"0.\"+(b[7]||0)));h.call(a,f,g,k,b)}return a}var d=/^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;return function(c,\nd,f){var g=\"\",k=[],h,l;d=d||\"mediumDate\";d=a.DATETIME_FORMATS[d]||d;A(c)&&(c=eh.test(c)?fa(c):b(c));W(c)&&(c=new Date(c));if(!ha(c)||!isFinite(c.getTime()))return c;for(;d;)(l=fh.exec(d))?(k=db(k,l,1),d=k.pop()):(k.push(d),d=null);var m=c.getTimezoneOffset();f&&(m=ec(f,m),c=fc(c,f,!0));r(k,function(b){h=gh[b];g+=h?h(c,a.DATETIME_FORMATS,m):\"''\"===b?\"'\":b.replace(/(^'|'$)/g,\"\").replace(/''/g,\"'\")});return g}}function Yg(){return function(a,b){z(b)&&(b=2);return eb(a,b)}}function Zg(){return function(a,\nb,d){b=Infinity===Math.abs(Number(b))?Number(b):fa(b);if(X(b))return a;W(a)&&(a=a.toString());if(!ya(a))return a;d=!d||isNaN(d)?0:fa(d);d=0>d?Math.max(0,a.length+d):d;return 0<=b?Gc(a,d,d+b):0===d?Gc(a,b,a.length):Gc(a,Math.max(0,d+b),d)}}function Gc(a,b,d){return A(a)?a.slice(b,d):Ha.call(a,b,d)}function Td(a){function b(b){return b.map(function(b){var c=1,d=Ta;if(B(b))d=b;else if(A(b)){if(\"+\"===b.charAt(0)||\"-\"===b.charAt(0))c=\"-\"===b.charAt(0)?-1:1,b=b.substring(1);if(\"\"!==b&&(d=a(b),d.constant))var e=\nd(),d=function(a){return a[e]}}return{get:d,descending:c}})}function d(a){switch(typeof a){case \"number\":case \"boolean\":case \"string\":return!0;default:return!1}}function c(a,b){var c=0,d=a.type,h=b.type;if(d===h){var h=a.value,l=b.value;\"string\"===d?(h=h.toLowerCase(),l=l.toLowerCase()):\"object\"===d&&(D(h)&&(h=a.index),D(l)&&(l=b.index));h!==l&&(c=h<l?-1:1)}else c=\"undefined\"===d?1:\"undefined\"===h?-1:\"null\"===d?1:\"null\"===h?-1:d<h?-1:1;return c}return function(a,f,g,k){if(null==a)return a;if(!ya(a))throw F(\"orderBy\")(\"notarray\",\na);H(f)||(f=[f]);0===f.length&&(f=[\"+\"]);var h=b(f),l=g?-1:1,m=B(k)?k:c;a=Array.prototype.map.call(a,function(a,b){return{value:a,tieBreaker:{value:b,type:\"number\",index:b},predicateValues:h.map(function(c){var e=c.get(a);c=typeof e;if(null===e)c=\"null\";else if(\"object\"===c)a:{if(B(e.valueOf)&&(e=e.valueOf(),d(e)))break a;bc(e)&&(e=e.toString(),d(e))}return{value:e,type:c,index:b}})}});a.sort(function(a,b){for(var d=0,e=h.length;d<e;d++){var f=m(a.predicateValues[d],b.predicateValues[d]);if(f)return f*\nh[d].descending*l}return(m(a.tieBreaker,b.tieBreaker)||c(a.tieBreaker,b.tieBreaker))*l});return a=a.map(function(a){return a.value})}}function Ra(a){B(a)&&(a={link:a});a.restrict=a.restrict||\"AC\";return ia(a)}function Pb(a,b,d,c,e){this.$$controls=[];this.$error={};this.$$success={};this.$pending=void 0;this.$name=e(b.name||b.ngForm||\"\")(d);this.$dirty=!1;this.$valid=this.$pristine=!0;this.$submitted=this.$invalid=!1;this.$$parentForm=lb;this.$$element=a;this.$$animate=c;Zd(this)}function Zd(a){a.$$classCache=\n{};a.$$classCache[$d]=!(a.$$classCache[mb]=a.$$element.hasClass(mb))}function ae(a){function b(a,b,c){c&&!a.$$classCache[b]?(a.$$animate.addClass(a.$$element,b),a.$$classCache[b]=!0):!c&&a.$$classCache[b]&&(a.$$animate.removeClass(a.$$element,b),a.$$classCache[b]=!1)}function d(a,c,d){c=c?\"-\"+Vc(c,\"-\"):\"\";b(a,mb+c,!0===d);b(a,$d+c,!1===d)}var c=a.set,e=a.unset;a.clazz.prototype.$setValidity=function(a,g,k){z(g)?(this.$pending||(this.$pending={}),c(this.$pending,a,k)):(this.$pending&&e(this.$pending,\na,k),be(this.$pending)&&(this.$pending=void 0));Ga(g)?g?(e(this.$error,a,k),c(this.$$success,a,k)):(c(this.$error,a,k),e(this.$$success,a,k)):(e(this.$error,a,k),e(this.$$success,a,k));this.$pending?(b(this,\"ng-pending\",!0),this.$valid=this.$invalid=void 0,d(this,\"\",null)):(b(this,\"ng-pending\",!1),this.$valid=be(this.$error),this.$invalid=!this.$valid,d(this,\"\",this.$valid));g=this.$pending&&this.$pending[a]?void 0:this.$error[a]?!1:this.$$success[a]?!0:null;d(this,a,g);this.$$parentForm.$setValidity(a,\ng,this)}}function be(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}function Hc(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function Sa(a,b,d,c,e,f){var g=K(b[0].type);if(!e.android){var k=!1;b.on(\"compositionstart\",function(){k=!0});b.on(\"compositionupdate\",function(a){if(z(a.data)||\"\"===a.data)k=!1});b.on(\"compositionend\",function(){k=!1;l()})}var h,l=function(a){h&&(f.defer.cancel(h),h=null);if(!k){var e=b.val();a=a&&a.type;\"password\"===g||d.ngTrim&&\n\"false\"===d.ngTrim||(e=U(e));(c.$viewValue!==e||\"\"===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent(\"input\"))b.on(\"input\",l);else{var m=function(a,b,c){h||(h=f.defer(function(){h=null;b&&b.value===c||l(a)}))};b.on(\"keydown\",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||m(a,this,this.value)});if(e.hasEvent(\"paste\"))b.on(\"paste cut drop\",m)}b.on(\"change\",l);if(ce[g]&&c.$$hasNativeValidators&&g===d.type)b.on(\"keydown wheel mousedown\",function(a){if(!h){var b=this.validity,\nc=b.badInput,d=b.typeMismatch;h=f.defer(function(){h=null;b.badInput===c&&b.typeMismatch===d||l(a)})}});c.$render=function(){var a=c.$isEmpty(c.$viewValue)?\"\":c.$viewValue;b.val()!==a&&b.val(a)}}function Qb(a,b){return function(d,c){var e,f;if(ha(d))return d;if(A(d)){'\"'===d.charAt(0)&&'\"'===d.charAt(d.length-1)&&(d=d.substring(1,d.length-1));if(hh.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),\nss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},r(e,function(a,c){c<b.length&&(f[b[c]]=+a)}),e=new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0),100>f.yyyy&&e.setFullYear(f.yyyy),e}return NaN}}function nb(a,b,d,c){return function(e,f,g,k,h,l,m,p){function n(a){return a&&!(a.getTime&&a.getTime()!==a.getTime())}function s(a){return w(a)&&!ha(a)?r(a)||void 0:a}function r(a,b){var c=k.$options.getOption(\"timezone\");v&&v!==c&&(b=Sc(b,ec(v)));var e=d(a,\nb);!isNaN(e)&&c&&(e=fc(e,c));return e}Ic(e,f,g,k,a);Sa(e,f,g,k,h,l);var t=\"time\"===a||\"datetimelocal\"===a,q,v;k.$parsers.push(function(c){if(k.$isEmpty(c))return null;if(b.test(c))return r(c,q);k.$$parserName=a});k.$formatters.push(function(a){if(a&&!ha(a))throw ob(\"datefmt\",a);if(n(a)){q=a;var b=k.$options.getOption(\"timezone\");b&&(v=b,q=fc(q,b,!0));var d=c;t&&A(k.$options.getOption(\"timeSecondsFormat\"))&&(d=c.replace(\"ss.sss\",k.$options.getOption(\"timeSecondsFormat\")).replace(/:$/,\"\"));a=m(\"date\")(a,\nd,b);t&&k.$options.getOption(\"timeStripZeroSeconds\")&&(a=a.replace(/(?::00)?(?:\\.000)?$/,\"\"));return a}v=q=null;return\"\"});if(w(g.min)||g.ngMin){var x=g.min||p(g.ngMin)(e),B=s(x);k.$validators.min=function(a){return!n(a)||z(B)||d(a)>=B};g.$observe(\"min\",function(a){a!==x&&(B=s(a),x=a,k.$validate())})}if(w(g.max)||g.ngMax){var y=g.max||p(g.ngMax)(e),J=s(y);k.$validators.max=function(a){return!n(a)||z(J)||d(a)<=J};g.$observe(\"max\",function(a){a!==y&&(J=s(a),y=a,k.$validate())})}}}function Ic(a,b,d,\nc,e){(c.$$hasNativeValidators=D(b[0].validity))&&c.$parsers.push(function(a){var d=b.prop(\"validity\")||{};if(d.badInput||d.typeMismatch)c.$$parserName=e;else return a})}function de(a){a.$parsers.push(function(b){if(a.$isEmpty(b))return null;if(ih.test(b))return parseFloat(b);a.$$parserName=\"number\"});a.$formatters.push(function(b){if(!a.$isEmpty(b)){if(!W(b))throw ob(\"numfmt\",b);b=b.toString()}return b})}function na(a){w(a)&&!W(a)&&(a=parseFloat(a));return X(a)?void 0:a}function Jc(a){var b=a.toString(),\nd=b.indexOf(\".\");return-1===d?-1<a&&1>a&&(a=/e-(\\d+)$/.exec(b))?Number(a[1]):0:b.length-d-1}function ee(a,b,d){a=Number(a);var c=(a|0)!==a,e=(b|0)!==b,f=(d|0)!==d;if(c||e||f){var g=c?Jc(a):0,k=e?Jc(b):0,h=f?Jc(d):0,g=Math.max(g,k,h),g=Math.pow(10,g);a*=g;b*=g;d*=g;c&&(a=Math.round(a));e&&(b=Math.round(b));f&&(d=Math.round(d))}return 0===(a-b)%d}function fe(a,b,d,c,e){if(w(c)){a=a(c);if(!a.constant)throw ob(\"constexpr\",d,c);return a(b)}return e}function Kc(a,b){function d(a,b){if(!a||!a.length)return[];\nif(!b||!b.length)return a;var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],m=0;m<b.length;m++)if(e===b[m])continue a;c.push(e)}return c}function c(a){if(!a)return a;var b=a;H(a)?b=a.map(c).join(\" \"):D(a)?b=Object.keys(a).filter(function(b){return a[b]}).join(\" \"):A(a)||(b=a+\"\");return b}a=\"ngClass\"+a;var e;return[\"$parse\",function(f){return{restrict:\"AC\",link:function(g,k,h){function l(a,b){var c=[];r(a,function(a){if(0<b||p[a])p[a]=(p[a]||0)+b,p[a]===+(0<b)&&c.push(a)});return c.join(\" \")}function m(a){if(a===\nb){var c=s,c=l(c&&c.split(\" \"),1);h.$addClass(c)}else c=s,c=l(c&&c.split(\" \"),-1),h.$removeClass(c);n=a}var p=k.data(\"$classCounts\"),n=!0,s;p||(p=T(),k.data(\"$classCounts\",p));\"ngClass\"!==a&&(e||(e=f(\"$index\",function(a){return a&1})),g.$watch(e,m));g.$watch(f(h[a],c),function(a){if(n===b){var c=s&&s.split(\" \"),e=a&&a.split(\" \"),f=d(c,e),c=d(e,c),f=l(f,-1),c=l(c,1);h.$addClass(c);h.$removeClass(f)}s=a})}}}]}function qd(a,b,d,c,e,f){return{restrict:\"A\",compile:function(g,k){var h=a(k[c]);return function(a,\nc){c.on(e,function(c){var e=function(){h(a,{$event:c})};if(b.$$phase)if(f)a.$evalAsync(e);else try{e()}catch(g){d(g)}else a.$apply(e)})}}}}function Rb(a,b,d,c,e,f,g,k,h){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=void 0;this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=\nvoid 0;this.$name=h(d.name||\"\",!1)(a);this.$$parentForm=lb;this.$options=Sb;this.$$updateEvents=\"\";this.$$updateEventHandler=this.$$updateEventHandler.bind(this);this.$$parsedNgModel=e(d.ngModel);this.$$parsedNgModelAssign=this.$$parsedNgModel.assign;this.$$ngModelGet=this.$$parsedNgModel;this.$$ngModelSet=this.$$parsedNgModelAssign;this.$$pendingDebounce=null;this.$$parserValid=void 0;this.$$parserName=\"parse\";this.$$currentValidationRunId=0;this.$$scope=a;this.$$rootScope=a.$root;this.$$attr=d;\nthis.$$element=c;this.$$animate=f;this.$$timeout=g;this.$$parse=e;this.$$q=k;this.$$exceptionHandler=b;Zd(this);jh(this)}function jh(a){a.$$scope.$watch(function(b){b=a.$$ngModelGet(b);b===a.$modelValue||a.$modelValue!==a.$modelValue&&b!==b||a.$$setModelValue(b);return b})}function Lc(a){this.$$options=a}function ge(a,b){r(b,function(b,c){w(a[c])||(a[c]=b)})}function Oa(a,b){a.prop(\"selected\",b);a.attr(\"selected\",b)}function he(a,b,d){if(a){A(a)&&(a=new RegExp(\"^\"+a+\"$\"));if(!a.test)throw F(\"ngPattern\")(\"noregexp\",\nb,a,za(d));return a}}function Tb(a){a=fa(a);return X(a)?-1:a}var Wb={objectMaxDepth:5,urlErrorParamsEnabled:!0},ie=/^\\/(.+)\\/([a-z]*)$/,ta=Object.prototype.hasOwnProperty,K=function(a){return A(a)?a.toLowerCase():a},ub=function(a){return A(a)?a.toUpperCase():a},Ca,x,rb,Ha=[].slice,Fg=[].splice,kh=[].push,la=Object.prototype.toString,Pc=Object.getPrototypeOf,pa=F(\"ng\"),ca=C.angular||(C.angular={}),kc,pb=0;Ca=C.document.documentMode;var X=Number.isNaN||function(a){return a!==a};E.$inject=[];Ta.$inject=\n[];var ve=/^\\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/,U=function(a){return A(a)?a.trim():a},Md=function(a){return a.replace(/([-()[\\]{}+?*.$^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")},Aa=function(){if(!w(Aa.rules)){var a=C.document.querySelector(\"[ng-csp]\")||C.document.querySelector(\"[data-ng-csp]\");if(a){var b=a.getAttribute(\"ng-csp\")||a.getAttribute(\"data-ng-csp\");Aa.rules={noUnsafeEval:!b||-1!==b.indexOf(\"no-unsafe-eval\"),noInlineStyle:!b||-1!==\nb.indexOf(\"no-inline-style\")}}else{a=Aa;try{new Function(\"\"),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Aa.rules},qb=function(){if(w(qb.name_))return qb.name_;var a,b,d=Qa.length,c,e;for(b=0;b<d;++b)if(c=Qa[b],a=C.document.querySelector(\"[\"+c.replace(\":\",\"\\\\:\")+\"jq]\")){e=a.getAttribute(c+\"jq\");break}return qb.name_=e},xe=/:/g,Qa=[\"ng-\",\"data-ng-\",\"ng:\",\"x-ng-\"],Be=function(a){var b=a.currentScript;if(!b)return!0;if(!(b instanceof C.HTMLScriptElement||b instanceof C.SVGScriptElement))return!1;\nb=b.attributes;return[b.getNamedItem(\"src\"),b.getNamedItem(\"href\"),b.getNamedItem(\"xlink:href\")].every(function(b){if(!b)return!0;if(!b.value)return!1;var c=a.createElement(\"a\");c.href=b.value;if(a.location.origin===c.origin)return!0;switch(c.protocol){case \"http:\":case \"https:\":case \"ftp:\":case \"blob:\":case \"file:\":case \"data:\":return!0;default:return!1}})}(C.document),Ee=/[A-Z]/g,Wc=!1,Pa=3,Ke={full:\"1.7.8\",major:1,minor:7,dot:8,codeName:\"enthusiastic-oblation\"};Y.expando=\"ng339\";var Ka=Y.cache=\n{},pg=1;Y._data=function(a){return this.cache[a[this.expando]]||{}};var lg=/-([a-z])/g,lh=/^-ms-/,Ab={mouseleave:\"mouseout\",mouseenter:\"mouseover\"},nc=F(\"jqLite\"),og=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/,mc=/<|&#?\\w+;/,mg=/<([\\w:-]+)/,ng=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,oa={option:[1,'<select multiple=\"multiple\">',\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\n\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};oa.optgroup=oa.option;oa.tbody=oa.tfoot=oa.colgroup=oa.caption=oa.thead;oa.th=oa.td;var ug=C.Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&16)},Wa=Y.prototype={ready:fd,toString:function(){var a=[];r(this,function(b){a.push(\"\"+b)});return\"[\"+a.join(\", \")+\"]\"},eq:function(a){return 0<=a?x(this[a]):x(this[this.length+a])},length:0,push:kh,sort:[].sort,splice:[].splice},Gb={};r(\"multiple selected checked disabled readOnly required open\".split(\" \"),\nfunction(a){Gb[K(a)]=a});var md={};r(\"input select option textarea button form details\".split(\" \"),function(a){md[a]=!0});var td={ngMinlength:\"minlength\",ngMaxlength:\"maxlength\",ngMin:\"min\",ngMax:\"max\",ngPattern:\"pattern\",ngStep:\"step\"};r({data:rc,removeData:qc,hasData:function(a){for(var b in Ka[a.ng339])return!0;return!1},cleanData:function(a){for(var b=0,d=a.length;b<d;b++)qc(a[b]),id(a[b])}},function(a,b){Y[b]=a});r({data:rc,inheritedData:Eb,scope:function(a){return x.data(a,\"$scope\")||Eb(a.parentNode||\na,[\"$isolateScope\",\"$scope\"])},isolateScope:function(a){return x.data(a,\"$isolateScope\")||x.data(a,\"$isolateScopeNoTemplate\")},controller:jd,injector:function(a){return Eb(a,\"$injector\")},removeAttr:function(a,b){a.removeAttribute(b)},hasClass:Bb,css:function(a,b,d){b=xb(b.replace(lh,\"ms-\"));if(w(d))a.style[b]=d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Pa&&2!==c&&8!==c&&a.getAttribute){var c=K(b),e=Gb[c];if(w(d))null===d||!1===d&&e?a.removeAttribute(b):a.setAttribute(b,\ne?c:d);else return a=a.getAttribute(b),e&&null!==a&&(a=c),null===a?void 0:a}},prop:function(a,b,d){if(w(d))a[b]=d;else return a[b]},text:function(){function a(a,d){if(z(d)){var c=a.nodeType;return 1===c||c===Pa?a.textContent:\"\"}a.textContent=d}a.$dv=\"\";return a}(),val:function(a,b){if(z(b)){if(a.multiple&&\"select\"===ua(a)){var d=[];r(a.options,function(a){a.selected&&d.push(a.value||a.text)});return d}return a.value}a.value=b},html:function(a,b){if(z(b))return a.innerHTML;yb(a,!0);a.innerHTML=b},\nempty:kd},function(a,b){Y.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==kd&&z(2===a.length&&a!==Bb&&a!==jd?b:c)){if(D(b)){for(e=0;e<g;e++)if(a===rc)a(this[e],b);else for(f in b)a(this[e],f,b[f]);return this}e=a.$dv;g=z(e)?Math.min(g,1):g;for(f=0;f<g;f++){var k=a(this[f],b,c);e=e?e+k:k}return e}for(e=0;e<g;e++)a(this[e],b,c);return this}});r({removeData:qc,on:function(a,b,d,c){if(w(c))throw nc(\"onargs\");if(lc(a)){c=zb(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=rg(a,e));c=0<=b.indexOf(\" \")?\nb.split(\" \"):[b];for(var g=c.length,k=function(b,c,g){var k=e[b];k||(k=e[b]=[],k.specialHandlerWrapper=c,\"$destroy\"===b||g||a.addEventListener(b,f));k.push(d)};g--;)b=c[g],Ab[b]?(k(Ab[b],tg),k(b,void 0,!0)):k(b)}},off:id,one:function(a,b,d){a=x(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,b){var d,c=a.parentNode;yb(a);r(new Y(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];r(a.childNodes,function(a){1===\na.nodeType&&b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,b){var d=a.nodeType;if(1===d||11===d){b=new Y(b);for(var d=0,c=b.length;d<c;d++)a.appendChild(b[d])}},prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;r(new Y(b),function(b){a.insertBefore(b,d)})}},wrap:function(a,b){var d=x(b).eq(0).clone()[0],c=a.parentNode;c&&c.replaceChild(d,a);d.appendChild(a)},remove:Fb,detach:function(a){Fb(a,!0)},after:function(a,b){var d=a,c=a.parentNode;\nif(c){b=new Y(b);for(var e=0,f=b.length;e<f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}}},addClass:Db,removeClass:Cb,toggleClass:function(a,b,d){b&&r(b.split(\" \"),function(b){var e=d;z(e)&&(e=!Bb(a,b));(e?Db:Cb)(a,b)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:pc,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=zb(a);if(g=(g=g&&g.events)&&\ng[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:E,type:f,target:a},b.type&&(c=S(c,b)),b=ja(g),e=d?[c].concat(d):[c],r(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){Y.prototype[b]=function(b,c,e){for(var f,g=0,k=this.length;g<\nk;g++)z(f)?(f=a(this[g],b,c,e),w(f)&&(f=x(f))):oc(f,a(this[g],b,c,e));return w(f)?f:this}});Y.prototype.bind=Y.prototype.on;Y.prototype.unbind=Y.prototype.off;var mh=Object.create(null);nd.prototype={_idx:function(a){a!==this._lastKey&&(this._lastKey=a,this._lastIndex=this._keys.indexOf(a));return this._lastIndex},_transformKey:function(a){return X(a)?mh:a},get:function(a){a=this._transformKey(a);a=this._idx(a);if(-1!==a)return this._values[a]},has:function(a){a=this._transformKey(a);return-1!==this._idx(a)},\nset:function(a,b){a=this._transformKey(a);var d=this._idx(a);-1===d&&(d=this._lastIndex=this._keys.length);this._keys[d]=a;this._values[d]=b},delete:function(a){a=this._transformKey(a);a=this._idx(a);if(-1===a)return!1;this._keys.splice(a,1);this._values.splice(a,1);this._lastKey=NaN;this._lastIndex=-1;return!0}};var Hb=nd,jg=[function(){this.$get=[function(){return Hb}]}],wg=/^([^(]+?)=>/,xg=/^[^(]*\\(\\s*([^)]*)\\)/m,nh=/,/,oh=/^\\s*(_?)(\\S+?)\\1\\s*$/,vg=/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg,Ba=F(\"$injector\");\nfb.$$annotate=function(a,b,d){var c;if(\"function\"===typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw A(d)&&d||(d=a.name||yg(a)),Ba(\"strictdi\",d);b=od(a);r(b[1].split(nh),function(a){a.replace(oh,function(a,b,d){c.push(d)})})}a.$inject=c}}else H(a)?(b=a.length-1,sb(a[b],\"fn\"),c=a.slice(0,b)):sb(a,\"fn\",!0);return c};var je=F(\"$animate\"),zf=function(){this.$get=E},Af=function(){var a=new Hb,b=[];this.$get=[\"$$AnimateRunner\",\"$rootScope\",function(d,c){function e(a,b,c){var d=!1;b&&(b=A(b)?b.split(\" \"):\nH(b)?b:[],r(b,function(b){b&&(d=!0,a[b]=c)}));return d}function f(){r(b,function(b){var c=a.get(b);if(c){var d=zg(b.attr(\"class\")),e=\"\",f=\"\";r(c,function(a,b){a!==!!d[b]&&(a?e+=(e.length?\" \":\"\")+b:f+=(f.length?\" \":\"\")+b)});r(b,function(a){e&&Db(a,e);f&&Cb(a,f)});a.delete(b)}});b.length=0}return{enabled:E,on:E,off:E,pin:E,push:function(g,k,h,l){l&&l();h=h||{};h.from&&g.css(h.from);h.to&&g.css(h.to);if(h.addClass||h.removeClass)if(k=h.addClass,l=h.removeClass,h=a.get(g)||{},k=e(h,k,!0),l=e(h,l,!1),\nk||l)a.set(g,h),b.push(g),1===b.length&&c.$$postDigest(f);g=new d;g.complete();return g}}}]},xf=[\"$provide\",function(a){var b=this,d=null,c=null;this.$$registeredAnimations=Object.create(null);this.register=function(c,d){if(c&&\".\"!==c.charAt(0))throw je(\"notcsel\",c);var g=c+\"-animation\";b.$$registeredAnimations[c.substr(1)]=g;a.factory(g,d)};this.customFilter=function(a){1===arguments.length&&(c=B(a)?a:null);return c};this.classNameFilter=function(a){if(1===arguments.length&&(d=a instanceof RegExp?\na:null)&&/[(\\s|\\/)]ng-animate[(\\s|\\/)]/.test(d.toString()))throw d=null,je(\"nongcls\",\"ng-animate\");return d};this.$get=[\"$$animateQueue\",function(a){function b(a,c,d){if(d){var e;a:{for(e=0;e<d.length;e++){var f=d[e];if(1===f.nodeType){e=f;break a}}e=void 0}!e||e.parentNode||e.previousElementSibling||(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.cancel&&a.cancel()},enter:function(c,d,h,l){d=d&&x(d);h=h&&x(h);d=d||h.parent();b(c,d,h);return a.push(c,\n\"enter\",ra(l))},move:function(c,d,h,l){d=d&&x(d);h=h&&x(h);d=d||h.parent();b(c,d,h);return a.push(c,\"move\",ra(l))},leave:function(b,c){return a.push(b,\"leave\",ra(c),function(){b.remove()})},addClass:function(b,c,d){d=ra(d);d.addClass=hb(d.addclass,c);return a.push(b,\"addClass\",d)},removeClass:function(b,c,d){d=ra(d);d.removeClass=hb(d.removeClass,c);return a.push(b,\"removeClass\",d)},setClass:function(b,c,d,f){f=ra(f);f.addClass=hb(f.addClass,c);f.removeClass=hb(f.removeClass,d);return a.push(b,\"setClass\",\nf)},animate:function(b,c,d,f,m){m=ra(m);m.from=m.from?S(m.from,c):c;m.to=m.to?S(m.to,d):d;m.tempClasses=hb(m.tempClasses,f||\"ng-inline-animate\");return a.push(b,\"animate\",m)}}}]}],Cf=function(){this.$get=[\"$$rAF\",function(a){function b(b){d.push(b);1<d.length||a(function(){for(var a=0;a<d.length;a++)d[a]();d=[]})}var d=[];return function(){var a=!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},Bf=function(){this.$get=[\"$q\",\"$sniffer\",\"$$animateAsyncRun\",\"$$isDocumentHidden\",\"$timeout\",function(a,\nb,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){c()?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===a.length)b(!0);else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&&f;++d===a.length&&b(e)}var d=0,e=!0;r(a,function(a){a.done(c)})};f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:E,getPromise:function(){if(!this.promise){var b=\nthis;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},\"catch\":function(a){return this.getPromise()[\"catch\"](a)},\"finally\":function(a){return this.getPromise()[\"finally\"](a)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel();this._resolve(!1)},\ncomplete:function(a){var b=this;0===b._state&&(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&&(r(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=0,this._state=2)}};return f}]},yf=function(){this.$get=[\"$$rAF\",\"$q\",\"$$AnimateRunner\",function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&&(b.addClass(g.addClass),g.addClass=null);g.removeClass&&(b.removeClass(g.removeClass),g.removeClass=null);g.to&&(b.css(g.to),g.to=null);k||\nh.complete();k=!0});return h}var g=e||{};g.$$prepared||(g=Ia(g));g.cleanupStyles&&(g.from=g.to=null);g.from&&(b.css(g.from),g.from=null);var k,h=new d;return{start:f,end:f}}}]},$=F(\"$compile\"),tc=new function(){};Xc.$inject=[\"$provide\",\"$$sanitizeUriProvider\"];Jb.prototype.isFirstChange=function(){return this.previousValue===tc};var pd=/^((?:x|data)[:\\-_])/i,Eg=/[:\\-_]+(.)/g,vd=F(\"$controller\"),ud=/^(\\S+)(\\s+as\\s+([\\w$]+))?$/,Jf=function(){this.$get=[\"$document\",function(a){return function(b){b?!b.nodeType&&\nb instanceof x&&(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},wd=\"application/json\",wc={\"Content-Type\":wd+\";charset=utf-8\"},Hg=/^\\[|^\\{(?!\\{)/,Ig={\"[\":/]$/,\"{\":/}$/},Gg=/^\\)]\\}',?\\n/,Kb=F(\"$http\"),Ma=ca.$interpolateMinErr=F(\"$interpolate\");Ma.throwNoconcat=function(a){throw Ma(\"noconcat\",a);};Ma.interr=function(a,b){return Ma(\"interr\",a,b.toString())};var Lg=F(\"$interval\"),Sf=function(){this.$get=function(){function a(a){var b=function(a){b.data=a;b.called=!0};b.id=a;return b}var b=ca.callbacks,\nd={};return{createCallback:function(c){c=\"_\"+(b.$$counter++).toString(36);var e=\"angular.callbacks.\"+c,f=a(c);d[e]=b[c]=f;return e},wasCalled:function(a){return d[a].called},getResponse:function(a){return d[a].data},removeCallback:function(a){delete b[d[a].id];delete d[a]}}}},ph=/^([^?#]*)(\\?([^#]*))?(#(.*))?$/,Mg={http:80,https:443,ftp:21},jb=F(\"$location\"),Ng=/^\\s*[\\\\/]{2,}/,qh={$$absUrl:\"\",$$html5:!1,$$replace:!1,$$compose:function(){for(var a=this.$$path,b=this.$$hash,d=ye(this.$$search),b=b?\n\"#\"+hc(b):\"\",a=a.split(\"/\"),c=a.length;c--;)a[c]=hc(a[c].replace(/%2F/g,\"/\"));this.$$url=a.join(\"/\")+(d?\"?\"+d:\"\")+b;this.$$absUrl=this.$$normalizeUrl(this.$$url);this.$$urlUpdatedByLocation=!0},absUrl:Lb(\"$$absUrl\"),url:function(a){if(z(a))return this.$$url;var b=ph.exec(a);(b[1]||\"\"===a)&&this.path(decodeURIComponent(b[1]));(b[2]||b[1]||\"\"===a)&&this.search(b[3]||\"\");this.hash(b[5]||\"\");return this},protocol:Lb(\"$$protocol\"),host:Lb(\"$$host\"),port:Lb(\"$$port\"),path:Dd(\"$$path\",function(a){a=null!==\na?a.toString():\"\";return\"/\"===a.charAt(0)?a:\"/\"+a}),search:function(a,b){switch(arguments.length){case 0:return this.$$search;case 1:if(A(a)||W(a))a=a.toString(),this.$$search=gc(a);else if(D(a))a=Ia(a,{}),r(a,function(b,c){null==b&&delete a[c]}),this.$$search=a;else throw jb(\"isrcharg\");break;default:z(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();return this},hash:Dd(\"$$hash\",function(a){return null!==a?a.toString():\"\"}),replace:function(){this.$$replace=!0;return this}};\nr([Cd,zc,yc],function(a){a.prototype=Object.create(qh);a.prototype.state=function(b){if(!arguments.length)return this.$$state;if(a!==yc||!this.$$html5)throw jb(\"nostate\");this.$$state=z(b)?null:b;this.$$urlUpdatedByLocation=!0;return this}});var Ya=F(\"$parse\"),Rg={}.constructor.prototype.valueOf,Ub=T();r(\"+ - * / % === !== == != < > <= >= && || ! = |\".split(\" \"),function(a){Ub[a]=!0});var rh={n:\"\\n\",f:\"\\f\",r:\"\\r\",t:\"\\t\",v:\"\\v\",\"'\":\"'\",'\"':'\"'},Nb=function(a){this.options=a};Nb.prototype={constructor:Nb,\nlex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'\"'===a||\"'\"===a)this.readString(a);else if(this.isNumber(a)||\".\"===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(a,\"(){}[].,;:?\"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var b=a+this.peek(),d=b+this.peek(2),c=Ub[b],e=Ub[d];Ub[a]||\nc||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError(\"Unexpected next character \",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return\"0\"<=a&&\"9\">=a&&\"string\"===typeof a},isWhitespace:function(a){return\" \"===a||\"\\r\"===a||\"\\t\"===a||\"\\n\"===a||\"\\v\"===a||\"\\u00a0\"===a},isIdentifierStart:function(a){return this.options.isIdentifierStart?\nthis.options.isIdentifierStart(a,this.codePointAt(a)):this.isValidIdentifierStart(a)},isValidIdentifierStart:function(a){return\"a\"<=a&&\"z\">=a||\"A\"<=a&&\"Z\">=a||\"_\"===a||\"$\"===a},isIdentifierContinue:function(a){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(a,this.codePointAt(a)):this.isValidIdentifierContinue(a)},isValidIdentifierContinue:function(a,b){return this.isValidIdentifierStart(a,b)||this.isNumber(a)},codePointAt:function(a){return 1===a.length?a.charCodeAt(0):\n(a.charCodeAt(0)<<10)+a.charCodeAt(1)-56613888},peekMultichar:function(){var a=this.text.charAt(this.index),b=this.peek();if(!b)return a;var d=a.charCodeAt(0),c=b.charCodeAt(0);return 55296<=d&&56319>=d&&56320<=c&&57343>=c?a+b:a},isExpOperator:function(a){return\"-\"===a||\"+\"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=w(b)?\"s \"+b+\"-\"+this.index+\" [\"+this.text.substring(b,d)+\"]\":\" \"+d;throw Ya(\"lexerr\",a,b,this.text);},readNumber:function(){for(var a=\"\",b=this.index;this.index<\nthis.text.length;){var d=K(this.text.charAt(this.index));if(\".\"===d||this.isNumber(d))a+=d;else{var c=this.peek();if(\"e\"===d&&this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&&c&&this.isNumber(c)&&\"e\"===a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||c&&this.isNumber(c)||\"e\"!==a.charAt(a.length-1))break;else this.throwError(\"Invalid exponent\")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index<\nthis.text.length;){var b=this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d=\"\",c=a,e=!1;this.index<this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)\"u\"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\\da-f]{4}/i)||this.throwError(\"Invalid unicode escape [\\\\u\"+e+\"]\"),this.index+=4,d+=String.fromCharCode(parseInt(e,\n16))):d+=rh[f]||f,e=!1;else if(\"\\\\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError(\"Unterminated quote\",b)}};var q=function(a,b){this.lexer=a;this.options=b};q.Program=\"Program\";q.ExpressionStatement=\"ExpressionStatement\";q.AssignmentExpression=\"AssignmentExpression\";q.ConditionalExpression=\"ConditionalExpression\";q.LogicalExpression=\"LogicalExpression\";q.BinaryExpression=\"BinaryExpression\";q.UnaryExpression=\"UnaryExpression\";\nq.CallExpression=\"CallExpression\";q.MemberExpression=\"MemberExpression\";q.Identifier=\"Identifier\";q.Literal=\"Literal\";q.ArrayExpression=\"ArrayExpression\";q.Property=\"Property\";q.ObjectExpression=\"ObjectExpression\";q.ThisExpression=\"ThisExpression\";q.LocalsExpression=\"LocalsExpression\";q.NGValueParameter=\"NGValueParameter\";q.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&this.throwError(\"is an unexpected token\",this.tokens[0]);return a},\nprogram:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek(\"}\",\")\",\";\",\"]\")&&a.push(this.expressionStatement()),!this.expect(\";\"))return{type:q.Program,body:a}},expressionStatement:function(){return{type:q.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect(\"|\");)a=this.filter(a);return a},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary();if(this.expect(\"=\")){if(!Hd(a))throw Ya(\"lval\");\na={type:q.AssignmentExpression,left:a,right:this.assignment(),operator:\"=\"}}return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect(\"?\")&&(b=this.expression(),this.consume(\":\"))?(d=this.expression(),{type:q.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect(\"||\");)a={type:q.LogicalExpression,operator:\"||\",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=this.equality();this.expect(\"&&\");)a=\n{type:q.LogicalExpression,operator:\"&&\",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect(\"==\",\"!=\",\"===\",\"!==\");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect(\"<\",\">\",\"<=\",\">=\");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),b;b=this.expect(\"+\",\"-\");)a={type:q.BinaryExpression,\noperator:b.text,left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect(\"*\",\"/\",\"%\");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect(\"+\",\"-\",\"!\"))?{type:q.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect(\"(\")?(a=this.filterChain(),this.consume(\")\")):this.expect(\"[\")?a=this.arrayDeclaration():this.expect(\"{\")?\na=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?a=Ia(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:q.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError(\"not a primary expression\",this.peek());for(var b;b=this.expect(\"(\",\"[\",\".\");)\"(\"===b.text?(a={type:q.CallExpression,callee:a,arguments:this.parseArguments()},this.consume(\")\")):\n\"[\"===b.text?(a={type:q.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume(\"]\")):\".\"===b.text?a={type:q.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError(\"IMPOSSIBLE\");return a},filter:function(a){a=[a];for(var b={type:q.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(\":\");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(\")\"!==this.peekToken().text){do a.push(this.filterChain());while(this.expect(\",\"))\n}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError(\"is not a valid identifier\",a);return{type:q.Identifier,name:a.text}},constant:function(){return{type:q.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if(\"]\"!==this.peekToken().text){do{if(this.peek(\"]\"))break;a.push(this.expression())}while(this.expect(\",\"))}this.consume(\"]\");return{type:q.ArrayExpression,elements:a}},object:function(){var a=[],b;if(\"}\"!==this.peekToken().text){do{if(this.peek(\"}\"))break;\nb={type:q.Property,kind:\"init\"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(\":\"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(\":\")?(this.consume(\":\"),b.value=this.expression()):b.value=b.key):this.peek(\"[\")?(this.consume(\"[\"),b.key=this.expression(),this.consume(\"]\"),b.computed=!0,this.consume(\":\"),b.value=this.expression()):this.throwError(\"invalid key\",this.peek());a.push(b)}while(this.expect(\",\"))}this.consume(\"}\");\nreturn{type:q.ObjectExpression,properties:a}},throwError:function(a,b){throw Ya(\"syntax\",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw Ya(\"ueoe\",this.text);var b=this.expect(a);b||this.throwError(\"is unexpected, expecting [\"+a+\"]\",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw Ya(\"ueoe\",this.text);return this.tokens[0]},peek:function(a,b,d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,\ne){if(this.tokens.length>a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},selfReferential:{\"this\":{type:q.ThisExpression},$locals:{type:q.LocalsExpression}}};var Fd=2;Jd.prototype={compile:function(a){var b=this;this.state={nextId:0,filters:{},fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};Z(a,b.$filter);var d=\"\",c;this.stage=\"assign\";if(c=Id(a))this.state.computing=\n\"assign\",d=this.nextId(),this.recurse(c,d),this.return_(d),d=\"fn.assign=\"+this.generateFunction(\"assign\",\"s,v,l\");c=Gd(a.body);b.stage=\"inputs\";r(c,function(a,c){var d=\"fn\"+c;b.state[d]={vars:[],body:[],own:{}};b.state.computing=d;var k=b.nextId();b.recurse(a,k);b.return_(k);b.state.inputs.push({name:d,isPure:a.isPure});a.watchId=c});this.state.computing=\"fn\";this.stage=\"main\";this.recurse(a);a='\"'+this.USE+\" \"+this.STRICT+'\";\\n'+this.filterPrefix()+\"var fn=\"+this.generateFunction(\"fn\",\"s,l,a,i\")+\nd+this.watchFns()+\"return fn;\";a=(new Function(\"$filter\",\"getStringValue\",\"ifDefined\",\"plus\",a))(this.$filter,Og,Pg,Ed);this.state=this.stage=void 0;return a},USE:\"use\",STRICT:\"strict\",watchFns:function(){var a=[],b=this.state.inputs,d=this;r(b,function(b){a.push(\"var \"+b.name+\"=\"+d.generateFunction(b.name,\"s\"));b.isPure&&a.push(b.name,\".isPure=\"+JSON.stringify(b.isPure)+\";\")});b.length&&a.push(\"fn.inputs=[\"+b.map(function(a){return a.name}).join(\",\")+\"];\");return a.join(\"\")},generateFunction:function(a,\nb){return\"function(\"+b+\"){\"+this.varsPrefix(a)+this.body(a)+\"};\"},filterPrefix:function(){var a=[],b=this;r(this.state.filters,function(d,c){a.push(d+\"=$filter(\"+b.escape(c)+\")\")});return a.length?\"var \"+a.join(\",\")+\";\":\"\"},varsPrefix:function(a){return this.state[a].vars.length?\"var \"+this.state[a].vars.join(\",\")+\";\":\"\"},body:function(a){return this.state[a].body.join(\"\")},recurse:function(a,b,d,c,e,f){var g,k,h=this,l,m,p;c=c||E;if(!f&&w(a.watchId))b=b||this.nextId(),this.if_(\"i\",this.lazyAssign(b,\nthis.computedMember(\"i\",a.watchId)),this.lazyRecurse(a,b,d,c,e,!0));else switch(a.type){case q.Program:r(a.body,function(b,c){h.recurse(b.expression,void 0,void 0,function(a){k=a});c!==a.body.length-1?h.current().body.push(k,\";\"):h.return_(k)});break;case q.Literal:m=this.escape(a.value);this.assign(b,m);c(b||m);break;case q.UnaryExpression:this.recurse(a.argument,void 0,void 0,function(a){k=a});m=a.operator+\"(\"+this.ifDefined(k,0)+\")\";this.assign(b,m);c(m);break;case q.BinaryExpression:this.recurse(a.left,\nvoid 0,void 0,function(a){g=a});this.recurse(a.right,void 0,void 0,function(a){k=a});m=\"+\"===a.operator?this.plus(g,k):\"-\"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(k,0):\"(\"+g+\")\"+a.operator+\"(\"+k+\")\";this.assign(b,m);c(m);break;case q.LogicalExpression:b=b||this.nextId();h.recurse(a.left,b);h.if_(\"&&\"===a.operator?b:h.not(b),h.lazyRecurse(a.right,b));c(b);break;case q.ConditionalExpression:b=b||this.nextId();h.recurse(a.test,b);h.if_(b,h.lazyRecurse(a.alternate,b),h.lazyRecurse(a.consequent,\nb));c(b);break;case q.Identifier:b=b||this.nextId();d&&(d.context=\"inputs\"===h.stage?\"s\":this.assign(this.nextId(),this.getHasOwnProperty(\"l\",a.name)+\"?l:s\"),d.computed=!1,d.name=a.name);h.if_(\"inputs\"===h.stage||h.not(h.getHasOwnProperty(\"l\",a.name)),function(){h.if_(\"inputs\"===h.stage||\"s\",function(){e&&1!==e&&h.if_(h.isNull(h.nonComputedMember(\"s\",a.name)),h.lazyAssign(h.nonComputedMember(\"s\",a.name),\"{}\"));h.assign(b,h.nonComputedMember(\"s\",a.name))})},b&&h.lazyAssign(b,h.nonComputedMember(\"l\",\na.name)));c(b);break;case q.MemberExpression:g=d&&(d.context=this.nextId())||this.nextId();b=b||this.nextId();h.recurse(a.object,g,void 0,function(){h.if_(h.notNull(g),function(){a.computed?(k=h.nextId(),h.recurse(a.property,k),h.getStringValue(k),e&&1!==e&&h.if_(h.not(h.computedMember(g,k)),h.lazyAssign(h.computedMember(g,k),\"{}\")),m=h.computedMember(g,k),h.assign(b,m),d&&(d.computed=!0,d.name=k)):(e&&1!==e&&h.if_(h.isNull(h.nonComputedMember(g,a.property.name)),h.lazyAssign(h.nonComputedMember(g,\na.property.name),\"{}\")),m=h.nonComputedMember(g,a.property.name),h.assign(b,m),d&&(d.computed=!1,d.name=a.property.name))},function(){h.assign(b,\"undefined\")});c(b)},!!e);break;case q.CallExpression:b=b||this.nextId();a.filter?(k=h.filter(a.callee.name),l=[],r(a.arguments,function(a){var b=h.nextId();h.recurse(a,b);l.push(b)}),m=k+\"(\"+l.join(\",\")+\")\",h.assign(b,m),c(b)):(k=h.nextId(),g={},l=[],h.recurse(a.callee,k,g,function(){h.if_(h.notNull(k),function(){r(a.arguments,function(b){h.recurse(b,a.constant?\nvoid 0:h.nextId(),void 0,function(a){l.push(a)})});m=g.name?h.member(g.context,g.name,g.computed)+\"(\"+l.join(\",\")+\")\":k+\"(\"+l.join(\",\")+\")\";h.assign(b,m)},function(){h.assign(b,\"undefined\")});c(b)}));break;case q.AssignmentExpression:k=this.nextId();g={};this.recurse(a.left,void 0,g,function(){h.if_(h.notNull(g.context),function(){h.recurse(a.right,k);m=h.member(g.context,g.name,g.computed)+a.operator+k;h.assign(b,m);c(b||m)})},1);break;case q.ArrayExpression:l=[];r(a.elements,function(b){h.recurse(b,\na.constant?void 0:h.nextId(),void 0,function(a){l.push(a)})});m=\"[\"+l.join(\",\")+\"]\";this.assign(b,m);c(b||m);break;case q.ObjectExpression:l=[];p=!1;r(a.properties,function(a){a.computed&&(p=!0)});p?(b=b||this.nextId(),this.assign(b,\"{}\"),r(a.properties,function(a){a.computed?(g=h.nextId(),h.recurse(a.key,g)):g=a.key.type===q.Identifier?a.key.name:\"\"+a.key.value;k=h.nextId();h.recurse(a.value,k);h.assign(h.member(b,g,a.computed),k)})):(r(a.properties,function(b){h.recurse(b.value,a.constant?void 0:\nh.nextId(),void 0,function(a){l.push(h.escape(b.key.type===q.Identifier?b.key.name:\"\"+b.key.value)+\":\"+a)})}),m=\"{\"+l.join(\",\")+\"}\",this.assign(b,m));c(b||m);break;case q.ThisExpression:this.assign(b,\"s\");c(b||\"s\");break;case q.LocalsExpression:this.assign(b,\"l\");c(b||\"l\");break;case q.NGValueParameter:this.assign(b,\"v\"),c(b||\"v\")}},getHasOwnProperty:function(a,b){var d=a+\".\"+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=this.nextId(!1,a+\"&&(\"+this.escape(b)+\" in \"+a+\")\"));return c[d]},assign:function(a,\nb){if(a)return this.current().body.push(a,\"=\",b,\";\"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return\"ifDefined(\"+a+\",\"+this.escape(b)+\")\"},plus:function(a,b){return\"plus(\"+a+\",\"+b+\")\"},return_:function(a){this.current().body.push(\"return \",a,\";\")},if_:function(a,b,d){if(!0===a)b();else{var c=this.current().body;c.push(\"if(\",a,\"){\");b();c.push(\"}\");d&&(c.push(\"else{\"),d(),c.push(\"}\"))}},\nnot:function(a){return\"!(\"+a+\")\"},isNull:function(a){return a+\"==null\"},notNull:function(a){return a+\"!=null\"},nonComputedMember:function(a,b){var d=/[^$_a-zA-Z0-9]/g;return/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(b)?a+\".\"+b:a+'[\"'+b.replace(d,this.stringEscapeFn)+'\"]'},computedMember:function(a,b){return a+\"[\"+b+\"]\"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,b)},getStringValue:function(a){this.assign(a,\"getStringValue(\"+a+\")\")},lazyRecurse:function(a,b,d,c,e,f){var g=\nthis;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(a){return\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(A(a))return\"'\"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+\"'\";if(W(a))return a.toString();if(!0===a)return\"true\";if(!1===a)return\"false\";if(null===a)return\"null\";if(\"undefined\"===typeof a)return\"undefined\";throw Ya(\"esc\");},nextId:function(a,\nb){var d=\"v\"+this.state.nextId++;a||this.current().vars.push(d+(b?\"=\"+b:\"\"));return d},current:function(){return this.state[this.state.computing]}};Kd.prototype={compile:function(a){var b=this;Z(a,b.$filter);var d,c;if(d=Id(a))c=this.recurse(d);d=Gd(a.body);var e;d&&(e=[],r(d,function(a,c){var d=b.recurse(a);d.isPure=a.isPure;a.input=d;e.push(d);a.watchId=c}));var f=[];r(a.body,function(a){f.push(b.recurse(a.expression))});a=0===a.body.length?E:1===a.body.length?f[0]:function(a,b){var c;r(f,function(d){c=\nd(a,b)});return c};c&&(a.assign=function(a,b,d){return c(a,d,b)});e&&(a.inputs=e);return a},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case q.Literal:return this.value(a.value,b);case q.UnaryExpression:return e=this.recurse(a.argument),this[\"unary\"+a.operator](e,b);case q.BinaryExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this[\"binary\"+a.operator](c,e,b);case q.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),\nthis[\"binary\"+a.operator](c,e,b);case q.ConditionalExpression:return this[\"ternary?:\"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),b);case q.Identifier:return f.identifier(a.name,b,d);case q.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(e=a.property.name),a.computed&&(e=this.recurse(a.property)),a.computed?this.computedMember(c,e,b,d):this.nonComputedMember(c,e,b,d);case q.CallExpression:return g=[],r(a.arguments,function(a){g.push(f.recurse(a))}),\na.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,d,f){for(var p=[],n=0;n<g.length;++n)p.push(g[n](a,c,d,f));a=e.apply(void 0,p,f);return b?{context:void 0,name:void 0,value:a}:a}:function(a,c,d,f){var p=e(a,c,d,f),n;if(null!=p.value){n=[];for(var s=0;s<g.length;++s)n.push(g[s](a,c,d,f));n=p.value.apply(p.context,n)}return b?{value:n}:n};case q.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,f,g){var p=\nc(a,d,f,g);a=e(a,d,f,g);p.context[p.name]=a;return b?{value:a}:a};case q.ArrayExpression:return g=[],r(a.elements,function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],n=0;n<g.length;++n)f.push(g[n](a,c,d,e));return b?{value:f}:f};case q.ObjectExpression:return g=[],r(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):g.push({key:a.key.type===q.Identifier?a.key.name:\"\"+a.key.value,computed:!1,value:f.recurse(a.value)})}),function(a,\nc,d,e){for(var f={},n=0;n<g.length;++n)g[n].computed?f[g[n].key(a,c,d,e)]=g[n].value(a,c,d,e):f[g[n].key]=g[n].value(a,c,d,e);return b?{value:f}:f};case q.ThisExpression:return function(a){return b?{value:a}:a};case q.LocalsExpression:return function(a,c){return b?{value:c}:c};case q.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},\"unary+\":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=w(d)?+d:0;return b?{value:d}:d}},\"unary-\":function(a,b){return function(d,c,e,f){d=a(d,c,\ne,f);d=w(d)?-d:-0;return b?{value:d}:d}},\"unary!\":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:d}},\"binary+\":function(a,b,d){return function(c,e,f,g){var k=a(c,e,f,g);c=b(c,e,f,g);k=Ed(k,c);return d?{value:k}:k}},\"binary-\":function(a,b,d){return function(c,e,f,g){var k=a(c,e,f,g);c=b(c,e,f,g);k=(w(k)?k:0)-(w(c)?c:0);return d?{value:k}:k}},\"binary*\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},\"binary/\":function(a,b,d){return function(c,\ne,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},\"binary%\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)%b(c,e,f,g);return d?{value:c}:c}},\"binary===\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},\"binary!==\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},\"binary==\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},\"binary!=\":function(a,b,d){return function(c,\ne,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},\"binary<\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<b(c,e,f,g);return d?{value:c}:c}},\"binary>\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},\"binary<=\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<=b(c,e,f,g);return d?{value:c}:c}},\"binary>=\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:c}},\"binary&&\":function(a,b,d){return function(c,e,f,g){c=\na(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},\"binary||\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||b(c,e,f,g);return d?{value:c}:c}},\"ternary?:\":function(a,b,d,c){return function(e,f,g,k){e=a(e,f,g,k)?b(e,f,g,k):d(e,f,g,k);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d){return function(c,e,f,g){c=e&&a in e?e:c;d&&1!==d&&c&&null==c[a]&&(c[a]={});e=c?c[a]:void 0;return b?{context:c,name:a,value:e}:\ne}},computedMember:function(a,b,d,c){return function(e,f,g,k){var h=a(e,f,g,k),l,m;null!=h&&(l=b(e,f,g,k),l+=\"\",c&&1!==c&&h&&!h[l]&&(h[l]={}),m=h[l]);return d?{context:h,name:l,value:m}:m}},nonComputedMember:function(a,b,d,c){return function(e,f,g,k){e=a(e,f,g,k);c&&1!==c&&e&&null==e[b]&&(e[b]={});f=null!=e?e[b]:void 0;return d?{context:e,name:b,value:f}:f}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};Mb.prototype={constructor:Mb,parse:function(a){a=this.getAst(a);var b=\nthis.astCompiler.compile(a.ast),d=a.ast;b.literal=0===d.body.length||1===d.body.length&&(d.body[0].expression.type===q.Literal||d.body[0].expression.type===q.ArrayExpression||d.body[0].expression.type===q.ObjectExpression);b.constant=a.ast.constant;b.oneTime=a.oneTime;return b},getAst:function(a){var b=!1;a=a.trim();\":\"===a.charAt(0)&&\":\"===a.charAt(1)&&(b=!0,a=a.substring(2));return{ast:this.ast.ast(a),oneTime:b}}};var Ea=F(\"$sce\"),V={HTML:\"html\",CSS:\"css\",MEDIA_URL:\"mediaUrl\",URL:\"url\",RESOURCE_URL:\"resourceUrl\",\nJS:\"js\"},Cc=/_([a-z])/g,Ug=F(\"$templateRequest\"),Vg=F(\"$timeout\"),aa=C.document.createElement(\"a\"),Od=ga(C.location.href),Na;aa.href=\"http://[::1]\";var Wg=\"[::1]\"===aa.hostname;Pd.$inject=[\"$document\"];dd.$inject=[\"$provide\"];var Wd=22,Vd=\".\",Ec=\"0\";Qd.$inject=[\"$locale\"];Sd.$inject=[\"$locale\"];var gh={yyyy:ea(\"FullYear\",4,0,!1,!0),yy:ea(\"FullYear\",2,0,!0,!0),y:ea(\"FullYear\",1,0,!1,!0),MMMM:kb(\"Month\"),MMM:kb(\"Month\",!0),MM:ea(\"Month\",2,1),M:ea(\"Month\",1,1),LLLL:kb(\"Month\",!1,!0),dd:ea(\"Date\",2),\nd:ea(\"Date\",1),HH:ea(\"Hours\",2),H:ea(\"Hours\",1),hh:ea(\"Hours\",2,-12),h:ea(\"Hours\",1,-12),mm:ea(\"Minutes\",2),m:ea(\"Minutes\",1),ss:ea(\"Seconds\",2),s:ea(\"Seconds\",1),sss:ea(\"Milliseconds\",3),EEEE:kb(\"Day\"),EEE:kb(\"Day\",!0),a:function(a,b){return 12>a.getHours()?b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0<=a?\"+\":\"\")+(Ob(Math[0<a?\"floor\":\"ceil\"](a/60),2)+Ob(Math.abs(a%60),2))},ww:Yd(2),w:Yd(1),G:Fc,GG:Fc,GGG:Fc,GGGG:function(a,b){return 0>=a.getFullYear()?b.ERANAMES[0]:b.ERANAMES[1]}},\nfh=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\\s\\S]*)/,eh=/^-?\\d+$/;Rd.$inject=[\"$locale\"];var $g=ia(K),ah=ia(ub);Td.$inject=[\"$parse\"];var Me=ia({restrict:\"E\",compile:function(a,b){if(!b.href&&!b.xlinkHref)return function(a,b){if(\"a\"===b[0].nodeName.toLowerCase()){var e=\"[object SVGAnimatedString]\"===la.call(b.prop(\"href\"))?\"xlink:href\":\"href\";b.on(\"click\",function(a){b.attr(e)||a.preventDefault()})}}}}),vb={};r(Gb,function(a,b){function d(a,d,e){a.$watch(e[c],\nfunction(a){e.$set(b,!!a)})}if(\"multiple\"!==a){var c=wa(\"ng-\"+b),e=d;\"checked\"===a&&(e=function(a,b,e){e.ngModel!==e[c]&&d(a,b,e)});vb[c]=function(){return{restrict:\"A\",priority:100,link:e}}}});r(td,function(a,b){vb[b]=function(){return{priority:100,link:function(a,c,e){if(\"ngPattern\"===b&&\"/\"===e.ngPattern.charAt(0)&&(c=e.ngPattern.match(ie))){e.$set(\"ngPattern\",new RegExp(c[1],c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});r([\"src\",\"srcset\",\"href\"],function(a){var b=wa(\"ng-\"+a);vb[b]=\n[\"$sce\",function(d){return{priority:99,link:function(c,e,f){var g=a,k=a;\"href\"===a&&\"[object SVGAnimatedString]\"===la.call(e.prop(\"href\"))&&(k=\"xlinkHref\",f.$attr[k]=\"xlink:href\",g=null);f.$set(b,d.getTrustedMediaUrl(f[b]));f.$observe(b,function(b){b?(f.$set(k,b),Ca&&g&&e.prop(g,f[k])):\"href\"===a&&f.$set(k,null)})}}}]});var lb={$addControl:E,$getControls:ia([]),$$renameControl:function(a,b){a.$name=b},$removeControl:E,$setValidity:E,$setDirty:E,$setPristine:E,$setSubmitted:E,$$setSubmitted:E};Pb.$inject=\n[\"$element\",\"$attrs\",\"$scope\",\"$animate\",\"$interpolate\"];Pb.prototype={$rollbackViewValue:function(){r(this.$$controls,function(a){a.$rollbackViewValue()})},$commitViewValue:function(){r(this.$$controls,function(a){a.$commitViewValue()})},$addControl:function(a){Ja(a.$name,\"input\");this.$$controls.push(a);a.$name&&(this[a.$name]=a);a.$$parentForm=this},$getControls:function(){return ja(this.$$controls)},$$renameControl:function(a,b){var d=a.$name;this[d]===a&&delete this[d];this[b]=a;a.$name=b},$removeControl:function(a){a.$name&&\nthis[a.$name]===a&&delete this[a.$name];r(this.$pending,function(b,d){this.$setValidity(d,null,a)},this);r(this.$error,function(b,d){this.$setValidity(d,null,a)},this);r(this.$$success,function(b,d){this.$setValidity(d,null,a)},this);cb(this.$$controls,a);a.$$parentForm=lb},$setDirty:function(){this.$$animate.removeClass(this.$$element,Za);this.$$animate.addClass(this.$$element,Vb);this.$dirty=!0;this.$pristine=!1;this.$$parentForm.$setDirty()},$setPristine:function(){this.$$animate.setClass(this.$$element,\nZa,Vb+\" ng-submitted\");this.$dirty=!1;this.$pristine=!0;this.$submitted=!1;r(this.$$controls,function(a){a.$setPristine()})},$setUntouched:function(){r(this.$$controls,function(a){a.$setUntouched()})},$setSubmitted:function(){for(var a=this;a.$$parentForm&&a.$$parentForm!==lb;)a=a.$$parentForm;a.$$setSubmitted()},$$setSubmitted:function(){this.$$animate.addClass(this.$$element,\"ng-submitted\");this.$submitted=!0;r(this.$$controls,function(a){a.$$setSubmitted&&a.$$setSubmitted()})}};ae({clazz:Pb,set:function(a,\nb,d){var c=a[b];c?-1===c.indexOf(d)&&c.push(d):a[b]=[d]},unset:function(a,b,d){var c=a[b];c&&(cb(c,d),0===c.length&&delete a[b])}});var ke=function(a){return[\"$timeout\",\"$parse\",function(b,d){function c(a){return\"\"===a?d('this[\"\"]').assign:d(a).assign||E}return{name:\"form\",restrict:a?\"EAC\":\"E\",require:[\"form\",\"^^?form\"],controller:Pb,compile:function(d,f){d.addClass(Za).addClass(mb);var g=f.name?\"name\":a&&f.ngForm?\"ngForm\":!1;return{pre:function(a,d,e,f){var p=f[0];if(!(\"action\"in e)){var n=function(b){a.$apply(function(){p.$commitViewValue();\np.$setSubmitted()});b.preventDefault()};d[0].addEventListener(\"submit\",n);d.on(\"$destroy\",function(){b(function(){d[0].removeEventListener(\"submit\",n)},0,!1)})}(f[1]||p.$$parentForm).$addControl(p);var s=g?c(p.$name):E;g&&(s(a,p),e.$observe(g,function(b){p.$name!==b&&(s(a,void 0),p.$$parentForm.$$renameControl(p,b),s=c(p.$name),s(a,p))}));d.on(\"$destroy\",function(){p.$$parentForm.$removeControl(p);s(a,void 0);S(p,lb)})}}}}}]},Ne=ke(),Ze=ke(!0),hh=/^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/,\nsh=/^[a-z][a-z\\d.+-]*:\\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\\s:/?#]+|\\[[a-f\\d:]+])(?::\\d+)?(?:\\/[^?#]*)?(?:\\?[^#]*)?(?:#.*)?$/i,th=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,ih=/^\\s*(-|\\+)?(\\d+|(\\d*(\\.\\d*)))([eE][+-]?\\d+)?\\s*$/,le=/^(\\d{4,})-(\\d{2})-(\\d{2})$/,me=/^(\\d{4,})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,Mc=/^(\\d{4,})-W(\\d\\d)$/,ne=/^(\\d{4,})-(\\d\\d)$/,\noe=/^(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,ce=T();r([\"date\",\"datetime-local\",\"month\",\"time\",\"week\"],function(a){ce[a]=!0});var pe={text:function(a,b,d,c,e,f){Sa(a,b,d,c,e,f);Hc(c)},date:nb(\"date\",le,Qb(le,[\"yyyy\",\"MM\",\"dd\"]),\"yyyy-MM-dd\"),\"datetime-local\":nb(\"datetimelocal\",me,Qb(me,\"yyyy MM dd HH mm ss sss\".split(\" \")),\"yyyy-MM-ddTHH:mm:ss.sss\"),time:nb(\"time\",oe,Qb(oe,[\"HH\",\"mm\",\"ss\",\"sss\"]),\"HH:mm:ss.sss\"),week:nb(\"week\",Mc,function(a,b){if(ha(a))return a;if(A(a)){Mc.lastIndex=0;var d=Mc.exec(a);\nif(d){var c=+d[1],e=+d[2],f=d=0,g=0,k=0,h=Xd(c),e=7*(e-1);b&&(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),k=b.getMilliseconds());return new Date(c,0,h.getDate()+e,d,f,g,k)}}return NaN},\"yyyy-Www\"),month:nb(\"month\",ne,Qb(ne,[\"yyyy\",\"MM\"]),\"yyyy-MM\"),number:function(a,b,d,c,e,f,g,k){Ic(a,b,d,c,\"number\");de(c);Sa(a,b,d,c,e,f);var h;if(w(d.min)||d.ngMin){var l=d.min||k(d.ngMin)(a);h=na(l);c.$validators.min=function(a,b){return c.$isEmpty(b)||z(h)||b>=h};d.$observe(\"min\",function(a){a!==l&&(h=na(a),\nl=a,c.$validate())})}if(w(d.max)||d.ngMax){var m=d.max||k(d.ngMax)(a),p=na(m);c.$validators.max=function(a,b){return c.$isEmpty(b)||z(p)||b<=p};d.$observe(\"max\",function(a){a!==m&&(p=na(a),m=a,c.$validate())})}if(w(d.step)||d.ngStep){var n=d.step||k(d.ngStep)(a),s=na(n);c.$validators.step=function(a,b){return c.$isEmpty(b)||z(s)||ee(b,h||0,s)};d.$observe(\"step\",function(a){a!==n&&(s=na(a),n=a,c.$validate())})}},url:function(a,b,d,c,e,f){Sa(a,b,d,c,e,f);Hc(c);c.$validators.url=function(a,b){var d=\na||b;return c.$isEmpty(d)||sh.test(d)}},email:function(a,b,d,c,e,f){Sa(a,b,d,c,e,f);Hc(c);c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||th.test(d)}},radio:function(a,b,d,c){var e=!d.ngTrim||\"false\"!==U(d.ngTrim);z(d.name)&&b.attr(\"name\",++pb);b.on(\"change\",function(a){var g;b[0].checked&&(g=d.value,e&&(g=U(g)),c.$setViewValue(g,a&&a.type))});c.$render=function(){var a=d.value;e&&(a=U(a));b[0].checked=a===c.$viewValue};d.$observe(\"value\",c.$render)},range:function(a,b,d,c,e,f){function g(a,\nc){b.attr(a,d[a]);var e=d[a];d.$observe(a,function(a){a!==e&&(e=a,c(a))})}function k(a){p=na(a);X(c.$modelValue)||(m?(a=b.val(),p>a&&(a=p,b.val(a)),c.$setViewValue(a)):c.$validate())}function h(a){n=na(a);X(c.$modelValue)||(m?(a=b.val(),n<a&&(b.val(n),a=n<p?p:n),c.$setViewValue(a)):c.$validate())}function l(a){s=na(a);X(c.$modelValue)||(m?c.$viewValue!==b.val()&&c.$setViewValue(b.val()):c.$validate())}Ic(a,b,d,c,\"range\");de(c);Sa(a,b,d,c,e,f);var m=c.$$hasNativeValidators&&\"range\"===b[0].type,p=m?\n0:void 0,n=m?100:void 0,s=m?1:void 0,r=b[0].validity;a=w(d.min);e=w(d.max);f=w(d.step);var q=c.$render;c.$render=m&&w(r.rangeUnderflow)&&w(r.rangeOverflow)?function(){q();c.$setViewValue(b.val())}:q;a&&(p=na(d.min),c.$validators.min=m?function(){return!0}:function(a,b){return c.$isEmpty(b)||z(p)||b>=p},g(\"min\",k));e&&(n=na(d.max),c.$validators.max=m?function(){return!0}:function(a,b){return c.$isEmpty(b)||z(n)||b<=n},g(\"max\",h));f&&(s=na(d.step),c.$validators.step=m?function(){return!r.stepMismatch}:\nfunction(a,b){return c.$isEmpty(b)||z(s)||ee(b,p||0,s)},g(\"step\",l))},checkbox:function(a,b,d,c,e,f,g,k){var h=fe(k,a,\"ngTrueValue\",d.ngTrueValue,!0),l=fe(k,a,\"ngFalseValue\",d.ngFalseValue,!1);b.on(\"change\",function(a){c.$setViewValue(b[0].checked,a&&a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=function(a){return!1===a};c.$formatters.push(function(a){return va(a,h)});c.$parsers.push(function(a){return a?h:l})},hidden:E,button:E,submit:E,reset:E,file:E},Yc=[\"$browser\",\"$sniffer\",\n\"$filter\",\"$parse\",function(a,b,d,c){return{restrict:\"E\",require:[\"?ngModel\"],link:{pre:function(e,f,g,k){k[0]&&(pe[K(g.type)]||pe.text)(e,f,g,k[0],b,a,d,c)}}}}],vf=function(){var a={configurable:!0,enumerable:!1,get:function(){return this.getAttribute(\"value\")||\"\"},set:function(a){this.setAttribute(\"value\",a)}};return{restrict:\"E\",priority:200,compile:function(b,d){if(\"hidden\"===K(d.type))return{pre:function(b,d,f,g){b=d[0];b.parentNode&&b.parentNode.insertBefore(b,b.nextSibling);Object.defineProperty&&\nObject.defineProperty(b,\"value\",a)}}}}},uh=/^(true|false|\\d+)$/,sf=function(){function a(a,d,c){var e=w(c)?c:9===Ca?\"\":null;a.prop(\"value\",e);d.$set(\"value\",c)}return{restrict:\"A\",priority:100,compile:function(b,d){return uh.test(d.ngValue)?function(b,d,f){b=b.$eval(f.ngValue);a(d,f,b)}:function(b,d,f){b.$watch(f.ngValue,function(b){a(d,f,b)})}}}},Re=[\"$compile\",function(a){return{restrict:\"AC\",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];\nb.$watch(e.ngBind,function(a){c.textContent=ic(a)})}}}}],Te=[\"$interpolate\",\"$compile\",function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe(\"ngBindTemplate\",function(a){d.textContent=z(a)?\"\":a})}}}}],Se=[\"$sce\",\"$parse\",\"$compile\",function(a,b,d){return{restrict:\"A\",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);\nreturn function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){var d=f(b);c.html(a.getTrustedHtml(d)||\"\")})}}}}],rf=ia({restrict:\"A\",require:\"ngModel\",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),Ue=Kc(\"\",!0),We=Kc(\"Odd\",0),Ve=Kc(\"Even\",1),Xe=Ra({compile:function(a,b){b.$set(\"ngCloak\",void 0);a.removeClass(\"ng-cloak\")}}),Ye=[function(){return{restrict:\"A\",scope:!0,controller:\"@\",priority:500}}],cd={},vh={blur:!0,focus:!0};r(\"click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste\".split(\" \"),\nfunction(a){var b=wa(\"ng-\"+a);cd[b]=[\"$parse\",\"$rootScope\",\"$exceptionHandler\",function(d,c,e){return qd(d,c,e,b,a,vh[a])}]});var af=[\"$animate\",\"$compile\",function(a,b){return{multiElement:!0,transclude:\"element\",priority:600,terminal:!0,restrict:\"A\",$$tlb:!0,link:function(d,c,e,f,g){var k,h,l;d.$watch(e.ngIf,function(d){d?h||g(function(d,f){h=f;d[d.length++]=b.$$createComment(\"end ngIf\",e.ngIf);k={clone:d};a.enter(d,c.parent(),c)}):(l&&(l.remove(),l=null),h&&(h.$destroy(),h=null),k&&(l=tb(k.clone),\na.leave(l).done(function(a){!1!==a&&(l=null)}),k=null))})}}}],bf=[\"$templateRequest\",\"$anchorScroll\",\"$animate\",function(a,b,d){return{restrict:\"ECA\",priority:400,terminal:!0,transclude:\"element\",controller:ca.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||\"\",k=e.autoscroll;return function(c,e,m,p,n){var r=0,q,t,x,v=function(){t&&(t.remove(),t=null);q&&(q.$destroy(),q=null);x&&(d.leave(x).done(function(a){!1!==a&&(t=null)}),t=x,x=null)};c.$watch(f,function(f){var m=function(a){!1===\na||!w(k)||k&&!c.$eval(k)||b()},t=++r;f?(a(f,!0).then(function(a){if(!c.$$destroyed&&t===r){var b=c.$new();p.template=a;a=n(b,function(a){v();d.enter(a,null,e).done(m)});q=b;x=a;q.$emit(\"$includeContentLoaded\",f);c.$eval(g)}},function(){c.$$destroyed||t!==r||(v(),c.$emit(\"$includeContentError\",f))}),c.$emit(\"$includeContentRequested\",f)):(v(),p.template=null)})}}}}],uf=[\"$compile\",function(a){return{restrict:\"ECA\",priority:-400,require:\"ngInclude\",link:function(b,d,c,e){la.call(d[0]).match(/SVG/)?\n(d.empty(),a(ed(e.template,C.document).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],cf=Ra({priority:450,compile:function(){return{pre:function(a,b,d){a.$eval(d.ngInit)}}}}),qf=function(){return{restrict:\"A\",priority:100,require:\"ngModel\",link:function(a,b,d,c){var e=d.ngList||\", \",f=\"false\"!==d.ngTrim,g=f?U(e):e;c.$parsers.push(function(a){if(!z(a)){var b=[];a&&r(a.split(g),function(a){a&&b.push(f?U(a):a)});return b}});c.$formatters.push(function(a){if(H(a))return a.join(e)});\nc.$isEmpty=function(a){return!a||!a.length}}}},mb=\"ng-valid\",$d=\"ng-invalid\",Za=\"ng-pristine\",Vb=\"ng-dirty\",ob=F(\"ngModel\");Rb.$inject=\"$scope $exceptionHandler $attrs $element $parse $animate $timeout $q $interpolate\".split(\" \");Rb.prototype={$$initGetterSetters:function(){if(this.$options.getOption(\"getterSetter\")){var a=this.$$parse(this.$$attr.ngModel+\"()\"),b=this.$$parse(this.$$attr.ngModel+\"($$$p)\");this.$$ngModelGet=function(b){var c=this.$$parsedNgModel(b);B(c)&&(c=a(b));return c};this.$$ngModelSet=\nfunction(a,c){B(this.$$parsedNgModel(a))?b(a,{$$$p:c}):this.$$parsedNgModelAssign(a,c)}}else if(!this.$$parsedNgModel.assign)throw ob(\"nonassign\",this.$$attr.ngModel,za(this.$$element));},$render:E,$isEmpty:function(a){return z(a)||\"\"===a||null===a||a!==a},$$updateEmptyClasses:function(a){this.$isEmpty(a)?(this.$$animate.removeClass(this.$$element,\"ng-not-empty\"),this.$$animate.addClass(this.$$element,\"ng-empty\")):(this.$$animate.removeClass(this.$$element,\"ng-empty\"),this.$$animate.addClass(this.$$element,\n\"ng-not-empty\"))},$setPristine:function(){this.$dirty=!1;this.$pristine=!0;this.$$animate.removeClass(this.$$element,Vb);this.$$animate.addClass(this.$$element,Za)},$setDirty:function(){this.$dirty=!0;this.$pristine=!1;this.$$animate.removeClass(this.$$element,Za);this.$$animate.addClass(this.$$element,Vb);this.$$parentForm.$setDirty()},$setUntouched:function(){this.$touched=!1;this.$untouched=!0;this.$$animate.setClass(this.$$element,\"ng-untouched\",\"ng-touched\")},$setTouched:function(){this.$touched=\n!0;this.$untouched=!1;this.$$animate.setClass(this.$$element,\"ng-touched\",\"ng-untouched\")},$rollbackViewValue:function(){this.$$timeout.cancel(this.$$pendingDebounce);this.$viewValue=this.$$lastCommittedViewValue;this.$render()},$validate:function(){if(!X(this.$modelValue)){var a=this.$$lastCommittedViewValue,b=this.$$rawModelValue,d=this.$valid,c=this.$modelValue,e=this.$options.getOption(\"allowInvalid\"),f=this;this.$$runValidators(b,a,function(a){e||d===a||(f.$modelValue=a?b:void 0,f.$modelValue!==\nc&&f.$$writeModelToScope())})}},$$runValidators:function(a,b,d){function c(){var c=!0;r(h.$validators,function(d,e){var g=Boolean(d(a,b));c=c&&g;f(e,g)});return c?!0:(r(h.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;r(h.$asyncValidators,function(e,g){var h=e(a,b);if(!h||!B(h.then))throw ob(\"nopromise\",h);f(g,void 0);c.push(h.then(function(){f(g,!0)},function(){d=!1;f(g,!1)}))});c.length?h.$$q.all(c).then(function(){g(d)},E):g(!0)}function f(a,b){k===h.$$currentValidationRunId&&\nh.$setValidity(a,b)}function g(a){k===h.$$currentValidationRunId&&d(a)}this.$$currentValidationRunId++;var k=this.$$currentValidationRunId,h=this;(function(){var a=h.$$parserName;if(z(h.$$parserValid))f(a,null);else return h.$$parserValid||(r(h.$validators,function(a,b){f(b,null)}),r(h.$asyncValidators,function(a,b){f(b,null)})),f(a,h.$$parserValid),h.$$parserValid;return!0})()?c()?e():g(!1):g(!1)},$commitViewValue:function(){var a=this.$viewValue;this.$$timeout.cancel(this.$$pendingDebounce);if(this.$$lastCommittedViewValue!==\na||\"\"===a&&this.$$hasNativeValidators)this.$$updateEmptyClasses(a),this.$$lastCommittedViewValue=a,this.$pristine&&this.$setDirty(),this.$$parseAndValidate()},$$parseAndValidate:function(){var a=this.$$lastCommittedViewValue,b=this;this.$$parserValid=z(a)?void 0:!0;this.$setValidity(this.$$parserName,null);this.$$parserName=\"parse\";if(this.$$parserValid)for(var d=0;d<this.$parsers.length;d++)if(a=this.$parsers[d](a),z(a)){this.$$parserValid=!1;break}X(this.$modelValue)&&(this.$modelValue=this.$$ngModelGet(this.$$scope));\nvar c=this.$modelValue,e=this.$options.getOption(\"allowInvalid\");this.$$rawModelValue=a;e&&(this.$modelValue=a,b.$modelValue!==c&&b.$$writeModelToScope());this.$$runValidators(a,this.$$lastCommittedViewValue,function(d){e||(b.$modelValue=d?a:void 0,b.$modelValue!==c&&b.$$writeModelToScope())})},$$writeModelToScope:function(){this.$$ngModelSet(this.$$scope,this.$modelValue);r(this.$viewChangeListeners,function(a){try{a()}catch(b){this.$$exceptionHandler(b)}},this)},$setViewValue:function(a,b){this.$viewValue=\na;this.$options.getOption(\"updateOnDefault\")&&this.$$debounceViewValueCommit(b)},$$debounceViewValueCommit:function(a){var b=this.$options.getOption(\"debounce\");W(b[a])?b=b[a]:W(b[\"default\"])&&-1===this.$options.getOption(\"updateOn\").indexOf(a)?b=b[\"default\"]:W(b[\"*\"])&&(b=b[\"*\"]);this.$$timeout.cancel(this.$$pendingDebounce);var d=this;0<b?this.$$pendingDebounce=this.$$timeout(function(){d.$commitViewValue()},b):this.$$rootScope.$$phase?this.$commitViewValue():this.$$scope.$apply(function(){d.$commitViewValue()})},\n$overrideModelOptions:function(a){this.$options=this.$options.createChild(a);this.$$setUpdateOnEvents()},$processModelValue:function(){var a=this.$$format();this.$viewValue!==a&&(this.$$updateEmptyClasses(a),this.$viewValue=this.$$lastCommittedViewValue=a,this.$render(),this.$$runValidators(this.$modelValue,this.$viewValue,E))},$$format:function(){for(var a=this.$formatters,b=a.length,d=this.$modelValue;b--;)d=a[b](d);return d},$$setModelValue:function(a){this.$modelValue=this.$$rawModelValue=a;this.$$parserValid=\nvoid 0;this.$processModelValue()},$$setUpdateOnEvents:function(){this.$$updateEvents&&this.$$element.off(this.$$updateEvents,this.$$updateEventHandler);if(this.$$updateEvents=this.$options.getOption(\"updateOn\"))this.$$element.on(this.$$updateEvents,this.$$updateEventHandler)},$$updateEventHandler:function(a){this.$$debounceViewValueCommit(a&&a.type)}};ae({clazz:Rb,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]}});var pf=[\"$rootScope\",function(a){return{restrict:\"A\",require:[\"ngModel\",\n\"^?form\",\"^?ngModelOptions\"],controller:Rb,priority:1,compile:function(b){b.addClass(Za).addClass(\"ng-untouched\").addClass(mb);return{pre:function(a,b,e,f){var g=f[0];b=f[1]||g.$$parentForm;if(f=f[2])g.$options=f.$options;g.$$initGetterSetters();b.$addControl(g);e.$observe(\"name\",function(a){g.$name!==a&&g.$$parentForm.$$renameControl(g,a)});a.$on(\"$destroy\",function(){g.$$parentForm.$removeControl(g)})},post:function(b,c,e,f){function g(){k.$setTouched()}var k=f[0];k.$$setUpdateOnEvents();c.on(\"blur\",\nfunction(){k.$touched||(a.$$phase?b.$evalAsync(g):b.$apply(g))})}}}}}],Sb,wh=/(\\s+|^)default(\\s+|$)/;Lc.prototype={getOption:function(a){return this.$$options[a]},createChild:function(a){var b=!1;a=S({},a);r(a,function(d,c){\"$inherit\"===d?\"*\"===c?b=!0:(a[c]=this.$$options[c],\"updateOn\"===c&&(a.updateOnDefault=this.$$options.updateOnDefault)):\"updateOn\"===c&&(a.updateOnDefault=!1,a[c]=U(d.replace(wh,function(){a.updateOnDefault=!0;return\" \"})))},this);b&&(delete a[\"*\"],ge(a,this.$$options));ge(a,Sb.$$options);\nreturn new Lc(a)}};Sb=new Lc({updateOn:\"\",updateOnDefault:!0,debounce:0,getterSetter:!1,allowInvalid:!1,timezone:null});var tf=function(){function a(a,d){this.$$attrs=a;this.$$scope=d}a.$inject=[\"$attrs\",\"$scope\"];a.prototype={$onInit:function(){var a=this.parentCtrl?this.parentCtrl.$options:Sb,d=this.$$scope.$eval(this.$$attrs.ngModelOptions);this.$options=a.createChild(d)}};return{restrict:\"A\",priority:10,require:{parentCtrl:\"?^^ngModelOptions\"},bindToController:!0,controller:a}},df=Ra({terminal:!0,\npriority:1E3}),xh=F(\"ngOptions\"),yh=/^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?(?:\\s+disable\\s+when\\s+([\\s\\S]+?))?\\s+for\\s+(?:([$\\w][$\\w]*)|(?:\\(\\s*([$\\w][$\\w]*)\\s*,\\s*([$\\w][$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,nf=[\"$compile\",\"$document\",\"$parse\",function(a,b,d){function c(a,b,c){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=b;this.label=c;this.group=d;this.disabled=f}function f(a){var b;if(!r&&ya(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&&\n\"$\"!==c.charAt(0)&&b.push(c)}return b}var p=a.match(yh);if(!p)throw xh(\"iexp\",a,za(b));var n=p[5]||p[7],r=p[6];a=/ as /.test(p[0])&&p[1];var q=p[9];b=d(p[2]?p[1]:n);var t=a&&d(a)||b,w=q&&d(q),v=q?function(a,b){return w(c,b)}:function(a){return La(a)},x=function(a,b){return v(a,A(a,b))},z=d(p[2]||p[1]),y=d(p[3]||\"\"),J=d(p[4]||\"\"),I=d(p[8]),B={},A=r?function(a,b){B[r]=b;B[n]=a;return B}:function(a){B[n]=a;return B};return{trackBy:q,getTrackByValue:x,getWatchables:d(I,function(a){var b=[];a=a||[];for(var d=\nf(a),e=d.length,g=0;g<e;g++){var k=a===d?g:d[g],l=a[k],k=A(l,k),l=v(l,k);b.push(l);if(p[2]||p[1])l=z(c,k),b.push(l);p[4]&&(k=J(c,k),b.push(k))}return b}),getOptions:function(){for(var a=[],b={},d=I(c)||[],g=f(d),k=g.length,n=0;n<k;n++){var p=d===g?n:g[n],r=A(d[p],p),s=t(c,r),p=v(s,r),w=z(c,r),B=y(c,r),r=J(c,r),s=new e(p,s,w,B,r);a.push(s);b[p]=s}return{items:a,selectValueMap:b,getOptionFromViewValue:function(a){return b[x(a)]},getViewValueFromOption:function(a){return q?Ia(a.viewValue):a.viewValue}}}}}\nvar e=C.document.createElement(\"option\"),f=C.document.createElement(\"optgroup\");return{restrict:\"A\",terminal:!0,require:[\"select\",\"ngModel\"],link:{pre:function(a,b,c,d){d[0].registerOption=E},post:function(d,k,h,l){function m(a){var b=(a=v.getOptionFromViewValue(a))&&a.element;b&&!b.selected&&(b.selected=!0);return a}function p(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);b.value=a.selectValue}var n=l[0],q=l[1],z=h.multiple;l=0;for(var t=k.children(),\nB=t.length;l<B;l++)if(\"\"===t[l].value){n.hasEmptyOption=!0;n.emptyOption=t.eq(l);break}k.empty();l=!!n.emptyOption;x(e.cloneNode(!1)).val(\"?\");var v,A=c(h.ngOptions,k,d),C=b[0].createDocumentFragment();n.generateUnknownOptionValue=function(a){return\"?\"};z?(n.writeValue=function(a){if(v){var b=a&&a.map(m)||[];v.items.forEach(function(a){a.element.selected&&-1===Array.prototype.indexOf.call(b,a)&&(a.element.selected=!1)})}},n.readValue=function(){var a=k.val()||[],b=[];r(a,function(a){(a=v.selectValueMap[a])&&\n!a.disabled&&b.push(v.getViewValueFromOption(a))});return b},A.trackBy&&d.$watchCollection(function(){if(H(q.$viewValue))return q.$viewValue.map(function(a){return A.getTrackByValue(a)})},function(){q.$render()})):(n.writeValue=function(a){if(v){var b=k[0].options[k[0].selectedIndex],c=v.getOptionFromViewValue(a);b&&b.removeAttribute(\"selected\");c?(k[0].value!==c.selectValue&&(n.removeUnknownOption(),k[0].value=c.selectValue,c.element.selected=!0),c.element.setAttribute(\"selected\",\"selected\")):n.selectUnknownOrEmptyOption(a)}},\nn.readValue=function(){var a=v.selectValueMap[k.val()];return a&&!a.disabled?(n.unselectEmptyOption(),n.removeUnknownOption(),v.getViewValueFromOption(a)):null},A.trackBy&&d.$watch(function(){return A.getTrackByValue(q.$viewValue)},function(){q.$render()}));l&&(a(n.emptyOption)(d),k.prepend(n.emptyOption),8===n.emptyOption[0].nodeType?(n.hasEmptyOption=!1,n.registerOption=function(a,b){\"\"===b.val()&&(n.hasEmptyOption=!0,n.emptyOption=b,n.emptyOption.removeClass(\"ng-scope\"),q.$render(),b.on(\"$destroy\",\nfunction(){var a=n.$isEmptyOptionSelected();n.hasEmptyOption=!1;n.emptyOption=void 0;a&&q.$render()}))}):n.emptyOption.removeClass(\"ng-scope\"));d.$watchCollection(A.getWatchables,function(){var a=v&&n.readValue();if(v)for(var b=v.items.length-1;0<=b;b--){var c=v.items[b];w(c.group)?Fb(c.element.parentNode):Fb(c.element)}v=A.getOptions();var d={};v.items.forEach(function(a){var b;if(w(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),C.appendChild(b),b.label=null===a.group?\"null\":a.group,d[a.group]=b);\nvar c=e.cloneNode(!1);b.appendChild(c);p(a,c)}else b=e.cloneNode(!1),C.appendChild(b),p(a,b)});k[0].appendChild(C);q.$render();q.$isEmpty(a)||(b=n.readValue(),(A.trackBy||z?va(a,b):a===b)||(q.$setViewValue(b),q.$render()))})}}}}],ef=[\"$locale\",\"$interpolate\",\"$log\",function(a,b,d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,k){function h(a){g.text(a||\"\")}var l=k.count,m=k.$attr.when&&g.attr(k.$attr.when),p=k.offset||0,n=f.$eval(m)||{},q={},w=b.startSymbol(),t=b.endSymbol(),x=w+l+\"-\"+\np+t,v=ca.noop,A;r(k,function(a,b){var c=e.exec(b);c&&(c=(c[1]?\"-\":\"\")+K(c[2]),n[c]=g.attr(k.$attr[b]))});r(n,function(a,d){q[d]=b(a.replace(c,x))});f.$watch(l,function(b){var c=parseFloat(b),e=X(c);e||c in n||(c=a.pluralCat(c-p));c===A||e&&X(A)||(v(),e=q[c],z(e)?(null!=b&&d.debug(\"ngPluralize: no rule defined for '\"+c+\"' in \"+m),v=E,h()):v=f.$watch(e,h),A=c)})}}}],qe=F(\"ngRef\"),ff=[\"$parse\",function(a){return{priority:-1,restrict:\"A\",compile:function(b,d){var c=wa(ua(b)),e=a(d.ngRef),f=e.assign||\nfunction(){throw qe(\"nonassign\",d.ngRef);};return function(a,b,h){var l;if(h.hasOwnProperty(\"ngRefRead\"))if(\"$element\"===h.ngRefRead)l=b;else{if(l=b.data(\"$\"+h.ngRefRead+\"Controller\"),!l)throw qe(\"noctrl\",h.ngRefRead,d.ngRef);}else l=b.data(\"$\"+c+\"Controller\");l=l||b;f(a,l);b.on(\"$destroy\",function(){e(a)===l&&f(a,null)})}}}}],gf=[\"$parse\",\"$animate\",\"$compile\",function(a,b,d){var c=F(\"ngRepeat\"),e=function(a,b,c,d,e,f,g){a[c]=d;e&&(a[e]=f);a.$index=b;a.$first=0===b;a.$last=b===g-1;a.$middle=!(a.$first||\na.$last);a.$odd=!(a.$even=0===(b&1))},f=function(a,b,c){return La(c)},g=function(a,b){return b};return{restrict:\"A\",multiElement:!0,transclude:\"element\",priority:1E3,terminal:!0,$$tlb:!0,compile:function(k,h){var l=h.ngRepeat,m=d.$$createComment(\"end ngRepeat\",l),p=l.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);if(!p)throw c(\"iexp\",l);var n=p[1],q=p[2],w=p[3],t=p[4],p=n.match(/^(?:(\\s*[$\\w]+)|\\(\\s*([$\\w]+)\\s*,\\s*([$\\w]+)\\s*\\))$/);if(!p)throw c(\"iidexp\",\nn);var x=p[3]||p[1],v=p[2];if(w&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(w)||/^(null|undefined|this|\\$index|\\$first|\\$middle|\\$last|\\$even|\\$odd|\\$parent|\\$root|\\$id)$/.test(w)))throw c(\"badident\",w);var z;if(t){var A={$id:La},y=a(t);z=function(a,b,c,d){v&&(A[v]=b);A[x]=c;A.$index=d;return y(a,A)}}return function(a,d,h,k,n){var p=T();a.$watchCollection(q,function(h){var k,q,t=d[0],s,y=T(),B,C,E,D,H,F,K;w&&(a[w]=h);if(ya(h))H=h,q=z||f;else for(K in q=z||g,H=[],h)ta.call(h,K)&&\"$\"!==K.charAt(0)&&H.push(K);\nB=H.length;K=Array(B);for(k=0;k<B;k++)if(C=h===H?k:H[k],E=h[C],D=q(a,C,E,k),p[D])F=p[D],delete p[D],y[D]=F,K[k]=F;else{if(y[D])throw r(K,function(a){a&&a.scope&&(p[a.id]=a)}),c(\"dupes\",l,D,E);K[k]={id:D,scope:void 0,clone:void 0};y[D]=!0}A&&(A[x]=void 0);for(s in p){F=p[s];D=tb(F.clone);b.leave(D);if(D[0].parentNode)for(k=0,q=D.length;k<q;k++)D[k].$$NG_REMOVED=!0;F.scope.$destroy()}for(k=0;k<B;k++)if(C=h===H?k:H[k],E=h[C],F=K[k],F.scope){s=t;do s=s.nextSibling;while(s&&s.$$NG_REMOVED);F.clone[0]!==\ns&&b.move(tb(F.clone),null,t);t=F.clone[F.clone.length-1];e(F.scope,k,x,E,v,C,B)}else n(function(a,c){F.scope=c;var d=m.cloneNode(!1);a[a.length++]=d;b.enter(a,null,t);t=d;F.clone=a;y[F.id]=F;e(F.scope,k,x,E,v,C,B)});p=y})}}}}],hf=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,function(b){a[b?\"removeClass\":\"addClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],$e=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(b,\nd,c){b.$watch(c.ngHide,function(b){a[b?\"addClass\":\"removeClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],jf=Ra(function(a,b,d){a.$watchCollection(d.ngStyle,function(a,d){d&&a!==d&&(a||(a={}),r(d,function(b,d){null==a[d]&&(a[d]=\"\")}));a&&b.css(a)})}),kf=[\"$animate\",\"$compile\",function(a,b){return{require:\"ngSwitch\",controller:[\"$scope\",function(){this.cases={}}],link:function(d,c,e,f){var g=[],k=[],h=[],l=[],m=function(a,b){return function(c){!1!==c&&a.splice(b,1)}};d.$watch(e.ngSwitch||\ne.on,function(c){for(var d,e;h.length;)a.cancel(h.pop());d=0;for(e=l.length;d<e;++d){var q=tb(k[d].clone);l[d].$destroy();(h[d]=a.leave(q)).done(m(h,d))}k.length=0;l.length=0;(g=f.cases[\"!\"+c]||f.cases[\"?\"])&&r(g,function(c){c.transclude(function(d,e){l.push(e);var f=c.element;d[d.length++]=b.$$createComment(\"end ngSwitchWhen\");k.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],lf=Ra({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,b,d,c,e){a=d.ngSwitchWhen.split(d.ngSwitchWhenSeparator).sort().filter(function(a,\nb,c){return c[b-1]!==a});r(a,function(a){c.cases[\"!\"+a]=c.cases[\"!\"+a]||[];c.cases[\"!\"+a].push({transclude:e,element:b})})}}),mf=Ra({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,b,d,c,e){c.cases[\"?\"]=c.cases[\"?\"]||[];c.cases[\"?\"].push({transclude:e,element:b})}}),zh=F(\"ngTransclude\"),of=[\"$compile\",function(a){return{restrict:\"EAC\",compile:function(b){var d=a(b.contents());b.empty();return function(a,b,f,g,k){function h(){d(a,function(a){b.append(a)})}if(!k)throw zh(\"orphan\",\nza(b));f.ngTransclude===f.$attr.ngTransclude&&(f.ngTransclude=\"\");f=f.ngTransclude||f.ngTranscludeSlot;k(function(a,c){var d;if(d=a.length)a:{d=0;for(var f=a.length;d<f;d++){var g=a[d];if(g.nodeType!==Pa||g.nodeValue.trim()){d=!0;break a}}d=void 0}d?b.append(a):(h(),c.$destroy())},null,f);f&&!k.isSlotFilled(f)&&h()}}}}],Oe=[\"$templateCache\",function(a){return{restrict:\"E\",terminal:!0,compile:function(b,d){\"text/ng-template\"===d.type&&a.put(d.id,b[0].text)}}}],Ah={$setViewValue:E,$render:E},Bh=[\"$element\",\n\"$scope\",function(a,b){function d(){g||(g=!0,b.$$postDigest(function(){g=!1;e.ngModelCtrl.$render()}))}function c(a){k||(k=!0,b.$$postDigest(function(){b.$$destroyed||(k=!1,e.ngModelCtrl.$setViewValue(e.readValue()),a&&e.ngModelCtrl.$render())}))}var e=this,f=new Hb;e.selectValueMap={};e.ngModelCtrl=Ah;e.multiple=!1;e.unknownOption=x(C.document.createElement(\"option\"));e.hasEmptyOption=!1;e.emptyOption=void 0;e.renderUnknownOption=function(b){b=e.generateUnknownOptionValue(b);e.unknownOption.val(b);\na.prepend(e.unknownOption);Oa(e.unknownOption,!0);a.val(b)};e.updateUnknownOption=function(b){b=e.generateUnknownOptionValue(b);e.unknownOption.val(b);Oa(e.unknownOption,!0);a.val(b)};e.generateUnknownOptionValue=function(a){return\"? \"+La(a)+\" ?\"};e.removeUnknownOption=function(){e.unknownOption.parent()&&e.unknownOption.remove()};e.selectEmptyOption=function(){e.emptyOption&&(a.val(\"\"),Oa(e.emptyOption,!0))};e.unselectEmptyOption=function(){e.hasEmptyOption&&Oa(e.emptyOption,!1)};b.$on(\"$destroy\",\nfunction(){e.renderUnknownOption=E});e.readValue=function(){var b=a.val(),b=b in e.selectValueMap?e.selectValueMap[b]:b;return e.hasOption(b)?b:null};e.writeValue=function(b){var c=a[0].options[a[0].selectedIndex];c&&Oa(x(c),!1);e.hasOption(b)?(e.removeUnknownOption(),c=La(b),a.val(c in e.selectValueMap?c:b),Oa(x(a[0].options[a[0].selectedIndex]),!0)):e.selectUnknownOrEmptyOption(b)};e.addOption=function(a,b){if(8!==b[0].nodeType){Ja(a,'\"option value\"');\"\"===a&&(e.hasEmptyOption=!0,e.emptyOption=\nb);var c=f.get(a)||0;f.set(a,c+1);d()}};e.removeOption=function(a){var b=f.get(a);b&&(1===b?(f.delete(a),\"\"===a&&(e.hasEmptyOption=!1,e.emptyOption=void 0)):f.set(a,b-1))};e.hasOption=function(a){return!!f.get(a)};e.$hasEmptyOption=function(){return e.hasEmptyOption};e.$isUnknownOptionSelected=function(){return a[0].options[0]===e.unknownOption[0]};e.$isEmptyOptionSelected=function(){return e.hasEmptyOption&&a[0].options[a[0].selectedIndex]===e.emptyOption[0]};e.selectUnknownOrEmptyOption=function(a){null==\na&&e.emptyOption?(e.removeUnknownOption(),e.selectEmptyOption()):e.unknownOption.parent().length?e.updateUnknownOption(a):e.renderUnknownOption(a)};var g=!1,k=!1;e.registerOption=function(a,b,f,g,k){if(f.$attr.ngValue){var q,r;f.$observe(\"value\",function(a){var d,f=b.prop(\"selected\");w(r)&&(e.removeOption(q),delete e.selectValueMap[r],d=!0);r=La(a);q=a;e.selectValueMap[r]=a;e.addOption(a,b);b.attr(\"value\",r);d&&f&&c()})}else g?f.$observe(\"value\",function(a){e.readValue();var d,f=b.prop(\"selected\");\nw(q)&&(e.removeOption(q),d=!0);q=a;e.addOption(a,b);d&&f&&c()}):k?a.$watch(k,function(a,d){f.$set(\"value\",a);var g=b.prop(\"selected\");d!==a&&e.removeOption(d);e.addOption(a,b);d&&g&&c()}):e.addOption(f.value,b);f.$observe(\"disabled\",function(a){if(\"true\"===a||a&&b.prop(\"selected\"))e.multiple?c(!0):(e.ngModelCtrl.$setViewValue(null),e.ngModelCtrl.$render())});b.on(\"$destroy\",function(){var a=e.readValue(),b=f.value;e.removeOption(b);d();(e.multiple&&a&&-1!==a.indexOf(b)||a===b)&&c(!0)})}}],Pe=function(){return{restrict:\"E\",\nrequire:[\"select\",\"?ngModel\"],controller:Bh,priority:1,link:{pre:function(a,b,d,c){var e=c[0],f=c[1];if(f){if(e.ngModelCtrl=f,b.on(\"change\",function(){e.removeUnknownOption();a.$apply(function(){f.$setViewValue(e.readValue())})}),d.multiple){e.multiple=!0;e.readValue=function(){var a=[];r(b.find(\"option\"),function(b){b.selected&&!b.disabled&&(b=b.value,a.push(b in e.selectValueMap?e.selectValueMap[b]:b))});return a};e.writeValue=function(a){r(b.find(\"option\"),function(b){var c=!!a&&(-1!==Array.prototype.indexOf.call(a,\nb.value)||-1!==Array.prototype.indexOf.call(a,e.selectValueMap[b.value]));c!==b.selected&&Oa(x(b),c)})};var g,k=NaN;a.$watch(function(){k!==f.$viewValue||va(g,f.$viewValue)||(g=ja(f.$viewValue),f.$render());k=f.$viewValue});f.$isEmpty=function(a){return!a||0===a.length}}}else e.registerOption=E},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},Qe=[\"$interpolate\",function(a){return{restrict:\"E\",priority:100,compile:function(b,d){var c,e;w(d.ngValue)||\n(w(d.value)?c=a(d.value,!0):(e=a(b.text(),!0))||d.$set(\"value\",b.text()));return function(a,b,d){var h=b.parent();(h=h.data(\"$selectController\")||h.parent().data(\"$selectController\"))&&h.registerOption(a,b,d,c,e)}}}}],$c=[\"$parse\",function(a){return{restrict:\"A\",require:\"?ngModel\",link:function(b,d,c,e){if(e){var f=c.hasOwnProperty(\"required\")||a(c.ngRequired)(b);c.ngRequired||(c.required=!0);e.$validators.required=function(a,b){return!f||!e.$isEmpty(b)};c.$observe(\"required\",function(a){f!==a&&(f=\na,e.$validate())})}}}}],Zc=[\"$parse\",function(a){return{restrict:\"A\",require:\"?ngModel\",compile:function(b,d){var c,e;d.ngPattern&&(c=d.ngPattern,e=\"/\"===d.ngPattern.charAt(0)&&ie.test(d.ngPattern)?function(){return d.ngPattern}:a(d.ngPattern));return function(a,b,d,h){if(h){var l=d.pattern;d.ngPattern?l=e(a):c=d.pattern;var m=he(l,c,b);d.$observe(\"pattern\",function(a){var d=m;m=he(a,c,b);(d&&d.toString())!==(m&&m.toString())&&h.$validate()});h.$validators.pattern=function(a,b){return h.$isEmpty(b)||\nz(m)||m.test(b)}}}}}}],bd=[\"$parse\",function(a){return{restrict:\"A\",require:\"?ngModel\",link:function(b,d,c,e){if(e){var f=c.maxlength||a(c.ngMaxlength)(b),g=Tb(f);c.$observe(\"maxlength\",function(a){f!==a&&(g=Tb(a),f=a,e.$validate())});e.$validators.maxlength=function(a,b){return 0>g||e.$isEmpty(b)||b.length<=g}}}}}],ad=[\"$parse\",function(a){return{restrict:\"A\",require:\"?ngModel\",link:function(b,d,c,e){if(e){var f=c.minlength||a(c.ngMinlength)(b),g=Tb(f)||-1;c.$observe(\"minlength\",function(a){f!==\na&&(g=Tb(a)||-1,f=a,e.$validate())});e.$validators.minlength=function(a,b){return e.$isEmpty(b)||b.length>=g}}}}}];C.angular.bootstrap?C.console&&console.log(\"WARNING: Tried to load AngularJS more than once.\"):(Fe(),Je(ca),ca.module(\"ngLocale\",[],[\"$provide\",function(a){function b(a){a+=\"\";var b=a.indexOf(\".\");return-1==b?0:a.length-b-1}a.value(\"$locale\",{DATETIME_FORMATS:{AMPMS:[\"AM\",\"PM\"],DAY:\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),ERANAMES:[\"Before Christ\",\"Anno Domini\"],\nERAS:[\"BC\",\"AD\"],FIRSTDAYOFWEEK:6,MONTH:\"January February March April May June July August September October November December\".split(\" \"),SHORTDAY:\"Sun Mon Tue Wed Thu Fri Sat\".split(\" \"),SHORTMONTH:\"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \"),STANDALONEMONTH:\"January February March April May June July August September October November December\".split(\" \"),WEEKENDRANGE:[5,6],fullDate:\"EEEE, MMMM d, y\",longDate:\"MMMM d, y\",medium:\"MMM d, y h:mm:ss a\",mediumDate:\"MMM d, y\",mediumTime:\"h:mm:ss a\",\n\"short\":\"M/d/yy h:mm a\",shortDate:\"M/d/yy\",shortTime:\"h:mm a\"},NUMBER_FORMATS:{CURRENCY_SYM:\"$\",DECIMAL_SEP:\".\",GROUP_SEP:\",\",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:\"-\",negSuf:\"\",posPre:\"\",posSuf:\"\"},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:\"-\\u00a4\",negSuf:\"\",posPre:\"\\u00a4\",posSuf:\"\"}]},id:\"en-us\",localeID:\"en_US\",pluralCat:function(a,c){var e=a|0,f=c;void 0===f&&(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&&0==f?\"one\":\"other\"}})}]),x(function(){Ae(C.document,\nUc)}))})(window);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');\n//# sourceMappingURL=angular.min.js.map\n","/**\n * State-based routing for AngularJS 1.x\n * NOTICE: This monolithic bundle also bundles the @uirouter/core code.\n *         This causes it to be incompatible with plugins that depend on @uirouter/core.\n *         We recommend switching to the ui-router-core.js and ui-router-angularjs.js bundles instead.\n *         For more information, see https://ui-router.github.io/blog/uirouter-for-angularjs-umd-bundles\n * @version v1.0.22\n * @link https://ui-router.github.io\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('angular')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'angular'], factory) :\n    (global = global || self, factory(global['@uirouter/angularjs'] = {}, global.angular));\n}(this, function (exports, ng_from_import) { 'use strict';\n\n    /** @publicapi @module ng1 */ /** */\n    /** @hidden */ var ng_from_global = angular;\n    /** @hidden */ var ng = ng_from_import && ng_from_import.module ? ng_from_import : ng_from_global;\n\n    /**\n     * Higher order functions\n     *\n     * These utility functions are exported, but are subject to change without notice.\n     *\n     * @module common_hof\n     */ /** */\n    /**\n     * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n     *\n     * Given a function with N parameters, returns a new function that supports partial application.\n     * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n     * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n     * accept more parameters until all N parameters have been supplied.\n     *\n     *\n     * This contrived example uses a partially applied function as an predicate, which returns true\n     * if an object is found in both arrays.\n     * @example\n     * ```\n     * // returns true if an object is in both of the two arrays\n     * function inBoth(array1, array2, object) {\n     *   return array1.indexOf(object) !== -1 &&\n     *          array2.indexOf(object) !== 1;\n     * }\n     * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n     * let foos = [obj1, obj3]\n     * let bars = [obj3, obj4, obj5]\n     *\n     * // A curried \"copy\" of inBoth\n     * let curriedInBoth = curry(inBoth);\n     * // Partially apply both the array1 and array2\n     * let inFoosAndBars = curriedInBoth(foos, bars);\n     *\n     * // Supply the final argument; since all arguments are\n     * // supplied, the original inBoth function is then called.\n     * let obj1InBoth = inFoosAndBars(obj1); // false\n     *\n     * // Use the inFoosAndBars as a predicate.\n     * // Filter, on each iteration, supplies the final argument\n     * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n     * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n     *\n     * ```\n     *\n     * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n     *\n     * @param fn\n     * @returns {*|function(): (*|any)}\n     */\n    function curry(fn) {\n        var initial_args = [].slice.apply(arguments, [1]);\n        var func_args_length = fn.length;\n        function curried(args) {\n            if (args.length >= func_args_length)\n                return fn.apply(null, args);\n            return function () {\n                return curried(args.concat([].slice.apply(arguments)));\n            };\n        }\n        return curried(initial_args);\n    }\n    /**\n     * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n     * given: f(x), g(x), h(x)\n     * let composed = compose(f,g,h)\n     * then, composed is: f(g(h(x)))\n     */\n    function compose() {\n        var args = arguments;\n        var start = args.length - 1;\n        return function () {\n            var i = start, result = args[start].apply(this, arguments);\n            while (i--)\n                result = args[i].call(this, result);\n            return result;\n        };\n    }\n    /**\n     * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n     * given: f(x), g(x), h(x)\n     * let piped = pipe(f,g,h);\n     * then, piped is: h(g(f(x)))\n     */\n    function pipe() {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        return compose.apply(null, [].slice.call(arguments).reverse());\n    }\n    /**\n     * Given a property name, returns a function that returns that property from an object\n     * let obj = { foo: 1, name: \"blarg\" };\n     * let getName = prop(\"name\");\n     * getName(obj) === \"blarg\"\n     */\n    var prop = function (name) { return function (obj) { return obj && obj[name]; }; };\n    /**\n     * Given a property name and a value, returns a function that returns a boolean based on whether\n     * the passed object has a property that matches the value\n     * let obj = { foo: 1, name: \"blarg\" };\n     * let getName = propEq(\"name\", \"blarg\");\n     * getName(obj) === true\n     */\n    var propEq = curry(function (name, _val, obj) { return obj && obj[name] === _val; });\n    /**\n     * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n     * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n     * let getName = prop(\"nestedObj.name\");\n     * getName(obj) === \"blarg\"\n     * let propNotFound = prop(\"this.property.doesnt.exist\");\n     * propNotFound(obj) === undefined\n     */\n    var parse = function (name) { return pipe.apply(null, name.split('.').map(prop)); };\n    /**\n     * Given a function that returns a truthy or falsey value, returns a\n     * function that returns the opposite (falsey or truthy) value given the same inputs\n     */\n    var not = function (fn) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    }; };\n    /**\n     * Given two functions that return truthy or falsey values, returns a function that returns truthy\n     * if both functions return truthy for the given arguments\n     */\n    function and(fn1, fn2) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return fn1.apply(null, args) && fn2.apply(null, args);\n        };\n    }\n    /**\n     * Given two functions that return truthy or falsey values, returns a function that returns truthy\n     * if at least one of the functions returns truthy for the given arguments\n     */\n    function or(fn1, fn2) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return fn1.apply(null, args) || fn2.apply(null, args);\n        };\n    }\n    /**\n     * Check if all the elements of an array match a predicate function\n     *\n     * @param fn1 a predicate function `fn1`\n     * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n     */\n    var all = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); }; };\n    // tslint:disable-next-line:variable-name\n    var any = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); }; };\n    /** Given a class, returns a Predicate function that returns true if the object is of that class */\n    var is = function (ctor) { return function (obj) {\n        return (obj != null && obj.constructor === ctor) || obj instanceof ctor;\n    }; };\n    /** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\n    var eq = function (value) { return function (other) { return value === other; }; };\n    /** Given a value, returns a function which returns the value */\n    var val = function (v) { return function () { return v; }; };\n    function invoke(fnName, args) {\n        return function (obj) { return obj[fnName].apply(obj, args); };\n    }\n    /**\n     * Sorta like Pattern Matching (a functional programming conditional construct)\n     *\n     * See http://c2.com/cgi/wiki?PatternMatching\n     *\n     * This is a conditional construct which allows a series of predicates and output functions\n     * to be checked and then applied.  Each predicate receives the input.  If the predicate\n     * returns truthy, then its matching output function (mapping function) is provided with\n     * the input and, then the result is returned.\n     *\n     * Each combination (2-tuple) of predicate + output function should be placed in an array\n     * of size 2: [ predicate, mapFn ]\n     *\n     * These 2-tuples should be put in an outer array.\n     *\n     * @example\n     * ```\n     *\n     * // Here's a 2-tuple where the first element is the isString predicate\n     * // and the second element is a function that returns a description of the input\n     * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n     *\n     * // Second tuple: predicate \"isNumber\", mapfn returns a description\n     * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n     *\n     * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n     *\n     * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n     *\n     * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n     *\n     * console.log(descriptionOf(undefined)); // 'notdefined'\n     * console.log(descriptionOf(55)); // '(55) That's a number!'\n     * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n     * ```\n     *\n     * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n     * with a Predicate and a mapping/output function\n     * @returns {function(any): *}\n     */\n    function pattern(struct) {\n        return function (x) {\n            for (var i = 0; i < struct.length; i++) {\n                if (struct[i][0](x))\n                    return struct[i][1](x);\n            }\n        };\n    }\n\n    /** Predicates\n     *\n     * These predicates return true/false based on the input.\n     * Although these functions are exported, they are subject to change without notice.\n     *\n     * @module common_predicates\n     */ /** */\n    var toStr = Object.prototype.toString;\n    var tis = function (t) { return function (x) { return typeof x === t; }; };\n    var isUndefined = tis('undefined');\n    var isDefined = not(isUndefined);\n    var isNull = function (o) { return o === null; };\n    var isNullOrUndefined = or(isNull, isUndefined);\n    var isFunction = tis('function');\n    var isNumber = tis('number');\n    var isString = tis('string');\n    var isObject = function (x) { return x !== null && typeof x === 'object'; };\n    var isArray = Array.isArray;\n    var isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\n    var isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n    /**\n     * Predicate which checks if a value is injectable\n     *\n     * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n     * where all the elements in the array are Strings, except the last one, which is a Function\n     */\n    function isInjectable(val$$1) {\n        if (isArray(val$$1) && val$$1.length) {\n            var head = val$$1.slice(0, -1), tail = val$$1.slice(-1);\n            return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n        }\n        return isFunction(val$$1);\n    }\n    /**\n     * Predicate which checks if a value looks like a Promise\n     *\n     * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n     */\n    var isPromise = and(isObject, pipe(prop('then'), isFunction));\n\n    var noImpl = function (fnname) { return function () {\n        throw new Error(\"No implementation for \" + fnname + \". The framework specific code did not implement this method.\");\n    }; };\n    var makeStub = function (service, methods) {\n        return methods.reduce(function (acc, key) { return ((acc[key] = noImpl(service + \".\" + key + \"()\")), acc); }, {});\n    };\n    var services = {\n        $q: undefined,\n        $injector: undefined,\n    };\n\n    /**\n     * Random utility functions used in the UI-Router code\n     *\n     * These functions are exported, but are subject to change without notice.\n     *\n     * @preferred @publicapi @module common\n     */ /** */\n    var root = (typeof self === 'object' && self.self === self && self) ||\n        (typeof global === 'object' && global.global === global && global) ||\n        undefined;\n    var angular$1 = root.angular || {};\n    var fromJson = angular$1.fromJson || JSON.parse.bind(JSON);\n    var toJson = angular$1.toJson || JSON.stringify.bind(JSON);\n    var forEach = angular$1.forEach || _forEach;\n    var extend = Object.assign || _extend;\n    var equals = angular$1.equals || _equals;\n    function identity(x) {\n        return x;\n    }\n    function noop() { }\n    /**\n     * Builds proxy functions on the `to` object which pass through to the `from` object.\n     *\n     * For each key in `fnNames`, creates a proxy function on the `to` object.\n     * The proxy function calls the real function on the `from` object.\n     *\n     *\n     * #### Example:\n     * This example creates an new class instance whose functions are prebound to the new'd object.\n     * ```js\n     * class Foo {\n     *   constructor(data) {\n     *     // Binds all functions from Foo.prototype to 'this',\n     *     // then copies them to 'this'\n     *     bindFunctions(Foo.prototype, this, this);\n     *     this.data = data;\n     *   }\n     *\n     *   log() {\n     *     console.log(this.data);\n     *   }\n     * }\n     *\n     * let myFoo = new Foo([1,2,3]);\n     * var logit = myFoo.log;\n     * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n     * ```\n     *\n     * #### Example:\n     * This example creates a bound version of a service function, and copies it to another object\n     * ```\n     *\n     * var SomeService = {\n     *   this.data = [3, 4, 5];\n     *   this.log = function() {\n     *     console.log(this.data);\n     *   }\n     * }\n     *\n     * // Constructor fn\n     * function OtherThing() {\n     *   // Binds all functions from SomeService to SomeService,\n     *   // then copies them to 'this'\n     *   bindFunctions(SomeService, this, SomeService);\n     * }\n     *\n     * let myOtherThing = new OtherThing();\n     * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n     * ```\n     *\n     * @param source A function that returns the source object which contains the original functions to be bound\n     * @param target A function that returns the target object which will receive the bound functions\n     * @param bind A function that returns the object which the functions will be bound to\n     * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n     * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n     */\n    function createProxyFunctions(source, target, bind, fnNames, latebind) {\n        if (latebind === void 0) { latebind = false; }\n        var bindFunction = function (fnName) { return source()[fnName].bind(bind()); };\n        var makeLateRebindFn = function (fnName) {\n            return function lateRebindFunction() {\n                target[fnName] = bindFunction(fnName);\n                return target[fnName].apply(null, arguments);\n            };\n        };\n        fnNames = fnNames || Object.keys(source());\n        return fnNames.reduce(function (acc, name) {\n            acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n            return acc;\n        }, target);\n    }\n    /**\n     * prototypal inheritance helper.\n     * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n     */\n    var inherit = function (parent, extra) { return extend(Object.create(parent), extra); };\n    /** Given an array, returns true if the object is found in the array, (using indexOf) */\n    var inArray = curry(_inArray);\n    function _inArray(array, obj) {\n        return array.indexOf(obj) !== -1;\n    }\n    /**\n     * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n     * The same array is returned\n     */\n    var removeFrom = curry(_removeFrom);\n    function _removeFrom(array, obj) {\n        var idx = array.indexOf(obj);\n        if (idx >= 0)\n            array.splice(idx, 1);\n        return array;\n    }\n    /** pushes a values to an array and returns the value */\n    var pushTo = curry(_pushTo);\n    function _pushTo(arr, val$$1) {\n        return arr.push(val$$1), val$$1;\n    }\n    /** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\n    var deregAll = function (functions) {\n        return functions.slice().forEach(function (fn) {\n            typeof fn === 'function' && fn();\n            removeFrom(functions, fn);\n        });\n    };\n    /**\n     * Applies a set of defaults to an options object.  The options object is filtered\n     * to only those properties of the objects in the defaultsList.\n     * Earlier objects in the defaultsList take precedence when applying defaults.\n     */\n    function defaults(opts) {\n        var defaultsList = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            defaultsList[_i - 1] = arguments[_i];\n        }\n        var defaultVals = extend.apply(void 0, [{}].concat(defaultsList.reverse()));\n        return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n    }\n    /** Reduce function that merges each element of the list into a single object, using extend */\n    var mergeR = function (memo, item) { return extend(memo, item); };\n    /**\n     * Finds the common ancestor path between two states.\n     *\n     * @param {Object} first The first state.\n     * @param {Object} second The second state.\n     * @return {Array} Returns an array of state names in descending order, not including the root.\n     */\n    function ancestors(first, second) {\n        var path = [];\n        // tslint:disable-next-line:forin\n        for (var n in first.path) {\n            if (first.path[n] !== second.path[n])\n                break;\n            path.push(first.path[n]);\n        }\n        return path;\n    }\n    /**\n     * Return a copy of the object only containing the whitelisted properties.\n     *\n     * #### Example:\n     * ```\n     * var foo = { a: 1, b: 2, c: 3 };\n     * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n     * ```\n     * @param obj the source object\n     * @param propNames an Array of strings, which are the whitelisted property names\n     */\n    function pick(obj, propNames) {\n        var objCopy = {};\n        for (var _prop in obj) {\n            if (propNames.indexOf(_prop) !== -1) {\n                objCopy[_prop] = obj[_prop];\n            }\n        }\n        return objCopy;\n    }\n    /**\n     * Return a copy of the object omitting the blacklisted properties.\n     *\n     * @example\n     * ```\n     *\n     * var foo = { a: 1, b: 2, c: 3 };\n     * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n     * ```\n     * @param obj the source object\n     * @param propNames an Array of strings, which are the blacklisted property names\n     */\n    function omit(obj, propNames) {\n        return Object.keys(obj)\n            .filter(not(inArray(propNames)))\n            .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n    }\n    /**\n     * Maps an array, or object to a property (by name)\n     */\n    function pluck(collection, propName) {\n        return map(collection, prop(propName));\n    }\n    /** Filters an Array or an Object's properties based on a predicate */\n    function filter(collection, callback) {\n        var arr = isArray(collection), result = arr ? [] : {};\n        var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return (result[key] = x); };\n        forEach(collection, function (item, i) {\n            if (callback(item, i))\n                accept(item, i);\n        });\n        return result;\n    }\n    /** Finds an object from an array, or a property of an object, that matches a predicate */\n    function find(collection, callback) {\n        var result;\n        forEach(collection, function (item, i) {\n            if (result)\n                return;\n            if (callback(item, i))\n                result = item;\n        });\n        return result;\n    }\n    /** Given an object, returns a new object, where each property is transformed by the callback function */\n    var mapObj = map;\n    /** Maps an array or object properties using a callback function */\n    function map(collection, callback, target) {\n        target = target || (isArray(collection) ? [] : {});\n        forEach(collection, function (item, i) { return (target[i] = callback(item, i)); });\n        return target;\n    }\n    /**\n     * Given an object, return its enumerable property values\n     *\n     * @example\n     * ```\n     *\n     * let foo = { a: 1, b: 2, c: 3 }\n     * let vals = values(foo); // [ 1, 2, 3 ]\n     * ```\n     */\n    var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\n    /**\n     * Reduce function that returns true if all of the values are truthy.\n     *\n     * @example\n     * ```\n     *\n     * let vals = [ 1, true, {}, \"hello world\"];\n     * vals.reduce(allTrueR, true); // true\n     *\n     * vals.push(0);\n     * vals.reduce(allTrueR, true); // false\n     * ```\n     */\n    var allTrueR = function (memo, elem) { return memo && elem; };\n    /**\n     * Reduce function that returns true if any of the values are truthy.\n     *\n     *  * @example\n     * ```\n     *\n     * let vals = [ 0, null, undefined ];\n     * vals.reduce(anyTrueR, true); // false\n     *\n     * vals.push(\"hello world\");\n     * vals.reduce(anyTrueR, true); // true\n     * ```\n     */\n    var anyTrueR = function (memo, elem) { return memo || elem; };\n    /**\n     * Reduce function which un-nests a single level of arrays\n     * @example\n     * ```\n     *\n     * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n     * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n     * ```\n     */\n    var unnestR = function (memo, elem) { return memo.concat(elem); };\n    /**\n     * Reduce function which recursively un-nests all arrays\n     *\n     * @example\n     * ```\n     *\n     * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n     * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n     * ```\n     */\n    var flattenR = function (memo, elem) {\n        return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n    };\n    /**\n     * Reduce function that pushes an object to an array, then returns the array.\n     * Mostly just for [[flattenR]] and [[uniqR]]\n     */\n    function pushR(arr, obj) {\n        arr.push(obj);\n        return arr;\n    }\n    /** Reduce function that filters out duplicates */\n    var uniqR = function (acc, token) { return (inArray(acc, token) ? acc : pushR(acc, token)); };\n    /**\n     * Return a new array with a single level of arrays unnested.\n     *\n     * @example\n     * ```\n     *\n     * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n     * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n     * ```\n     */\n    var unnest = function (arr) { return arr.reduce(unnestR, []); };\n    /**\n     * Return a completely flattened version of an array.\n     *\n     * @example\n     * ```\n     *\n     * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n     * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n     * ```\n     */\n    var flatten = function (arr) { return arr.reduce(flattenR, []); };\n    /**\n     * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n     * @example\n     * ```\n     *\n     * let isNumber = (obj) => typeof(obj) === 'number';\n     * let allNumbers = [ 1, 2, 3, 4, 5 ];\n     * allNumbers.filter(assertPredicate(isNumber)); //OK\n     *\n     * let oneString = [ 1, 2, 3, 4, \"5\" ];\n     * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n     * ```\n     */\n    var assertPredicate = assertFn;\n    /**\n     * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n     * @example\n     * ```\n     *\n     * var data = { foo: 1, bar: 2 };\n     *\n     * let keys = [ 'foo', 'bar' ]\n     * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n     * // values is [1, 2]\n     *\n     * let keys = [ 'foo', 'bar', 'baz' ]\n     * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n     * // throws Error(\"Key not found\")\n     * ```\n     */\n    var assertMap = assertFn;\n    function assertFn(predicateOrMap, errMsg) {\n        if (errMsg === void 0) { errMsg = 'assert failure'; }\n        return function (obj) {\n            var result = predicateOrMap(obj);\n            if (!result) {\n                throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n            }\n            return result;\n        };\n    }\n    /**\n     * Like _.pairs: Given an object, returns an array of key/value pairs\n     *\n     * @example\n     * ```\n     *\n     * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n     * ```\n     */\n    var pairs = function (obj) { return Object.keys(obj).map(function (key) { return [key, obj[key]]; }); };\n    /**\n     * Given two or more parallel arrays, returns an array of tuples where\n     * each tuple is composed of [ a[i], b[i], ... z[i] ]\n     *\n     * @example\n     * ```\n     *\n     * let foo = [ 0, 2, 4, 6 ];\n     * let bar = [ 1, 3, 5, 7 ];\n     * let baz = [ 10, 30, 50, 70 ];\n     * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n     * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n     * ```\n     */\n    function arrayTuples() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length === 0)\n            return [];\n        var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n        var result = [];\n        var _loop_1 = function (i) {\n            // This is a hot function\n            // Unroll when there are 1-4 arguments\n            switch (args.length) {\n                case 1:\n                    result.push([args[0][i]]);\n                    break;\n                case 2:\n                    result.push([args[0][i], args[1][i]]);\n                    break;\n                case 3:\n                    result.push([args[0][i], args[1][i], args[2][i]]);\n                    break;\n                case 4:\n                    result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                    break;\n                default:\n                    result.push(args.map(function (array) { return array[i]; }));\n                    break;\n            }\n        };\n        for (var i = 0; i < maxArrayLen; i++) {\n            _loop_1(i);\n        }\n        return result;\n    }\n    /**\n     * Reduce function which builds an object from an array of [key, value] pairs.\n     *\n     * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n     *\n     * Each keyValueTuple should be an array with values [ key: string, value: any ]\n     *\n     * @example\n     * ```\n     *\n     * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n     *\n     * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n     * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n     *\n     * // Or, more simply:\n     * var pairsToObj = pairs.reduce(applyPairs, {})\n     * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n     * ```\n     */\n    function applyPairs(memo, keyValTuple) {\n        var key, value;\n        if (isArray(keyValTuple))\n            key = keyValTuple[0], value = keyValTuple[1];\n        if (!isString(key))\n            throw new Error('invalid parameters to applyPairs');\n        memo[key] = value;\n        return memo;\n    }\n    /** Get the last element of an array */\n    function tail(arr) {\n        return (arr.length && arr[arr.length - 1]) || undefined;\n    }\n    /**\n     * shallow copy from src to dest\n     */\n    function copy(src, dest) {\n        if (dest)\n            Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n        if (!dest)\n            dest = {};\n        return extend(dest, src);\n    }\n    /** Naive forEach implementation works with Objects or Arrays */\n    function _forEach(obj, cb, _this) {\n        if (isArray(obj))\n            return obj.forEach(cb, _this);\n        Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n    }\n    function _extend(toObj) {\n        for (var i = 1; i < arguments.length; i++) {\n            var obj = arguments[i];\n            if (!obj)\n                continue;\n            var keys = Object.keys(obj);\n            for (var j = 0; j < keys.length; j++) {\n                toObj[keys[j]] = obj[keys[j]];\n            }\n        }\n        return toObj;\n    }\n    function _equals(o1, o2) {\n        if (o1 === o2)\n            return true;\n        if (o1 === null || o2 === null)\n            return false;\n        if (o1 !== o1 && o2 !== o2)\n            return true; // NaN === NaN\n        var t1 = typeof o1, t2 = typeof o2;\n        if (t1 !== t2 || t1 !== 'object')\n            return false;\n        var tup = [o1, o2];\n        if (all(isArray)(tup))\n            return _arraysEq(o1, o2);\n        if (all(isDate)(tup))\n            return o1.getTime() === o2.getTime();\n        if (all(isRegExp)(tup))\n            return o1.toString() === o2.toString();\n        if (all(isFunction)(tup))\n            return true; // meh\n        var predicates = [isFunction, isArray, isDate, isRegExp];\n        if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n            return false;\n        var keys = {};\n        // tslint:disable-next-line:forin\n        for (var key in o1) {\n            if (!_equals(o1[key], o2[key]))\n                return false;\n            keys[key] = true;\n        }\n        for (var key in o2) {\n            if (!keys[key])\n                return false;\n        }\n        return true;\n    }\n    function _arraysEq(a1, a2) {\n        if (a1.length !== a2.length)\n            return false;\n        return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n    }\n    // issue #2676\n    var silenceUncaughtInPromise = function (promise) { return promise.catch(function (e) { return 0; }) && promise; };\n    var silentRejection = function (error) { return silenceUncaughtInPromise(services.$q.reject(error)); };\n\n    /** @publicapi @module core */\n    /**\n     * Matches state names using glob-like pattern strings.\n     *\n     * Globs can be used in specific APIs including:\n     *\n     * - [[StateService.is]]\n     * - [[StateService.includes]]\n     * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n     *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n     *\n     * A `Glob` string is a pattern which matches state names.\n     * Nested state names are split into segments (separated by a dot) when processing.\n     * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n     *\n     * Globs work according to the following rules:\n     *\n     * ### Exact match:\n     *\n     * The glob `'A.B'` matches the state named exactly `'A.B'`.\n     *\n     * | Glob        |Matches states named|Does not match state named|\n     * |:------------|:--------------------|:---------------------|\n     * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n     * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n     * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n     *\n     * ### Single star (`*`)\n     *\n     * A single star (`*`) is a wildcard that matches exactly one segment.\n     *\n     * | Glob        |Matches states named  |Does not match state named |\n     * |:------------|:---------------------|:--------------------------|\n     * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n     * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n     * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n     *\n     * ### Double star (`**`)\n     *\n     * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n     *\n     * | Glob        |Matches states named                           |Does not match state named         |\n     * |:------------|:----------------------------------------------|:----------------------------------|\n     * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n     * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n     * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n     * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n     *\n     */\n    var Glob = /** @class */ (function () {\n        function Glob(text) {\n            this.text = text;\n            this.glob = text.split('.');\n            var regexpString = this.text\n                .split('.')\n                .map(function (seg) {\n                if (seg === '**')\n                    return '(?:|(?:\\\\.[^.]*)*)';\n                if (seg === '*')\n                    return '\\\\.[^.]*';\n                return '\\\\.' + seg;\n            })\n                .join('');\n            this.regexp = new RegExp('^' + regexpString + '$');\n        }\n        /** Returns true if the string has glob-like characters in it */\n        Glob.is = function (text) {\n            return !!/[!,*]+/.exec(text);\n        };\n        /** Returns a glob from the string, or null if the string isn't Glob-like */\n        Glob.fromString = function (text) {\n            return Glob.is(text) ? new Glob(text) : null;\n        };\n        Glob.prototype.matches = function (name) {\n            return this.regexp.test('.' + name);\n        };\n        return Glob;\n    }());\n\n    /** @publicapi @module common */ /** */\n    var Queue = /** @class */ (function () {\n        function Queue(_items, _limit) {\n            if (_items === void 0) { _items = []; }\n            if (_limit === void 0) { _limit = null; }\n            this._items = _items;\n            this._limit = _limit;\n            this._evictListeners = [];\n            this.onEvict = pushTo(this._evictListeners);\n        }\n        Queue.prototype.enqueue = function (item) {\n            var items = this._items;\n            items.push(item);\n            if (this._limit && items.length > this._limit)\n                this.evict();\n            return item;\n        };\n        Queue.prototype.evict = function () {\n            var item = this._items.shift();\n            this._evictListeners.forEach(function (fn) { return fn(item); });\n            return item;\n        };\n        Queue.prototype.dequeue = function () {\n            if (this.size())\n                return this._items.splice(0, 1)[0];\n        };\n        Queue.prototype.clear = function () {\n            var current = this._items;\n            this._items = [];\n            return current;\n        };\n        Queue.prototype.size = function () {\n            return this._items.length;\n        };\n        Queue.prototype.remove = function (item) {\n            var idx = this._items.indexOf(item);\n            return idx > -1 && this._items.splice(idx, 1)[0];\n        };\n        Queue.prototype.peekTail = function () {\n            return this._items[this._items.length - 1];\n        };\n        Queue.prototype.peekHead = function () {\n            if (this.size())\n                return this._items[0];\n        };\n        return Queue;\n    }());\n\n    /** @publicapi @module transition */ /** */\n\n    (function (RejectType) {\n        /**\n         * A new transition superseded this one.\n         *\n         * While this transition was running, a new transition started.\n         * This transition is cancelled because it was superseded by new transition.\n         */\n        RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n        /**\n         * The transition was aborted\n         *\n         * The transition was aborted by a hook which returned `false`\n         */\n        RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n        /**\n         * The transition was invalid\n         *\n         * The transition was never started because it was invalid\n         */\n        RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n        /**\n         * The transition was ignored\n         *\n         * The transition was ignored because it would have no effect.\n         *\n         * Either:\n         *\n         * - The transition is targeting the current state and parameter values\n         * - The transition is targeting the same state and parameter values as the currently running transition.\n         */\n        RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n        /**\n         * The transition errored.\n         *\n         * This generally means a hook threw an error or returned a rejected promise\n         */\n        RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n    })(exports.RejectType || (exports.RejectType = {}));\n    /** @hidden */\n    var id = 0;\n    var Rejection = /** @class */ (function () {\n        function Rejection(type, message, detail) {\n            /** @hidden */\n            this.$id = id++;\n            this.type = type;\n            this.message = message;\n            this.detail = detail;\n        }\n        /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n        Rejection.isRejectionPromise = function (obj) {\n            return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n        };\n        /** Returns a Rejection due to transition superseded */\n        Rejection.superseded = function (detail, options) {\n            var message = 'The transition has been superseded by a different transition';\n            var rejection = new Rejection(exports.RejectType.SUPERSEDED, message, detail);\n            if (options && options.redirected) {\n                rejection.redirected = true;\n            }\n            return rejection;\n        };\n        /** Returns a Rejection due to redirected transition */\n        Rejection.redirected = function (detail) {\n            return Rejection.superseded(detail, { redirected: true });\n        };\n        /** Returns a Rejection due to invalid transition */\n        Rejection.invalid = function (detail) {\n            var message = 'This transition is invalid';\n            return new Rejection(exports.RejectType.INVALID, message, detail);\n        };\n        /** Returns a Rejection due to ignored transition */\n        Rejection.ignored = function (detail) {\n            var message = 'The transition was ignored';\n            return new Rejection(exports.RejectType.IGNORED, message, detail);\n        };\n        /** Returns a Rejection due to aborted transition */\n        Rejection.aborted = function (detail) {\n            var message = 'The transition has been aborted';\n            return new Rejection(exports.RejectType.ABORTED, message, detail);\n        };\n        /** Returns a Rejection due to aborted transition */\n        Rejection.errored = function (detail) {\n            var message = 'The transition errored';\n            return new Rejection(exports.RejectType.ERROR, message, detail);\n        };\n        /**\n         * Returns a Rejection\n         *\n         * Normalizes a value as a Rejection.\n         * If the value is already a Rejection, returns it.\n         * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n         *\n         * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n         */\n        Rejection.normalize = function (detail) {\n            return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n        };\n        Rejection.prototype.toString = function () {\n            var detailString = function (d) { return (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d)); };\n            var detail = detailString(this.detail);\n            var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n            return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n        };\n        Rejection.prototype.toPromise = function () {\n            return extend(silentRejection(this), { _transitionRejection: this });\n        };\n        return Rejection;\n    }());\n\n    /**\n     * Functions that manipulate strings\n     *\n     * Although these functions are exported, they are subject to change without notice.\n     *\n     * @module common_strings\n     */ /** */\n    /**\n     * Returns a string shortened to a maximum length\n     *\n     * If the string is already less than the `max` length, return the string.\n     * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n     *\n     * @param max the maximum length of the string to return\n     * @param str the input string\n     */\n    function maxLength(max, str) {\n        if (str.length <= max)\n            return str;\n        return str.substr(0, max - 3) + '...';\n    }\n    /**\n     * Returns a string, with spaces added to the end, up to a desired str length\n     *\n     * If the string is already longer than the desired length, return the string.\n     * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n     *\n     * @param length the desired length of the string to return\n     * @param str the input string\n     */\n    function padString(length, str) {\n        while (str.length < length)\n            str += ' ';\n        return str;\n    }\n    function kebobString(camelCase) {\n        return camelCase\n            .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n            .replace(/([A-Z])/g, function ($1) { return '-' + $1.toLowerCase(); }); // replace rest\n    }\n    function functionToString(fn) {\n        var fnStr = fnToString(fn);\n        var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n        var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n        var fnName = fn['name'] || '';\n        if (fnName && toStr.match(/function \\(/)) {\n            return 'function ' + fnName + toStr.substr(9);\n        }\n        return toStr;\n    }\n    function fnToString(fn) {\n        var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n        return (_fn && _fn.toString()) || 'undefined';\n    }\n    var isRejection = Rejection.isRejectionPromise;\n    var hasToString = function (obj) {\n        return isObject(obj) && !isArray(obj) && obj.constructor !== Object && isFunction(obj.toString);\n    };\n    var stringifyPattern = pattern([\n        [isUndefined, val('undefined')],\n        [isNull, val('null')],\n        [isPromise, val('[Promise]')],\n        [isRejection, function (x) { return x._transitionRejection.toString(); }],\n        [hasToString, function (x) { return x.toString(); }],\n        [isInjectable, functionToString],\n        [val(true), identity],\n    ]);\n    function stringify(o) {\n        var seen = [];\n        function format(value) {\n            if (isObject(value)) {\n                if (seen.indexOf(value) !== -1)\n                    return '[circular ref]';\n                seen.push(value);\n            }\n            return stringifyPattern(value);\n        }\n        if (isUndefined(o)) {\n            // Workaround for IE & Edge Spec incompatibility where replacer function would not be called when JSON.stringify\n            // is given `undefined` as value. To work around that, we simply detect `undefined` and bail out early by\n            // manually stringifying it.\n            return format(o);\n        }\n        return JSON.stringify(o, function (key, value) { return format(value); }).replace(/\\\\\"/g, '\"');\n    }\n    /** Returns a function that splits a string on a character or substring */\n    var beforeAfterSubstr = function (char) { return function (str) {\n        if (!str)\n            return ['', ''];\n        var idx = str.indexOf(char);\n        if (idx === -1)\n            return [str, ''];\n        return [str.substr(0, idx), str.substr(idx + 1)];\n    }; };\n    var hostRegex = new RegExp('^(?:[a-z]+:)?//[^/]+/');\n    var stripLastPathElement = function (str) { return str.replace(/\\/[^/]*$/, ''); };\n    var splitHash = beforeAfterSubstr('#');\n    var splitQuery = beforeAfterSubstr('?');\n    var splitEqual = beforeAfterSubstr('=');\n    var trimHashVal = function (str) { return (str ? str.replace(/^#/, '') : ''); };\n    /**\n     * Splits on a delimiter, but returns the delimiters in the array\n     *\n     * #### Example:\n     * ```js\n     * var splitOnSlashes = splitOnDelim('/');\n     * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n     * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n     * ```\n     */\n    function splitOnDelim(delim) {\n        var re = new RegExp('(' + delim + ')', 'g');\n        return function (str) { return str.split(re).filter(identity); };\n    }\n    /**\n     * Reduce fn that joins neighboring strings\n     *\n     * Given an array of strings, returns a new array\n     * where all neighboring strings have been joined.\n     *\n     * #### Example:\n     * ```js\n     * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n     * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n     * ```\n     */\n    function joinNeighborsR(acc, x) {\n        if (isString(tail(acc)) && isString(x))\n            return acc.slice(0, -1).concat(tail(acc) + x);\n        return pushR(acc, x);\n    }\n\n    /**\n     * # Transition tracing (debug)\n     *\n     * Enable transition tracing to print transition information to the console,\n     * in order to help debug your application.\n     * Tracing logs detailed information about each Transition to your console.\n     *\n     * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n     *\n     * ### ES6\n     * ```js\n     * import {trace} from \"@uirouter/core\";\n     * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n     * ```\n     *\n     * ### CJS\n     * ```js\n     * let trace = require(\"@uirouter/core\").trace;\n     * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n     * ```\n     *\n     * ### Globals\n     * ```js\n     * let trace = window[\"@uirouter/core\"].trace;\n     * trace.enable(); // Trace everything (very verbose)\n     * ```\n     *\n     * ### Angular 1:\n     * ```js\n     * app.run($trace => $trace.enable());\n     * ```\n     *\n     * @publicapi @module trace\n     */\n    /** @hidden */\n    function uiViewString(uiview) {\n        if (!uiview)\n            return 'ui-view (defunct)';\n        var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n        return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n    }\n    /** @hidden */\n    var viewConfigString = function (viewConfig) {\n        var view = viewConfig.viewDecl;\n        var state = view.$context.name || '(root)';\n        return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n    };\n    /** @hidden */\n    function normalizedCat(input) {\n        return isNumber(input) ? exports.Category[input] : exports.Category[exports.Category[input]];\n    }\n    /** @hidden */\n    var consoleLog = Function.prototype.bind.call(console.log, console);\n    /** @hidden */\n    var consoletable = isFunction(console.table) ? console.table.bind(console) : consoleLog.bind(console);\n    /**\n     * Trace categories Enum\n     *\n     * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n     *\n     * `trace.enable(Category.TRANSITION)`\n     *\n     * These can also be provided using a matching string, or position ordinal\n     *\n     * `trace.enable(\"TRANSITION\")`\n     *\n     * `trace.enable(1)`\n     */\n\n    (function (Category) {\n        Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n        Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n        Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n        Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n        Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n    })(exports.Category || (exports.Category = {}));\n    /** @hidden */\n    var _tid = parse('$id');\n    /** @hidden */\n    var _rid = parse('router.$id');\n    /** @hidden */\n    var transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n    /**\n     * Prints UI-Router Transition trace information to the console.\n     */\n    var Trace = /** @class */ (function () {\n        /** @hidden */\n        function Trace() {\n            /** @hidden */\n            this._enabled = {};\n            this.approximateDigests = 0;\n        }\n        /** @hidden */\n        Trace.prototype._set = function (enabled, categories) {\n            var _this = this;\n            if (!categories.length) {\n                categories = Object.keys(exports.Category)\n                    .map(function (k) { return parseInt(k, 10); })\n                    .filter(function (k) { return !isNaN(k); })\n                    .map(function (key) { return exports.Category[key]; });\n            }\n            categories.map(normalizedCat).forEach(function (category) { return (_this._enabled[category] = enabled); });\n        };\n        Trace.prototype.enable = function () {\n            var categories = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                categories[_i] = arguments[_i];\n            }\n            this._set(true, categories);\n        };\n        Trace.prototype.disable = function () {\n            var categories = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                categories[_i] = arguments[_i];\n            }\n            this._set(false, categories);\n        };\n        /**\n         * Retrieves the enabled stateus of a [[Category]]\n         *\n         * ```js\n         * trace.enabled(\"VIEWCONFIG\"); // true or false\n         * ```\n         *\n         * @returns boolean true if the category is enabled\n         */\n        Trace.prototype.enabled = function (category) {\n            return !!this._enabled[normalizedCat(category)];\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceTransitionStart = function (trans) {\n            if (!this.enabled(exports.Category.TRANSITION))\n                return;\n            console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceTransitionIgnored = function (trans) {\n            if (!this.enabled(exports.Category.TRANSITION))\n                return;\n            console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceHookInvocation = function (step, trans, options) {\n            if (!this.enabled(exports.Category.HOOK))\n                return;\n            var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = functionToString(step.registeredHook.callback);\n            console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n            if (!this.enabled(exports.Category.HOOK))\n                return;\n            console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceResolvePath = function (path, when, trans) {\n            if (!this.enabled(exports.Category.RESOLVE))\n                return;\n            console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n            if (!this.enabled(exports.Category.RESOLVE))\n                return;\n            console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceError = function (reason, trans) {\n            if (!this.enabled(exports.Category.TRANSITION))\n                return;\n            console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceSuccess = function (finalState, trans) {\n            if (!this.enabled(exports.Category.TRANSITION))\n                return;\n            console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n            if (extra === void 0) { extra = ''; }\n            if (!this.enabled(exports.Category.UIVIEW))\n                return;\n            console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n            if (!this.enabled(exports.Category.UIVIEW))\n                return;\n            this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceUIViewFill = function (viewData, html) {\n            if (!this.enabled(exports.Category.UIVIEW))\n                return;\n            this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceViewSync = function (pairs) {\n            if (!this.enabled(exports.Category.VIEWCONFIG))\n                return;\n            var uivheader = 'uiview component fqn';\n            var cfgheader = 'view config state (view name)';\n            var mapping = pairs\n                .map(function (_a) {\n                var uiView = _a.uiView, viewConfig = _a.viewConfig;\n                var _b;\n                var uiv = uiView && uiView.fqn;\n                var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n                return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n            })\n                .sort(function (a, b) { return (a[uivheader] || '').localeCompare(b[uivheader] || ''); });\n            consoletable(mapping);\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n            if (!this.enabled(exports.Category.VIEWCONFIG))\n                return;\n            console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n        };\n        /** @internalapi called by ui-router code */\n        Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n            if (!this.enabled(exports.Category.VIEWCONFIG))\n                return;\n            console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n        };\n        return Trace;\n    }());\n    /**\n     * The [[Trace]] singleton\n     *\n     * #### Example:\n     * ```js\n     * import {trace} from \"@uirouter/core\";\n     * trace.enable(1, 5);\n     * ```\n     */\n    var trace = new Trace();\n\n    /** @publicapi @module common */ /** */\n\n    /** @publicapi @module params */ /** */\n    /**\n     * An internal class which implements [[ParamTypeDefinition]].\n     *\n     * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n     * When a param type definition is registered, an instance of this class is created internally.\n     *\n     * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n     *\n     * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n     *\n     * #### Example:\n     * ```js\n     * var paramTypeDef = {\n     *   decode: function(val) { return parseInt(val, 10); },\n     *   encode: function(val) { return val && val.toString(); },\n     *   equals: function(a, b) { return this.is(a) && a === b; },\n     *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n     *   pattern: /\\d+/\n     * }\n     *\n     * var paramType = new ParamType(paramTypeDef);\n     * ```\n     * @internalapi\n     */\n    var ParamType = /** @class */ (function () {\n        /**\n         * @param def  A configuration object which contains the custom type definition.  The object's\n         *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n         * @returns a new ParamType object\n         */\n        function ParamType(def) {\n            /** @inheritdoc */\n            this.pattern = /.*/;\n            /** @inheritdoc */\n            this.inherit = true;\n            extend(this, def);\n        }\n        // consider these four methods to be \"abstract methods\" that should be overridden\n        /** @inheritdoc */\n        ParamType.prototype.is = function (val, key) {\n            return true;\n        };\n        /** @inheritdoc */\n        ParamType.prototype.encode = function (val, key) {\n            return val;\n        };\n        /** @inheritdoc */\n        ParamType.prototype.decode = function (val, key) {\n            return val;\n        };\n        /** @inheritdoc */\n        ParamType.prototype.equals = function (a, b) {\n            // tslint:disable-next-line:triple-equals\n            return a == b;\n        };\n        ParamType.prototype.$subPattern = function () {\n            var sub = this.pattern.toString();\n            return sub.substr(1, sub.length - 2);\n        };\n        ParamType.prototype.toString = function () {\n            return \"{ParamType:\" + this.name + \"}\";\n        };\n        /** Given an encoded string, or a decoded object, returns a decoded object */\n        ParamType.prototype.$normalize = function (val) {\n            return this.is(val) ? val : this.decode(val);\n        };\n        /**\n         * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n         * e.g.:\n         * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n         * - url: \"/path?queryParam=1&queryParam=2\n         * - $stateParams.queryParam will be [1, 2]\n         * if `mode` is \"auto\", then\n         * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n         * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n         */\n        ParamType.prototype.$asArray = function (mode, isSearch) {\n            if (!mode)\n                return this;\n            if (mode === 'auto' && !isSearch)\n                throw new Error(\"'auto' array mode is for query parameters only\");\n            return new ArrayType(this, mode);\n        };\n        return ParamType;\n    }());\n    /**\n     * Wraps up a `ParamType` object to handle array values.\n     * @internalapi\n     */\n    function ArrayType(type, mode) {\n        var _this = this;\n        // Wrap non-array value as array\n        function arrayWrap(val) {\n            return isArray(val) ? val : isDefined(val) ? [val] : [];\n        }\n        // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n        function arrayUnwrap(val) {\n            switch (val.length) {\n                case 0:\n                    return undefined;\n                case 1:\n                    return mode === 'auto' ? val[0] : val;\n                default:\n                    return val;\n            }\n        }\n        // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n        function arrayHandler(callback, allTruthyMode) {\n            return function handleArray(val) {\n                if (isArray(val) && val.length === 0)\n                    return val;\n                var arr = arrayWrap(val);\n                var result = map(arr, callback);\n                return allTruthyMode === true ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n            };\n        }\n        // Wraps type (.equals) functions to operate on each value of an array\n        function arrayEqualsHandler(callback) {\n            return function handleArray(val1, val2) {\n                var left = arrayWrap(val1), right = arrayWrap(val2);\n                if (left.length !== right.length)\n                    return false;\n                for (var i = 0; i < left.length; i++) {\n                    if (!callback(left[i], right[i]))\n                        return false;\n                }\n                return true;\n            };\n        }\n        ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n            var paramTypeFn = type[name].bind(type);\n            var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n            _this[name] = wrapperFn(paramTypeFn);\n        });\n        extend(this, {\n            dynamic: type.dynamic,\n            name: type.name,\n            pattern: type.pattern,\n            inherit: type.inherit,\n            raw: type.raw,\n            is: arrayHandler(type.is.bind(type), true),\n            $arrayMode: mode,\n        });\n    }\n\n    /** @publicapi @module params */ /** */\n    /** @hidden */\n    var hasOwn = Object.prototype.hasOwnProperty;\n    /** @hidden */\n    var isShorthand = function (cfg) {\n        return ['value', 'type', 'squash', 'array', 'dynamic'].filter(hasOwn.bind(cfg || {})).length === 0;\n    };\n    /** @internalapi */\n\n    (function (DefType) {\n        DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n        DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n        DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n    })(exports.DefType || (exports.DefType = {}));\n    /** @internalapi */\n    function getParamDeclaration(paramName, location, state) {\n        var noReloadOnSearch = (state.reloadOnSearch === false && location === exports.DefType.SEARCH) || undefined;\n        var dynamic = find([state.dynamic, noReloadOnSearch], isDefined);\n        var defaultConfig = isDefined(dynamic) ? { dynamic: dynamic } : {};\n        var paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);\n        return extend(defaultConfig, paramConfig);\n    }\n    /** @hidden */\n    function unwrapShorthand(cfg) {\n        cfg = isShorthand(cfg) ? { value: cfg } : cfg;\n        getStaticDefaultValue['__cacheable'] = true;\n        function getStaticDefaultValue() {\n            return cfg.value;\n        }\n        var $$fn = isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue;\n        return extend(cfg, { $$fn: $$fn });\n    }\n    /** @hidden */\n    function getType(cfg, urlType, location, id, paramTypes) {\n        if (cfg.type && urlType && urlType.name !== 'string')\n            throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n        if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n            return paramTypes.type(cfg.type);\n        if (urlType)\n            return urlType;\n        if (!cfg.type) {\n            var type = location === exports.DefType.CONFIG\n                ? 'any'\n                : location === exports.DefType.PATH\n                    ? 'path'\n                    : location === exports.DefType.SEARCH\n                        ? 'query'\n                        : 'string';\n            return paramTypes.type(type);\n        }\n        return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n    }\n    /**\n     * @internalapi\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional, defaultPolicy) {\n        var squash = config.squash;\n        if (!isOptional || squash === false)\n            return false;\n        if (!isDefined(squash) || squash == null)\n            return defaultPolicy;\n        if (squash === true || isString(squash))\n            return squash;\n        throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n    /** @internalapi */\n    function getReplace(config, arrayMode, isOptional, squash) {\n        var defaultPolicy = [\n            { from: '', to: isOptional || arrayMode ? undefined : '' },\n            { from: null, to: isOptional || arrayMode ? undefined : '' },\n        ];\n        var replace = isArray(config.replace) ? config.replace : [];\n        if (isString(squash))\n            replace.push({ from: squash, to: undefined });\n        var configuredKeys = map(replace, prop('from'));\n        return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n    }\n    /** @internalapi */\n    var Param = /** @class */ (function () {\n        function Param(id, type, location, urlConfig, state) {\n            var config = getParamDeclaration(id, location, state);\n            type = getType(config, type, location, id, urlConfig.paramTypes);\n            var arrayMode = getArrayMode();\n            type = arrayMode ? type.$asArray(arrayMode, location === exports.DefType.SEARCH) : type;\n            var isOptional = config.value !== undefined || location === exports.DefType.SEARCH;\n            var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n            var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n            var squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy());\n            var replace = getReplace(config, arrayMode, isOptional, squash);\n            var inherit$$1 = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n            // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n            function getArrayMode() {\n                var arrayDefaults = { array: location === exports.DefType.SEARCH ? 'auto' : false };\n                var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n                return extend(arrayDefaults, arrayParamNomenclature, config).array;\n            }\n            extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit$$1, array: arrayMode, config: config });\n        }\n        Param.values = function (params, values$$1) {\n            if (values$$1 === void 0) { values$$1 = {}; }\n            var paramValues = {};\n            for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n                var param = params_1[_i];\n                paramValues[param.id] = param.value(values$$1[param.id]);\n            }\n            return paramValues;\n        };\n        /**\n         * Finds [[Param]] objects which have different param values\n         *\n         * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n         *\n         * @param params: The list of Param objects to filter\n         * @param values1: The first set of parameter values\n         * @param values2: the second set of parameter values\n         *\n         * @returns any Param objects whose values were different between values1 and values2\n         */\n        Param.changed = function (params, values1, values2) {\n            if (values1 === void 0) { values1 = {}; }\n            if (values2 === void 0) { values2 = {}; }\n            return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n        };\n        /**\n         * Checks if two param value objects are equal (for a set of [[Param]] objects)\n         *\n         * @param params The list of [[Param]] objects to check\n         * @param values1 The first set of param values\n         * @param values2 The second set of param values\n         *\n         * @returns true if the param values in values1 and values2 are equal\n         */\n        Param.equals = function (params, values1, values2) {\n            if (values1 === void 0) { values1 = {}; }\n            if (values2 === void 0) { values2 = {}; }\n            return Param.changed(params, values1, values2).length === 0;\n        };\n        /** Returns true if a the parameter values are valid, according to the Param definitions */\n        Param.validates = function (params, values$$1) {\n            if (values$$1 === void 0) { values$$1 = {}; }\n            return params.map(function (param) { return param.validates(values$$1[param.id]); }).reduce(allTrueR, true);\n        };\n        Param.prototype.isDefaultValue = function (value) {\n            return this.isOptional && this.type.equals(this.value(), value);\n        };\n        /**\n         * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n         * default value, which may be the result of an injectable function.\n         */\n        Param.prototype.value = function (value) {\n            var _this = this;\n            /**\n             * [Internal] Get the default value of a parameter, which may be an injectable function.\n             */\n            var getDefaultValue = function () {\n                if (_this._defaultValueCache)\n                    return _this._defaultValueCache.defaultValue;\n                if (!services.$injector)\n                    throw new Error('Injectable functions cannot be called at configuration time');\n                var defaultValue = services.$injector.invoke(_this.config.$$fn);\n                if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                    throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n                if (_this.config.$$fn['__cacheable']) {\n                    _this._defaultValueCache = { defaultValue: defaultValue };\n                }\n                return defaultValue;\n            };\n            var replaceSpecialValues = function (val$$1) {\n                for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                    var tuple = _a[_i];\n                    if (tuple.from === val$$1)\n                        return tuple.to;\n                }\n                return val$$1;\n            };\n            value = replaceSpecialValues(value);\n            return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n        };\n        Param.prototype.isSearch = function () {\n            return this.location === exports.DefType.SEARCH;\n        };\n        Param.prototype.validates = function (value) {\n            // There was no parameter value, but the param is optional\n            if ((isUndefined(value) || value === null) && this.isOptional)\n                return true;\n            // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n            var normalized = this.type.$normalize(value);\n            if (!this.type.is(normalized))\n                return false;\n            // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n            var encoded = this.type.encode(normalized);\n            return !(isString(encoded) && !this.type.pattern.exec(encoded));\n        };\n        Param.prototype.toString = function () {\n            return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n        };\n        return Param;\n    }());\n\n    /** @publicapi @module params */ /** */\n    /**\n     * A registry for parameter types.\n     *\n     * This registry manages the built-in (and custom) parameter types.\n     *\n     * The built-in parameter types are:\n     *\n     * - [[string]]\n     * - [[path]]\n     * - [[query]]\n     * - [[hash]]\n     * - [[int]]\n     * - [[bool]]\n     * - [[date]]\n     * - [[json]]\n     * - [[any]]\n     *\n     * To register custom parameter types, use [[UrlConfig.type]], i.e.,\n     *\n     * ```js\n     * router.urlService.config.type(customType)\n     * ```\n     */\n    var ParamTypes = /** @class */ (function () {\n        /** @internalapi */\n        function ParamTypes() {\n            /** @hidden */\n            this.enqueue = true;\n            /** @hidden */\n            this.typeQueue = [];\n            /** @internalapi */\n            this.defaultTypes = pick(ParamTypes.prototype, [\n                'hash',\n                'string',\n                'query',\n                'path',\n                'int',\n                'bool',\n                'date',\n                'json',\n                'any',\n            ]);\n            // Register default types. Store them in the prototype of this.types.\n            var makeType = function (definition, name) { return new ParamType(extend({ name: name }, definition)); };\n            this.types = inherit(map(this.defaultTypes, makeType), {});\n        }\n        /** @internalapi */\n        ParamTypes.prototype.dispose = function () {\n            this.types = {};\n        };\n        /**\n         * Registers a parameter type\n         *\n         * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n         */\n        ParamTypes.prototype.type = function (name, definition, definitionFn) {\n            if (!isDefined(definition))\n                return this.types[name];\n            if (this.types.hasOwnProperty(name))\n                throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n            this.types[name] = new ParamType(extend({ name: name }, definition));\n            if (definitionFn) {\n                this.typeQueue.push({ name: name, def: definitionFn });\n                if (!this.enqueue)\n                    this._flushTypeQueue();\n            }\n            return this;\n        };\n        /** @internalapi */\n        ParamTypes.prototype._flushTypeQueue = function () {\n            while (this.typeQueue.length) {\n                var type = this.typeQueue.shift();\n                if (type.pattern)\n                    throw new Error(\"You cannot override a type's .pattern at runtime.\");\n                extend(this.types[type.name], services.$injector.invoke(type.def));\n            }\n        };\n        return ParamTypes;\n    }());\n    /** @hidden */\n    function initDefaultTypes() {\n        var makeDefaultType = function (def) {\n            var valToString = function (val$$1) { return (val$$1 != null ? val$$1.toString() : val$$1); };\n            var defaultTypeBase = {\n                encode: valToString,\n                decode: valToString,\n                is: is(String),\n                pattern: /.*/,\n                // tslint:disable-next-line:triple-equals\n                equals: function (a, b) { return a == b; },\n            };\n            return extend({}, defaultTypeBase, def);\n        };\n        // Default Parameter Type Definitions\n        extend(ParamTypes.prototype, {\n            string: makeDefaultType({}),\n            path: makeDefaultType({\n                pattern: /[^/]*/,\n            }),\n            query: makeDefaultType({}),\n            hash: makeDefaultType({\n                inherit: false,\n            }),\n            int: makeDefaultType({\n                decode: function (val$$1) { return parseInt(val$$1, 10); },\n                is: function (val$$1) {\n                    return !isNullOrUndefined(val$$1) && this.decode(val$$1.toString()) === val$$1;\n                },\n                pattern: /-?\\d+/,\n            }),\n            bool: makeDefaultType({\n                encode: function (val$$1) { return (val$$1 && 1) || 0; },\n                decode: function (val$$1) { return parseInt(val$$1, 10) !== 0; },\n                is: is(Boolean),\n                pattern: /0|1/,\n            }),\n            date: makeDefaultType({\n                encode: function (val$$1) {\n                    return !this.is(val$$1)\n                        ? undefined\n                        : [val$$1.getFullYear(), ('0' + (val$$1.getMonth() + 1)).slice(-2), ('0' + val$$1.getDate()).slice(-2)].join('-');\n                },\n                decode: function (val$$1) {\n                    if (this.is(val$$1))\n                        return val$$1;\n                    var match = this.capture.exec(val$$1);\n                    return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n                },\n                is: function (val$$1) { return val$$1 instanceof Date && !isNaN(val$$1.valueOf()); },\n                equals: function (l, r) {\n                    return ['getFullYear', 'getMonth', 'getDate'].reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n                },\n                pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n                capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/,\n            }),\n            json: makeDefaultType({\n                encode: toJson,\n                decode: fromJson,\n                is: is(Object),\n                equals: equals,\n                pattern: /[^/]*/,\n            }),\n            // does not encode/decode\n            any: makeDefaultType({\n                encode: identity,\n                decode: identity,\n                is: function () { return true; },\n                equals: equals,\n            }),\n        });\n    }\n    initDefaultTypes();\n\n    /** @publicapi @module params */ /** */\n    /** @internalapi */\n    var StateParams = /** @class */ (function () {\n        function StateParams(params) {\n            if (params === void 0) { params = {}; }\n            extend(this, params);\n        }\n        /**\n         * Merges a set of parameters with all parameters inherited between the common parents of the\n         * current state and a given destination state.\n         *\n         * @param {Object} newParams The set of parameters which will be composited with inherited params.\n         * @param {Object} $current Internal definition of object representing the current state.\n         * @param {Object} $to Internal definition of object representing state to transition to.\n         */\n        StateParams.prototype.$inherit = function (newParams, $current, $to) {\n            var parentParams;\n            var parents = ancestors($current, $to), inherited = {}, inheritList = [];\n            for (var i in parents) {\n                if (!parents[i] || !parents[i].params)\n                    continue;\n                parentParams = Object.keys(parents[i].params);\n                if (!parentParams.length)\n                    continue;\n                for (var j in parentParams) {\n                    if (inheritList.indexOf(parentParams[j]) >= 0)\n                        continue;\n                    inheritList.push(parentParams[j]);\n                    inherited[parentParams[j]] = this[parentParams[j]];\n                }\n            }\n            return extend({}, inherited, newParams);\n        };\n        return StateParams;\n    }());\n\n    /** @internalapi @module path */ /** */\n    /**\n     * A node in a [[TreeChanges]] path\n     *\n     * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n     * Each PathNode corresponds to a state being entered, exited, or retained.\n     * The stateful information includes parameter values and resolve data.\n     */\n    var PathNode = /** @class */ (function () {\n        function PathNode(stateOrNode) {\n            if (stateOrNode instanceof PathNode) {\n                var node = stateOrNode;\n                this.state = node.state;\n                this.paramSchema = node.paramSchema.slice();\n                this.paramValues = extend({}, node.paramValues);\n                this.resolvables = node.resolvables.slice();\n                this.views = node.views && node.views.slice();\n            }\n            else {\n                var state = stateOrNode;\n                this.state = state;\n                this.paramSchema = state.parameters({ inherit: false });\n                this.paramValues = {};\n                this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n            }\n        }\n        PathNode.prototype.clone = function () {\n            return new PathNode(this);\n        };\n        /** Sets [[paramValues]] for the node, from the values of an object hash */\n        PathNode.prototype.applyRawParams = function (params) {\n            var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n            this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n            return this;\n        };\n        /** Gets a specific [[Param]] metadata that belongs to the node */\n        PathNode.prototype.parameter = function (name) {\n            return find(this.paramSchema, propEq('id', name));\n        };\n        /**\n         * @returns true if the state and parameter values for another PathNode are\n         * equal to the state and param values for this PathNode\n         */\n        PathNode.prototype.equals = function (node, paramsFn) {\n            var diff = this.diff(node, paramsFn);\n            return diff && diff.length === 0;\n        };\n        /**\n         * Finds Params with different parameter values on another PathNode.\n         *\n         * Given another node (of the same state), finds the parameter values which differ.\n         * Returns the [[Param]] (schema objects) whose parameter values differ.\n         *\n         * Given another node for a different state, returns `false`\n         *\n         * @param node The node to compare to\n         * @param paramsFn A function that returns which parameters should be compared.\n         * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n         */\n        PathNode.prototype.diff = function (node, paramsFn) {\n            if (this.state !== node.state)\n                return false;\n            var params = paramsFn ? paramsFn(this) : this.paramSchema;\n            return Param.changed(params, this.paramValues, node.paramValues);\n        };\n        /**\n         * Returns a clone of the PathNode\n         * @deprecated use instance method `node.clone()`\n         */\n        PathNode.clone = function (node) { return node.clone(); };\n        return PathNode;\n    }());\n\n    /** @publicapi @module state */ /** */\n    /**\n     * Encapsulate the target (destination) state/params/options of a [[Transition]].\n     *\n     * This class is frequently used to redirect a transition to a new destination.\n     *\n     * See:\n     *\n     * - [[HookResult]]\n     * - [[TransitionHookFn]]\n     * - [[TransitionService.onStart]]\n     *\n     * To create a `TargetState`, use [[StateService.target]].\n     *\n     * ---\n     *\n     * This class wraps:\n     *\n     * 1) an identifier for a state\n     * 2) a set of parameters\n     * 3) and transition options\n     * 4) the registered state object (the [[StateDeclaration]])\n     *\n     * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n     * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n     * The `TargetState` class normalizes those options.\n     *\n     * A `TargetState` may be valid (the state being targeted exists in the registry)\n     * or invalid (the state being targeted is not registered).\n     */\n    var TargetState = /** @class */ (function () {\n        /**\n         * The TargetState constructor\n         *\n         * Note: Do not construct a `TargetState` manually.\n         * To create a `TargetState`, use the [[StateService.target]] factory method.\n         *\n         * @param _stateRegistry The StateRegistry to use to look up the _definition\n         * @param _identifier An identifier for a state.\n         *    Either a fully-qualified state name, or the object used to define the state.\n         * @param _params Parameters for the target state\n         * @param _options Transition options.\n         *\n         * @internalapi\n         */\n        function TargetState(_stateRegistry, _identifier, _params, _options) {\n            this._stateRegistry = _stateRegistry;\n            this._identifier = _identifier;\n            this._identifier = _identifier;\n            this._params = extend({}, _params || {});\n            this._options = extend({}, _options || {});\n            this._definition = _stateRegistry.matcher.find(_identifier, this._options.relative);\n        }\n        /** The name of the state this object targets */\n        TargetState.prototype.name = function () {\n            return (this._definition && this._definition.name) || this._identifier;\n        };\n        /** The identifier used when creating this TargetState */\n        TargetState.prototype.identifier = function () {\n            return this._identifier;\n        };\n        /** The target parameter values */\n        TargetState.prototype.params = function () {\n            return this._params;\n        };\n        /** The internal state object (if it was found) */\n        TargetState.prototype.$state = function () {\n            return this._definition;\n        };\n        /** The internal state declaration (if it was found) */\n        TargetState.prototype.state = function () {\n            return this._definition && this._definition.self;\n        };\n        /** The target options */\n        TargetState.prototype.options = function () {\n            return this._options;\n        };\n        /** True if the target state was found */\n        TargetState.prototype.exists = function () {\n            return !!(this._definition && this._definition.self);\n        };\n        /** True if the object is valid */\n        TargetState.prototype.valid = function () {\n            return !this.error();\n        };\n        /** If the object is invalid, returns the reason why */\n        TargetState.prototype.error = function () {\n            var base = this.options().relative;\n            if (!this._definition && !!base) {\n                var stateName = base.name ? base.name : base;\n                return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n            }\n            if (!this._definition)\n                return \"No such state '\" + this.name() + \"'\";\n            if (!this._definition.self)\n                return \"State '\" + this.name() + \"' has an invalid definition\";\n        };\n        TargetState.prototype.toString = function () {\n            return \"'\" + this.name() + \"'\" + stringify(this.params());\n        };\n        /**\n         * Returns a copy of this TargetState which targets a different state.\n         * The new TargetState has the same parameter values and transition options.\n         *\n         * @param state The new state that should be targeted\n         */\n        TargetState.prototype.withState = function (state) {\n            return new TargetState(this._stateRegistry, state, this._params, this._options);\n        };\n        /**\n         * Returns a copy of this TargetState, using the specified parameter values.\n         *\n         * @param params the new parameter values to use\n         * @param replace When false (default) the new parameter values will be merged with the current values.\n         *                When true the parameter values will be used instead of the current values.\n         */\n        TargetState.prototype.withParams = function (params, replace) {\n            if (replace === void 0) { replace = false; }\n            var newParams = replace ? params : extend({}, this._params, params);\n            return new TargetState(this._stateRegistry, this._identifier, newParams, this._options);\n        };\n        /**\n         * Returns a copy of this TargetState, using the specified Transition Options.\n         *\n         * @param options the new options to use\n         * @param replace When false (default) the new options will be merged with the current options.\n         *                When true the options will be used instead of the current options.\n         */\n        TargetState.prototype.withOptions = function (options, replace) {\n            if (replace === void 0) { replace = false; }\n            var newOpts = replace ? options : extend({}, this._options, options);\n            return new TargetState(this._stateRegistry, this._identifier, this._params, newOpts);\n        };\n        /** Returns true if the object has a state property that might be a state or state name */\n        TargetState.isDef = function (obj) { return obj && obj.state && (isString(obj.state) || isString(obj.state.name)); };\n        return TargetState;\n    }());\n\n    /** @internalapi @module path */ /** */\n    /**\n     * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n     */\n    var PathUtils = /** @class */ (function () {\n        function PathUtils() {\n        }\n        /** Given a PathNode[], create an TargetState */\n        PathUtils.makeTargetState = function (registry, path) {\n            var state = tail(path).state;\n            return new TargetState(registry, state, path.map(prop('paramValues')).reduce(mergeR, {}), {});\n        };\n        PathUtils.buildPath = function (targetState) {\n            var toParams = targetState.params();\n            return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n        };\n        /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n        PathUtils.buildToPath = function (fromPath, targetState) {\n            var toPath = PathUtils.buildPath(targetState);\n            if (targetState.options().inherit) {\n                return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n            }\n            return toPath;\n        };\n        /**\n         * Creates ViewConfig objects and adds to nodes.\n         *\n         * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n         */\n        PathUtils.applyViewConfigs = function ($view, path, states) {\n            // Only apply the viewConfigs to the nodes for the given states\n            path\n                .filter(function (node) { return inArray(states, node.state); })\n                .forEach(function (node) {\n                var viewDecls = values(node.state.views || {});\n                var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n                var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n                node.views = viewConfigs.reduce(unnestR, []);\n            });\n        };\n        /**\n         * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n         *\n         * For a parameter in a node to be inherited from the from path:\n         * - The toPath's node must have a matching node in the fromPath (by state).\n         * - The parameter name must not be found in the toKeys parameter array.\n         *\n         * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n         * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n         * it is not inherited from the fromPath.\n         */\n        PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n            if (toKeys === void 0) { toKeys = []; }\n            function nodeParamVals(path, state) {\n                var node = find(path, propEq('state', state));\n                return extend({}, node && node.paramValues);\n            }\n            var noInherit = fromPath\n                .map(function (node) { return node.paramSchema; })\n                .reduce(unnestR, [])\n                .filter(function (param) { return !param.inherit; })\n                .map(prop('id'));\n            /**\n             * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n             * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n             */\n            function makeInheritedParamsNode(toNode) {\n                // All param values for the node (may include default key/vals, when key was not found in toParams)\n                var toParamVals = extend({}, toNode && toNode.paramValues);\n                // limited to only those keys found in toParams\n                var incomingParamVals = pick(toParamVals, toKeys);\n                toParamVals = omit(toParamVals, toKeys);\n                var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n                // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n                var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n                return new PathNode(toNode.state).applyRawParams(ownParamVals);\n            }\n            // The param keys specified by the incoming toParams\n            return toPath.map(makeInheritedParamsNode);\n        };\n        /**\n         * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n         */\n        PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n            var max = Math.min(fromPath.length, toPath.length);\n            var keep = 0;\n            var nodesMatch = function (node1, node2) { return node1.equals(node2, PathUtils.nonDynamicParams); };\n            while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n                keep++;\n            }\n            /** Given a retained node, return a new node which uses the to node's param values */\n            function applyToParams(retainedNode, idx) {\n                var cloned = retainedNode.clone();\n                cloned.paramValues = toPath[idx].paramValues;\n                return cloned;\n            }\n            var from, retained, exiting, entering, to;\n            from = fromPath;\n            retained = from.slice(0, keep);\n            exiting = from.slice(keep);\n            // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n            var retainedWithToParams = retained.map(applyToParams);\n            entering = toPath.slice(keep);\n            to = retainedWithToParams.concat(entering);\n            return { from: from, to: to, retained: retained, retainedWithToParams: retainedWithToParams, exiting: exiting, entering: entering };\n        };\n        /**\n         * Returns a new path which is: the subpath of the first path which matches the second path.\n         *\n         * The new path starts from root and contains any nodes that match the nodes in the second path.\n         * It stops before the first non-matching node.\n         *\n         * Nodes are compared using their state property and their parameter values.\n         * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n         *\n         * @param pathA the first path\n         * @param pathB the second path\n         * @param paramsFn a function which returns the parameters to consider when comparing\n         *\n         * @returns an array of PathNodes from the first path which match the nodes in the second path\n         */\n        PathUtils.matching = function (pathA, pathB, paramsFn) {\n            var done = false;\n            var tuples = arrayTuples(pathA, pathB);\n            return tuples.reduce(function (matching, _a) {\n                var nodeA = _a[0], nodeB = _a[1];\n                done = done || !nodeA.equals(nodeB, paramsFn);\n                return done ? matching : matching.concat(nodeA);\n            }, []);\n        };\n        /**\n         * Returns true if two paths are identical.\n         *\n         * @param pathA\n         * @param pathB\n         * @param paramsFn a function which returns the parameters to consider when comparing\n         * @returns true if the the states and parameter values for both paths are identical\n         */\n        PathUtils.equals = function (pathA, pathB, paramsFn) {\n            return pathA.length === pathB.length && PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n        };\n        /**\n         * Return a subpath of a path, which stops at the first matching node\n         *\n         * Given an array of nodes, returns a subset of the array starting from the first node,\n         * stopping when the first node matches the predicate.\n         *\n         * @param path a path of [[PathNode]]s\n         * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n         * @returns a subpath up to the matching node, or undefined if no match is found\n         */\n        PathUtils.subPath = function (path, predicate) {\n            var node = find(path, predicate);\n            var elementIdx = path.indexOf(node);\n            return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n        };\n        PathUtils.nonDynamicParams = function (node) {\n            return node.state.parameters({ inherit: false }).filter(function (param) { return !param.dynamic; });\n        };\n        /** Gets the raw parameter values from a path */\n        PathUtils.paramValues = function (path) { return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {}); };\n        return PathUtils;\n    }());\n\n    /** @internalapi @module path */ /** */\n\n    /** @internalapi */\n    var resolvePolicies = {\n        when: {\n            LAZY: 'LAZY',\n            EAGER: 'EAGER',\n        },\n        async: {\n            WAIT: 'WAIT',\n            NOWAIT: 'NOWAIT',\n            RXWAIT: 'RXWAIT',\n        },\n    };\n\n    /** @publicapi @module resolve */ /** */\n    // TODO: explicitly make this user configurable\n    var defaultResolvePolicy = {\n        when: 'LAZY',\n        async: 'WAIT',\n    };\n    /**\n     * The basic building block for the resolve system.\n     *\n     * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n     * and the unwrapped-when-complete (.data) result of the resolveFn.\n     *\n     * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n     * resolveFn) and returns the resulting promise.\n     *\n     * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n     * parameter to those fns.\n     */\n    var Resolvable = /** @class */ (function () {\n        function Resolvable(arg1, resolveFn, deps, policy, data) {\n            this.resolved = false;\n            this.promise = undefined;\n            if (arg1 instanceof Resolvable) {\n                extend(this, arg1);\n            }\n            else if (isFunction(resolveFn)) {\n                if (isNullOrUndefined(arg1))\n                    throw new Error('new Resolvable(): token argument is required');\n                if (!isFunction(resolveFn))\n                    throw new Error('new Resolvable(): resolveFn argument must be a function');\n                this.token = arg1;\n                this.policy = policy;\n                this.resolveFn = resolveFn;\n                this.deps = deps || [];\n                this.data = data;\n                this.resolved = data !== undefined;\n                this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n            }\n            else if (isObject(arg1) && arg1.token && (arg1.hasOwnProperty('resolveFn') || arg1.hasOwnProperty('data'))) {\n                var literal = arg1;\n                return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n            }\n        }\n        Resolvable.prototype.getPolicy = function (state) {\n            var thisPolicy = this.policy || {};\n            var statePolicy = (state && state.resolvePolicy) || {};\n            return {\n                when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n                async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n            };\n        };\n        /**\n         * Asynchronously resolve this Resolvable's data\n         *\n         * Given a ResolveContext that this Resolvable is found in:\n         * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n         * and update the Resolvable's state\n         */\n        Resolvable.prototype.resolve = function (resolveContext, trans) {\n            var _this = this;\n            var $q = services.$q;\n            // Gets all dependencies from ResolveContext and wait for them to be resolved\n            var getResolvableDependencies = function () {\n                return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) { return resolvable.get(resolveContext, trans); }));\n            };\n            // Invokes the resolve function passing the resolved dependencies as arguments\n            var invokeResolveFn = function (resolvedDeps) { return _this.resolveFn.apply(null, resolvedDeps); };\n            /**\n             * For RXWAIT policy:\n             *\n             * Given an observable returned from a resolve function:\n             * - enables .cache() mode (this allows multicast subscribers)\n             * - then calls toPromise() (this triggers subscribe() and thus fetches)\n             * - Waits for the promise, then return the cached observable (not the first emitted value).\n             */\n            var waitForRx = function (observable$) {\n                var cached = observable$.cache(1);\n                return cached\n                    .take(1)\n                    .toPromise()\n                    .then(function () { return cached; });\n            };\n            // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n            var node = resolveContext.findNode(this);\n            var state = node && node.state;\n            var maybeWaitForRx = this.getPolicy(state).async === 'RXWAIT' ? waitForRx : identity;\n            // After the final value has been resolved, update the state of the Resolvable\n            var applyResolvedValue = function (resolvedValue) {\n                _this.data = resolvedValue;\n                _this.resolved = true;\n                _this.resolveFn = null;\n                trace.traceResolvableResolved(_this, trans);\n                return _this.data;\n            };\n            // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n            return (this.promise = $q\n                .when()\n                .then(getResolvableDependencies)\n                .then(invokeResolveFn)\n                .then(maybeWaitForRx)\n                .then(applyResolvedValue));\n        };\n        /**\n         * Gets a promise for this Resolvable's data.\n         *\n         * Fetches the data and returns a promise.\n         * Returns the existing promise if it has already been fetched once.\n         */\n        Resolvable.prototype.get = function (resolveContext, trans) {\n            return this.promise || this.resolve(resolveContext, trans);\n        };\n        Resolvable.prototype.toString = function () {\n            return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n        };\n        Resolvable.prototype.clone = function () {\n            return new Resolvable(this);\n        };\n        Resolvable.fromData = function (token, data) { return new Resolvable(token, function () { return data; }, null, null, data); };\n        return Resolvable;\n    }());\n\n    /** @publicapi @module resolve */ /** */\n    var whens = resolvePolicies.when;\n    var ALL_WHENS = [whens.EAGER, whens.LAZY];\n    var EAGER_WHENS = [whens.EAGER];\n    // tslint:disable-next-line:no-inferrable-types\n    var NATIVE_INJECTOR_TOKEN = 'Native Injector';\n    /**\n     * Encapsulates Dependency Injection for a path of nodes\n     *\n     * UI-Router states are organized as a tree.\n     * A nested state has a path of ancestors to the root of the tree.\n     * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n     * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n     *\n     * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n     */\n    var ResolveContext = /** @class */ (function () {\n        function ResolveContext(_path) {\n            this._path = _path;\n        }\n        /** Gets all the tokens found in the resolve context, de-duplicated */\n        ResolveContext.prototype.getTokens = function () {\n            return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n        };\n        /**\n         * Gets the Resolvable that matches the token\n         *\n         * Gets the last Resolvable that matches the token in this context, or undefined.\n         * Throws an error if it doesn't exist in the ResolveContext\n         */\n        ResolveContext.prototype.getResolvable = function (token) {\n            var matching = this._path\n                .map(function (node) { return node.resolvables; })\n                .reduce(unnestR, [])\n                .filter(function (r) { return r.token === token; });\n            return tail(matching);\n        };\n        /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n        ResolveContext.prototype.getPolicy = function (resolvable) {\n            var node = this.findNode(resolvable);\n            return resolvable.getPolicy(node.state);\n        };\n        /**\n         * Returns a ResolveContext that includes a portion of this one\n         *\n         * Given a state, this method creates a new ResolveContext from this one.\n         * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n         *\n         * #### Why\n         *\n         * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n         * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n         * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n         * This method is used to create a narrower context when injecting ancestor nodes.\n         *\n         * @example\n         * `let ABCD = new ResolveContext([A, B, C, D]);`\n         *\n         * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n         * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n         * However, `B` should only be able to access resolvables from `A`, `B`.\n         *\n         * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n         * `let AB = ABCD.subcontext(a)`\n         */\n        ResolveContext.prototype.subContext = function (state) {\n            return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n        };\n        /**\n         * Adds Resolvables to the node that matches the state\n         *\n         * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n         * The resolvable is added to the node matching the `state` parameter.\n         *\n         * These new resolvables are not automatically fetched.\n         * The calling code should either fetch them, fetch something that depends on them,\n         * or rely on [[resolvePath]] being called when some state is being entered.\n         *\n         * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n         *\n         * @param newResolvables the new Resolvables\n         * @param state Used to find the node to put the resolvable on\n         */\n        ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n            var node = find(this._path, propEq('state', state));\n            var keys = newResolvables.map(function (r) { return r.token; });\n            node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n        };\n        /**\n         * Returns a promise for an array of resolved path Element promises\n         *\n         * @param when\n         * @param trans\n         * @returns {Promise<any>|any}\n         */\n        ResolveContext.prototype.resolvePath = function (when, trans) {\n            var _this = this;\n            if (when === void 0) { when = 'LAZY'; }\n            // This option determines which 'when' policy Resolvables we are about to fetch.\n            var whenOption = inArray(ALL_WHENS, when) ? when : 'LAZY';\n            // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n            // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n            var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n            // get the subpath to the state argument, if provided\n            trace.traceResolvePath(this._path, when, trans);\n            var matchesPolicy = function (acceptedVals, whenOrAsync) { return function (resolvable) {\n                return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n            }; };\n            // Trigger all the (matching) Resolvables in the path\n            // Reduce all the \"WAIT\" Resolvables into an array\n            var promises = this._path.reduce(function (acc, node) {\n                var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n                var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n                var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n                // For the matching Resolvables, start their async fetch process.\n                var subContext = _this.subContext(node.state);\n                var getResult = function (r) {\n                    return r\n                        .get(subContext, trans)\n                        // Return a tuple that includes the Resolvable's token\n                        .then(function (value) { return ({ token: r.token, value: value }); });\n                };\n                nowait.forEach(getResult);\n                return acc.concat(wait.map(getResult));\n            }, []);\n            // Wait for all the \"WAIT\" resolvables\n            return services.$q.all(promises);\n        };\n        ResolveContext.prototype.injector = function () {\n            return this._injector || (this._injector = new UIInjectorImpl(this));\n        };\n        ResolveContext.prototype.findNode = function (resolvable) {\n            return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n        };\n        /**\n         * Gets the async dependencies of a Resolvable\n         *\n         * Given a Resolvable, returns its dependencies as a Resolvable[]\n         */\n        ResolveContext.prototype.getDependencies = function (resolvable) {\n            var _this = this;\n            var node = this.findNode(resolvable);\n            // Find which other resolvables are \"visible\" to the `resolvable` argument\n            // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n            var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n            var availableResolvables = subPath\n                .reduce(function (acc, _node) { return acc.concat(_node.resolvables); }, []) // all of subpath's resolvables\n                .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n            var getDependency = function (token) {\n                var matching = availableResolvables.filter(function (r) { return r.token === token; });\n                if (matching.length)\n                    return tail(matching);\n                var fromInjector = _this.injector().getNative(token);\n                if (isUndefined(fromInjector)) {\n                    throw new Error('Could not find Dependency Injection token: ' + stringify(token));\n                }\n                return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n            };\n            return resolvable.deps.map(getDependency);\n        };\n        return ResolveContext;\n    }());\n    /** @internalapi */\n    var UIInjectorImpl = /** @class */ (function () {\n        function UIInjectorImpl(context) {\n            this.context = context;\n            this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n        }\n        UIInjectorImpl.prototype.get = function (token) {\n            var resolvable = this.context.getResolvable(token);\n            if (resolvable) {\n                if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                    return resolvable.get(this.context);\n                }\n                if (!resolvable.resolved) {\n                    throw new Error('Resolvable async .get() not complete:' + stringify(resolvable.token));\n                }\n                return resolvable.data;\n            }\n            return this.getNative(token);\n        };\n        UIInjectorImpl.prototype.getAsync = function (token) {\n            var resolvable = this.context.getResolvable(token);\n            if (resolvable)\n                return resolvable.get(this.context);\n            return services.$q.when(this.native.get(token));\n        };\n        UIInjectorImpl.prototype.getNative = function (token) {\n            return this.native && this.native.get(token);\n        };\n        return UIInjectorImpl;\n    }());\n\n    /** @publicapi @module resolve */ /** */\n\n    /** @publicapi @module state */ /** */\n    var parseUrl = function (url) {\n        if (!isString(url))\n            return false;\n        var root$$1 = url.charAt(0) === '^';\n        return { val: root$$1 ? url.substring(1) : url, root: root$$1 };\n    };\n    function nameBuilder(state) {\n        return state.name;\n    }\n    function selfBuilder(state) {\n        state.self.$$state = function () { return state; };\n        return state.self;\n    }\n    function dataBuilder(state) {\n        if (state.parent && state.parent.data) {\n            state.data = state.self.data = inherit(state.parent.data, state.data);\n        }\n        return state.data;\n    }\n    var getUrlBuilder = function ($urlMatcherFactoryProvider, root$$1) {\n        return function urlBuilder(stateObject) {\n            var stateDec = stateObject.self;\n            // For future states, i.e., states whose name ends with `.**`,\n            // match anything that starts with the url prefix\n            if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n                var newStateDec = {};\n                copy(stateDec, newStateDec);\n                newStateDec.url += '{remainder:any}'; // match any path (.*)\n                stateDec = newStateDec;\n            }\n            var parent = stateObject.parent;\n            var parsed = parseUrl(stateDec.url);\n            var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, { state: stateDec });\n            if (!url)\n                return null;\n            if (!$urlMatcherFactoryProvider.isMatcher(url))\n                throw new Error(\"Invalid url '\" + url + \"' in state '\" + stateObject + \"'\");\n            return parsed && parsed.root ? url : ((parent && parent.navigable) || root$$1()).url.append(url);\n        };\n    };\n    var getNavigableBuilder = function (isRoot) {\n        return function navigableBuilder(state) {\n            return !isRoot(state) && state.url ? state : state.parent ? state.parent.navigable : null;\n        };\n    };\n    var getParamsBuilder = function (paramFactory) {\n        return function paramsBuilder(state) {\n            var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, state.self); };\n            var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n            var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n            return urlParams\n                .concat(nonUrlParams)\n                .map(function (p) { return [p.id, p]; })\n                .reduce(applyPairs, {});\n        };\n    };\n    function pathBuilder(state) {\n        return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n    }\n    function includesBuilder(state) {\n        var includes = state.parent ? extend({}, state.parent.includes) : {};\n        includes[state.name] = true;\n        return includes;\n    }\n    /**\n     * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n     *\n     * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n     * validates the `resolve` property and converts it to a [[Resolvable]] array.\n     *\n     * resolve: input value can be:\n     *\n     * {\n     *   // analyzed but not injected\n     *   myFooResolve: function() { return \"myFooData\"; },\n     *\n     *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n     *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n     *\n     *   // Array split; \"DependencyName\" dep as string\n     *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n     *\n     *   // Array split; DependencyType dep as token (compared using ===)\n     *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n     *\n     *   // val.$inject used as deps\n     *   // where:\n     *   //     corgeResolve.$inject = [\"DependencyName\"];\n     *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n     *   // then \"DependencyName\" dep as string\n     *   myCorgeResolve: corgeResolve,\n     *\n     *  // inject service by name\n     *  // When a string is found, desugar creating a resolve that injects the named service\n     *   myGraultResolve: \"SomeService\"\n     * }\n     *\n     * or:\n     *\n     * [\n     *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n     *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n     *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n     * ]\n     */\n    function resolvablesBuilder(state) {\n        /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n        var objects2Tuples = function (resolveObj, resolvePolicies) {\n            return Object.keys(resolveObj || {}).map(function (token) { return ({\n                token: token,\n                val: resolveObj[token],\n                deps: undefined,\n                policy: resolvePolicies[token],\n            }); });\n        };\n        /** fetch DI annotations from a function or ng1-style array */\n        var annotate = function (fn) {\n            var $injector = services.$injector;\n            // ng1 doesn't have an $injector until runtime.\n            // If the $injector doesn't exist, use \"deferred\" literal as a\n            // marker indicating they should be annotated when runtime starts\n            return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || 'deferred';\n        };\n        /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n        var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n        /** true if the object looks like a provide literal, or a ng2 Provider */\n        var isLikeNg2Provider = function (obj) {\n            return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n        };\n        /** true if the object looks like a tuple from obj2Tuples */\n        var isTupleFromObj = function (obj) {\n            return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val)));\n        };\n        /** extracts the token from a Provider or provide literal */\n        var getToken = function (p) { return p.provide || p.token; };\n        // prettier-ignore: Given a literal resolve or provider object, returns a Resolvable\n        var literal2Resolvable = pattern([\n            [prop('resolveFn'), function (p) { return new Resolvable(getToken(p), p.resolveFn, p.deps, p.policy); }],\n            [prop('useFactory'), function (p) { return new Resolvable(getToken(p), p.useFactory, p.deps || p.dependencies, p.policy); }],\n            [prop('useClass'), function (p) { return new Resolvable(getToken(p), function () { return new p.useClass(); }, [], p.policy); }],\n            [prop('useValue'), function (p) { return new Resolvable(getToken(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n            [prop('useExisting'), function (p) { return new Resolvable(getToken(p), identity, [p.useExisting], p.policy); }],\n        ]);\n        // prettier-ignore\n        var tuple2Resolvable = pattern([\n            [pipe(prop('val'), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n            [pipe(prop('val'), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n            [pipe(prop('val'), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n        ]);\n        // prettier-ignore\n        var item2Resolvable = pattern([\n            [is(Resolvable), function (r) { return r; }],\n            [isResolveLiteral, literal2Resolvable],\n            [isLikeNg2Provider, literal2Resolvable],\n            [isTupleFromObj, tuple2Resolvable],\n            [val(true), function (obj) { throw new Error('Invalid resolve value: ' + stringify(obj)); },],\n        ]);\n        // If resolveBlock is already an array, use it as-is.\n        // Otherwise, assume it's an object and convert to an Array of tuples\n        var decl = state.resolve;\n        var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n        return items.map(item2Resolvable);\n    }\n    /**\n     * @internalapi A internal global service\n     *\n     * StateBuilder is a factory for the internal [[StateObject]] objects.\n     *\n     * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n     * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n     * [[StateObject]] object, which has an API and is used internally.\n     *\n     * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n     * using the [[builder]] method.\n     */\n    var StateBuilder = /** @class */ (function () {\n        function StateBuilder(matcher, urlMatcherFactory) {\n            this.matcher = matcher;\n            var self = this;\n            var root$$1 = function () { return matcher.find(''); };\n            var isRoot = function (state) { return state.name === ''; };\n            function parentBuilder(state) {\n                if (isRoot(state))\n                    return null;\n                return matcher.find(self.parentName(state)) || root$$1();\n            }\n            this.builders = {\n                name: [nameBuilder],\n                self: [selfBuilder],\n                parent: [parentBuilder],\n                data: [dataBuilder],\n                // Build a URLMatcher if necessary, either via a relative or absolute URL\n                url: [getUrlBuilder(urlMatcherFactory, root$$1)],\n                // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n                navigable: [getNavigableBuilder(isRoot)],\n                params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n                // Each framework-specific ui-router implementation should define its own `views` builder\n                // e.g., src/ng1/statebuilders/views.ts\n                views: [],\n                // Keep a full path from the root down to this state as this is needed for state activation.\n                path: [pathBuilder],\n                // Speed up $state.includes() as it's used a lot\n                includes: [includesBuilder],\n                resolvables: [resolvablesBuilder],\n            };\n        }\n        /**\n         * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n         * More than one BuilderFunction can be registered for a given property.\n         *\n         * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n         *\n         * @param name The name of the State property being registered for.\n         * @param fn The BuilderFunction which will be used to build the State property\n         * @returns a function which deregisters the BuilderFunction\n         */\n        StateBuilder.prototype.builder = function (name, fn) {\n            var builders = this.builders;\n            var array = builders[name] || [];\n            // Backwards compat: if only one builder exists, return it, else return whole arary.\n            if (isString(name) && !isDefined(fn))\n                return array.length > 1 ? array : array[0];\n            if (!isString(name) || !isFunction(fn))\n                return;\n            builders[name] = array;\n            builders[name].push(fn);\n            return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n        };\n        /**\n         * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n         * properties and API built.\n         *\n         * @param state an uninitialized State object\n         * @returns the built State object\n         */\n        StateBuilder.prototype.build = function (state) {\n            var _a = this, matcher = _a.matcher, builders = _a.builders;\n            var parent = this.parentName(state);\n            if (parent && !matcher.find(parent, undefined, false)) {\n                return null;\n            }\n            for (var key in builders) {\n                if (!builders.hasOwnProperty(key))\n                    continue;\n                var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n                state[key] = chain(state);\n            }\n            return state;\n        };\n        StateBuilder.prototype.parentName = function (state) {\n            // name = 'foo.bar.baz.**'\n            var name = state.name || '';\n            // segments = ['foo', 'bar', 'baz', '.**']\n            var segments = name.split('.');\n            // segments = ['foo', 'bar', 'baz']\n            var lastSegment = segments.pop();\n            // segments = ['foo', 'bar'] (ignore .** segment for future states)\n            if (lastSegment === '**')\n                segments.pop();\n            if (segments.length) {\n                if (state.parent) {\n                    throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n                }\n                // 'foo.bar'\n                return segments.join('.');\n            }\n            if (!state.parent)\n                return '';\n            return isString(state.parent) ? state.parent : state.parent.name;\n        };\n        StateBuilder.prototype.name = function (state) {\n            var name = state.name;\n            if (name.indexOf('.') !== -1 || !state.parent)\n                return name;\n            var parentName = isString(state.parent) ? state.parent : state.parent.name;\n            return parentName ? parentName + '.' + name : name;\n        };\n        return StateBuilder;\n    }());\n\n    /**\n     * Internal representation of a UI-Router state.\n     *\n     * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n     *\n     * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n     *\n     * This class prototypally inherits from the corresponding [[StateDeclaration]].\n     * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n     */\n    var StateObject = /** @class */ (function () {\n        /** @deprecated use State.create() */\n        function StateObject(config) {\n            return StateObject.create(config || {});\n        }\n        /**\n         * Create a state object to put the private/internal implementation details onto.\n         * The object's prototype chain looks like:\n         * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n         *\n         * @param stateDecl the user-supplied State Declaration\n         * @returns {StateObject} an internal State object\n         */\n        StateObject.create = function (stateDecl) {\n            stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n            var state = inherit(inherit(stateDecl, StateObject.prototype));\n            stateDecl.$$state = function () { return state; };\n            state.self = stateDecl;\n            state.__stateObjectCache = {\n                nameGlob: Glob.fromString(state.name),\n            };\n            return state;\n        };\n        /**\n         * Returns true if the provided parameter is the same state.\n         *\n         * Compares the identity of the state against the passed value, which is either an object\n         * reference to the actual `State` instance, the original definition object passed to\n         * `$stateProvider.state()`, or the fully-qualified name.\n         *\n         * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n         *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n         * @returns Returns `true` if `ref` matches the current `State` instance.\n         */\n        StateObject.prototype.is = function (ref) {\n            return this === ref || this.self === ref || this.fqn() === ref;\n        };\n        /**\n         * @deprecated this does not properly handle dot notation\n         * @returns Returns a dot-separated name of the state.\n         */\n        StateObject.prototype.fqn = function () {\n            if (!this.parent || !(this.parent instanceof this.constructor))\n                return this.name;\n            var name = this.parent.fqn();\n            return name ? name + '.' + this.name : this.name;\n        };\n        /**\n         * Returns the root node of this state's tree.\n         *\n         * @returns The root of this state's tree.\n         */\n        StateObject.prototype.root = function () {\n            return (this.parent && this.parent.root()) || this;\n        };\n        /**\n         * Gets the state's `Param` objects\n         *\n         * Gets the list of [[Param]] objects owned by the state.\n         * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n         * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n         *\n         * @param opts options\n         */\n        StateObject.prototype.parameters = function (opts) {\n            opts = defaults(opts, { inherit: true, matchingKeys: null });\n            var inherited = (opts.inherit && this.parent && this.parent.parameters()) || [];\n            return inherited\n                .concat(values(this.params))\n                .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n        };\n        /**\n         * Returns a single [[Param]] that is owned by the state\n         *\n         * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n         * @param id the name of the [[Param]] to return\n         * @param opts options\n         */\n        StateObject.prototype.parameter = function (id, opts) {\n            if (opts === void 0) { opts = {}; }\n            return ((this.url && this.url.parameter(id, opts)) ||\n                find(values(this.params), propEq('id', id)) ||\n                (opts.inherit && this.parent && this.parent.parameter(id)));\n        };\n        StateObject.prototype.toString = function () {\n            return this.fqn();\n        };\n        /** Predicate which returns true if the object is an class with @State() decorator */\n        StateObject.isStateClass = function (stateDecl) {\n            return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n        };\n        /** Predicate which returns true if the object is an internal [[StateObject]] object */\n        StateObject.isState = function (obj) { return isObject(obj['__stateObjectCache']); };\n        return StateObject;\n    }());\n\n    /** @publicapi @module state */ /** */\n    var StateMatcher = /** @class */ (function () {\n        function StateMatcher(_states) {\n            this._states = _states;\n        }\n        StateMatcher.prototype.isRelative = function (stateName) {\n            stateName = stateName || '';\n            return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;\n        };\n        StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n            if (matchGlob === void 0) { matchGlob = true; }\n            if (!stateOrName && stateOrName !== '')\n                return undefined;\n            var isStr = isString(stateOrName);\n            var name = isStr ? stateOrName : stateOrName.name;\n            if (this.isRelative(name))\n                name = this.resolvePath(name, base);\n            var state = this._states[name];\n            if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n                return state;\n            }\n            else if (isStr && matchGlob) {\n                var _states = values(this._states);\n                var matches = _states.filter(function (_state) { return _state.__stateObjectCache.nameGlob && _state.__stateObjectCache.nameGlob.matches(name); });\n                if (matches.length > 1) {\n                    // tslint:disable-next-line:no-console\n                    console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n                }\n                return matches[0];\n            }\n            return undefined;\n        };\n        StateMatcher.prototype.resolvePath = function (name, base) {\n            if (!base)\n                throw new Error(\"No reference point given for path '\" + name + \"'\");\n            var baseState = this.find(base);\n            var splitName = name.split('.');\n            var pathLength = splitName.length;\n            var i = 0, current = baseState;\n            for (; i < pathLength; i++) {\n                if (splitName[i] === '' && i === 0) {\n                    current = baseState;\n                    continue;\n                }\n                if (splitName[i] === '^') {\n                    if (!current.parent)\n                        throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                    current = current.parent;\n                    continue;\n                }\n                break;\n            }\n            var relName = splitName.slice(i).join('.');\n            return current.name + (current.name && relName ? '.' : '') + relName;\n        };\n        return StateMatcher;\n    }());\n\n    /** @publicapi @module state */ /** */\n    /** @internalapi */\n    var StateQueueManager = /** @class */ (function () {\n        function StateQueueManager(router, states, builder, listeners) {\n            this.router = router;\n            this.states = states;\n            this.builder = builder;\n            this.listeners = listeners;\n            this.queue = [];\n        }\n        /** @internalapi */\n        StateQueueManager.prototype.dispose = function () {\n            this.queue = [];\n        };\n        StateQueueManager.prototype.register = function (stateDecl) {\n            var queue = this.queue;\n            var state = StateObject.create(stateDecl);\n            var name = state.name;\n            if (!isString(name))\n                throw new Error('State must have a valid name');\n            if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n                throw new Error(\"State '\" + name + \"' is already defined\");\n            queue.push(state);\n            this.flush();\n            return state;\n        };\n        StateQueueManager.prototype.flush = function () {\n            var _this = this;\n            var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n            var registered = [], // states that got registered\n            orphans = [], // states that don't yet have a parent registered\n            previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n            var getState = function (name) { return _this.states.hasOwnProperty(name) && _this.states[name]; };\n            var notifyListeners = function () {\n                if (registered.length) {\n                    _this.listeners.forEach(function (listener) { return listener('registered', registered.map(function (s) { return s.self; })); });\n                }\n            };\n            while (queue.length > 0) {\n                var state = queue.shift();\n                var name_1 = state.name;\n                var result = builder.build(state);\n                var orphanIdx = orphans.indexOf(state);\n                if (result) {\n                    var existingState = getState(name_1);\n                    if (existingState && existingState.name === name_1) {\n                        throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                    }\n                    var existingFutureState = getState(name_1 + '.**');\n                    if (existingFutureState) {\n                        // Remove future state of the same name\n                        this.router.stateRegistry.deregister(existingFutureState);\n                    }\n                    states[name_1] = state;\n                    this.attachRoute(state);\n                    if (orphanIdx >= 0)\n                        orphans.splice(orphanIdx, 1);\n                    registered.push(state);\n                    continue;\n                }\n                var prev = previousQueueLength[name_1];\n                previousQueueLength[name_1] = queue.length;\n                if (orphanIdx >= 0 && prev === queue.length) {\n                    // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                    // throw new Error(`Cannot register orphaned state '${name}'`);\n                    queue.push(state);\n                    notifyListeners();\n                    return states;\n                }\n                else if (orphanIdx < 0) {\n                    orphans.push(state);\n                }\n                queue.push(state);\n            }\n            notifyListeners();\n            return states;\n        };\n        StateQueueManager.prototype.attachRoute = function (state) {\n            if (state.abstract || !state.url)\n                return;\n            var rulesApi = this.router.urlService.rules;\n            rulesApi.rule(rulesApi.urlRuleFactory.create(state));\n        };\n        return StateQueueManager;\n    }());\n\n    /** @publicapi @module state */ /** */\n    var StateRegistry = /** @class */ (function () {\n        /** @internalapi */\n        function StateRegistry(router) {\n            this.router = router;\n            this.states = {};\n            this.listeners = [];\n            this.matcher = new StateMatcher(this.states);\n            this.builder = new StateBuilder(this.matcher, router.urlMatcherFactory);\n            this.stateQueue = new StateQueueManager(router, this.states, this.builder, this.listeners);\n            this._registerRoot();\n        }\n        /** @internalapi */\n        StateRegistry.prototype._registerRoot = function () {\n            var rootStateDef = {\n                name: '',\n                url: '^',\n                views: null,\n                params: {\n                    '#': { value: null, type: 'hash', dynamic: true },\n                },\n                abstract: true,\n            };\n            var _root = (this._root = this.stateQueue.register(rootStateDef));\n            _root.navigable = null;\n        };\n        /** @internalapi */\n        StateRegistry.prototype.dispose = function () {\n            var _this = this;\n            this.stateQueue.dispose();\n            this.listeners = [];\n            this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n        };\n        /**\n         * Listen for a State Registry events\n         *\n         * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n         *\n         * #### Example:\n         * ```js\n         * let allStates = registry.get();\n         *\n         * // Later, invoke deregisterFn() to remove the listener\n         * let deregisterFn = registry.onStatesChanged((event, states) => {\n         *   switch(event) {\n         *     case: 'registered':\n         *       states.forEach(state => allStates.push(state));\n         *       break;\n         *     case: 'deregistered':\n         *       states.forEach(state => {\n         *         let idx = allStates.indexOf(state);\n         *         if (idx !== -1) allStates.splice(idx, 1);\n         *       });\n         *       break;\n         *   }\n         * });\n         * ```\n         *\n         * @param listener a callback function invoked when the registered states changes.\n         *        The function receives two parameters, `event` and `state`.\n         *        See [[StateRegistryListener]]\n         * @return a function that deregisters the listener\n         */\n        StateRegistry.prototype.onStatesChanged = function (listener) {\n            this.listeners.push(listener);\n            return function deregisterListener() {\n                removeFrom(this.listeners)(listener);\n            }.bind(this);\n        };\n        /**\n         * Gets the implicit root state\n         *\n         * Gets the root of the state tree.\n         * The root state is implicitly created by UI-Router.\n         * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n         *\n         * @return the root [[StateObject]]\n         */\n        StateRegistry.prototype.root = function () {\n            return this._root;\n        };\n        /**\n         * Adds a state to the registry\n         *\n         * Registers a [[StateDeclaration]] or queues it for registration.\n         *\n         * Note: a state will be queued if the state's parent isn't yet registered.\n         *\n         * @param stateDefinition the definition of the state to register.\n         * @returns the internal [[StateObject]] object.\n         *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n         *          If the state was only queued, then the object is not fully built.\n         */\n        StateRegistry.prototype.register = function (stateDefinition) {\n            return this.stateQueue.register(stateDefinition);\n        };\n        /** @hidden */\n        StateRegistry.prototype._deregisterTree = function (state) {\n            var _this = this;\n            var all$$1 = this.get().map(function (s) { return s.$$state(); });\n            var getChildren = function (states) {\n                var _children = all$$1.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n                return _children.length === 0 ? _children : _children.concat(getChildren(_children));\n            };\n            var children = getChildren([state]);\n            var deregistered = [state].concat(children).reverse();\n            deregistered.forEach(function (_state) {\n                var rulesApi = _this.router.urlService.rules;\n                // Remove URL rule\n                rulesApi\n                    .rules()\n                    .filter(propEq('state', _state))\n                    .forEach(function (rule) { return rulesApi.removeRule(rule); });\n                // Remove state from registry\n                delete _this.states[_state.name];\n            });\n            return deregistered;\n        };\n        /**\n         * Removes a state from the registry\n         *\n         * This removes a state from the registry.\n         * If the state has children, they are are also removed from the registry.\n         *\n         * @param stateOrName the state's name or object representation\n         * @returns {StateObject[]} a list of removed states\n         */\n        StateRegistry.prototype.deregister = function (stateOrName) {\n            var _state = this.get(stateOrName);\n            if (!_state)\n                throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n            var deregisteredStates = this._deregisterTree(_state.$$state());\n            this.listeners.forEach(function (listener) { return listener('deregistered', deregisteredStates.map(function (s) { return s.self; })); });\n            return deregisteredStates;\n        };\n        StateRegistry.prototype.get = function (stateOrName, base) {\n            var _this = this;\n            if (arguments.length === 0)\n                return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n            var found = this.matcher.find(stateOrName, base);\n            return (found && found.self) || null;\n        };\n        StateRegistry.prototype.decorator = function (name, func) {\n            return this.builder.builder(name, func);\n        };\n        return StateRegistry;\n    }());\n\n    (function (TransitionHookPhase) {\n        TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n        TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n        TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n        TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n        TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n    })(exports.TransitionHookPhase || (exports.TransitionHookPhase = {}));\n\n    (function (TransitionHookScope) {\n        TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n        TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n    })(exports.TransitionHookScope || (exports.TransitionHookScope = {}));\n\n    /** @publicapi @module transition */ /** */\n    var defaultOptions = {\n        current: noop,\n        transition: null,\n        traceData: {},\n        bind: null,\n    };\n    /** @hidden */\n    var TransitionHook = /** @class */ (function () {\n        function TransitionHook(transition, stateContext, registeredHook, options) {\n            var _this = this;\n            this.transition = transition;\n            this.stateContext = stateContext;\n            this.registeredHook = registeredHook;\n            this.options = options;\n            this.isSuperseded = function () { return _this.type.hookPhase === exports.TransitionHookPhase.RUN && !_this.options.transition.isActive(); };\n            this.options = defaults(options, defaultOptions);\n            this.type = registeredHook.eventType;\n        }\n        /**\n         * Chains together an array of TransitionHooks.\n         *\n         * Given a list of [[TransitionHook]] objects, chains them together.\n         * Each hook is invoked after the previous one completes.\n         *\n         * #### Example:\n         * ```js\n         * var hooks: TransitionHook[] = getHooks();\n         * let promise: Promise<any> = TransitionHook.chain(hooks);\n         *\n         * promise.then(handleSuccess, handleError);\n         * ```\n         *\n         * @param hooks the list of hooks to chain together\n         * @param waitFor if provided, the chain is `.then()`'ed off this promise\n         * @returns a `Promise` for sequentially invoking the hooks (in order)\n         */\n        TransitionHook.chain = function (hooks, waitFor) {\n            // Chain the next hook off the previous\n            var createHookChainR = function (prev, nextHook) { return prev.then(function () { return nextHook.invokeHook(); }); };\n            return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n        };\n        /**\n         * Invokes all the provided TransitionHooks, in order.\n         * Each hook's return value is checked.\n         * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n         * If no hook returns a promise, then all hooks are processed synchronously.\n         *\n         * @param hooks the list of TransitionHooks to invoke\n         * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n         *\n         * @returns a promise for the async result, or the result of the callback\n         */\n        TransitionHook.invokeHooks = function (hooks, doneCallback) {\n            for (var idx = 0; idx < hooks.length; idx++) {\n                var hookResult = hooks[idx].invokeHook();\n                if (isPromise(hookResult)) {\n                    var remainingHooks = hooks.slice(idx + 1);\n                    return TransitionHook.chain(remainingHooks, hookResult).then(doneCallback);\n                }\n            }\n            return doneCallback();\n        };\n        /**\n         * Run all TransitionHooks, ignoring their return value.\n         */\n        TransitionHook.runAllHooks = function (hooks) {\n            hooks.forEach(function (hook) { return hook.invokeHook(); });\n        };\n        TransitionHook.prototype.logError = function (err) {\n            this.transition.router.stateService.defaultErrorHandler()(err);\n        };\n        TransitionHook.prototype.invokeHook = function () {\n            var _this = this;\n            var hook = this.registeredHook;\n            if (hook._deregistered)\n                return;\n            var notCurrent = this.getNotCurrentRejection();\n            if (notCurrent)\n                return notCurrent;\n            var options = this.options;\n            trace.traceHookInvocation(this, this.transition, options);\n            var invokeCallback = function () { return hook.callback.call(options.bind, _this.transition, _this.stateContext); };\n            var normalizeErr = function (err) { return Rejection.normalize(err).toPromise(); };\n            var handleError = function (err) { return hook.eventType.getErrorHandler(_this)(err); };\n            var handleResult = function (result) { return hook.eventType.getResultHandler(_this)(result); };\n            try {\n                var result = invokeCallback();\n                if (!this.type.synchronous && isPromise(result)) {\n                    return result.catch(normalizeErr).then(handleResult, handleError);\n                }\n                else {\n                    return handleResult(result);\n                }\n            }\n            catch (err) {\n                // If callback throws (synchronously)\n                return handleError(Rejection.normalize(err));\n            }\n            finally {\n                if (hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit) {\n                    hook.deregister();\n                }\n            }\n        };\n        /**\n         * This method handles the return value of a Transition Hook.\n         *\n         * A hook can return false (cancel), a TargetState (redirect),\n         * or a promise (which may later resolve to false or a redirect)\n         *\n         * This also handles \"transition superseded\" -- when a new transition\n         * was started while the hook was still running\n         */\n        TransitionHook.prototype.handleHookResult = function (result) {\n            var _this = this;\n            var notCurrent = this.getNotCurrentRejection();\n            if (notCurrent)\n                return notCurrent;\n            // Hook returned a promise\n            if (isPromise(result)) {\n                // Wait for the promise, then reprocess with the resulting value\n                return result.then(function (val$$1) { return _this.handleHookResult(val$$1); });\n            }\n            trace.traceHookResult(result, this.transition, this.options);\n            // Hook returned false\n            if (result === false) {\n                // Abort this Transition\n                return Rejection.aborted('Hook aborted transition').toPromise();\n            }\n            var isTargetState = is(TargetState);\n            // hook returned a TargetState\n            if (isTargetState(result)) {\n                // Halt the current Transition and redirect (a new Transition) to the TargetState.\n                return Rejection.redirected(result).toPromise();\n            }\n        };\n        /**\n         * Return a Rejection promise if the transition is no longer current due\n         * to a stopped router (disposed), or a new transition has started and superseded this one.\n         */\n        TransitionHook.prototype.getNotCurrentRejection = function () {\n            var router = this.transition.router;\n            // The router is stopped\n            if (router._disposed) {\n                return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n            }\n            if (this.transition._aborted) {\n                return Rejection.aborted().toPromise();\n            }\n            // This transition is no longer current.\n            // Another transition started while this hook was still running.\n            if (this.isSuperseded()) {\n                // Abort this transition\n                return Rejection.superseded(this.options.current()).toPromise();\n            }\n        };\n        TransitionHook.prototype.toString = function () {\n            var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n            var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = fnToString(registeredHook.callback);\n            return event + \" context: \" + context + \", \" + maxLength(200, name);\n        };\n        /**\n         * These GetResultHandler(s) are used by [[invokeHook]] below\n         * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n         */\n        TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n            return hook.handleHookResult(result);\n        }; };\n        /**\n         * If the result is a promise rejection, log it.\n         * Otherwise, ignore the result.\n         */\n        TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n            isPromise(result) && result.catch(function (err) { return hook.logError(Rejection.normalize(err)); });\n            return undefined;\n        }; };\n        /**\n         * These GetErrorHandler(s) are used by [[invokeHook]] below\n         * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n         */\n        TransitionHook.LOG_ERROR = function (hook) { return function (error) { return hook.logError(error); }; };\n        TransitionHook.REJECT_ERROR = function (hook) { return function (error) { return silentRejection(error); }; };\n        TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n            throw error;\n        }; };\n        return TransitionHook;\n    }());\n\n    /** @publicapi @module transition */ /** */\n    /**\n     * Determines if the given state matches the matchCriteria\n     *\n     * @hidden\n     *\n     * @param state a State Object to test against\n     * @param criterion\n     * - If a string, matchState uses the string as a glob-matcher against the state name\n     * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n     *   and returns a positive match if any of the globs match.\n     * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n     * @returns {boolean}\n     */\n    function matchState(state, criterion, transition) {\n        var toMatch = isString(criterion) ? [criterion] : criterion;\n        function matchGlobs(_state) {\n            var globStrings = toMatch;\n            for (var i = 0; i < globStrings.length; i++) {\n                var glob = new Glob(globStrings[i]);\n                if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n        return !!matchFn(state, transition);\n    }\n    /**\n     * @internalapi\n     * The registration data for a registered transition hook\n     */\n    var RegisteredHook = /** @class */ (function () {\n        function RegisteredHook(tranSvc, eventType, callback, matchCriteria, removeHookFromRegistry, options) {\n            if (options === void 0) { options = {}; }\n            this.tranSvc = tranSvc;\n            this.eventType = eventType;\n            this.callback = callback;\n            this.matchCriteria = matchCriteria;\n            this.removeHookFromRegistry = removeHookFromRegistry;\n            this.invokeCount = 0;\n            this._deregistered = false;\n            this.priority = options.priority || 0;\n            this.bind = options.bind || null;\n            this.invokeLimit = options.invokeLimit;\n        }\n        /**\n         * Gets the matching [[PathNode]]s\n         *\n         * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n         * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n         *\n         * Returning `null` is significant to distinguish between the default\n         * \"match-all criterion value\" of `true` compared to a `() => true` function,\n         * when the nodes is an empty array.\n         *\n         * This is useful to allow a transition match criteria of `entering: true`\n         * to still match a transition, even when `entering === []`.  Contrast that\n         * with `entering: (state) => true` which only matches when a state is actually\n         * being entered.\n         */\n        RegisteredHook.prototype._matchingNodes = function (nodes, criterion, transition) {\n            if (criterion === true)\n                return nodes;\n            var matching = nodes.filter(function (node) { return matchState(node.state, criterion, transition); });\n            return matching.length ? matching : null;\n        };\n        /**\n         * Gets the default match criteria (all `true`)\n         *\n         * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n         *\n         * ```js\n         * {\n         *   to: true,\n         *   from: true,\n         *   entering: true,\n         *   exiting: true,\n         *   retained: true,\n         * }\n         */\n        RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n            return mapObj(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n        };\n        /**\n         * Gets matching nodes as [[IMatchingNodes]]\n         *\n         * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n         *\n         * ```js\n         * let matches: IMatchingNodes = {\n         *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n         *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n         *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n         *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n         *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n         * };\n         * ```\n         */\n        RegisteredHook.prototype._getMatchingNodes = function (treeChanges, transition) {\n            var _this = this;\n            var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n            var paths = values(this.tranSvc._pluginapi._getPathTypes());\n            return paths.reduce(function (mn, pathtype) {\n                // STATE scope criteria matches against every node in the path.\n                // TRANSITION scope criteria matches against only the last node in the path\n                var isStateHook = pathtype.scope === exports.TransitionHookScope.STATE;\n                var path = treeChanges[pathtype.name] || [];\n                var nodes = isStateHook ? path : [tail(path)];\n                mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name], transition);\n                return mn;\n            }, {});\n        };\n        /**\n         * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n         *\n         * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n         * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n         */\n        RegisteredHook.prototype.matches = function (treeChanges, transition) {\n            var matches = this._getMatchingNodes(treeChanges, transition);\n            // Check if all the criteria matched the TreeChanges object\n            var allMatched = values(matches).every(identity);\n            return allMatched ? matches : null;\n        };\n        RegisteredHook.prototype.deregister = function () {\n            this.removeHookFromRegistry(this);\n            this._deregistered = true;\n        };\n        return RegisteredHook;\n    }());\n    /** @hidden Return a registration function of the requested type. */\n    function makeEvent(registry, transitionService, eventType) {\n        // Create the object which holds the registered transition hooks.\n        var _registeredHooks = (registry._registeredHooks = registry._registeredHooks || {});\n        var hooks = (_registeredHooks[eventType.name] = []);\n        var removeHookFn = removeFrom(hooks);\n        // Create hook registration function on the IHookRegistry for the event\n        registry[eventType.name] = hookRegistrationFn;\n        function hookRegistrationFn(matchObject, callback, options) {\n            if (options === void 0) { options = {}; }\n            var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, removeHookFn, options);\n            hooks.push(registeredHook);\n            return registeredHook.deregister.bind(registeredHook);\n        }\n        return hookRegistrationFn;\n    }\n\n    /** @publicapi @module transition */ /** */\n    /**\n     * This class returns applicable TransitionHooks for a specific Transition instance.\n     *\n     * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n     * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n     * determined by the type of hook)\n     *\n     * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n     *\n     * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n     * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n     * in the Transition class, so we must also provide the Transition's _treeChanges)\n     *\n     */\n    var HookBuilder = /** @class */ (function () {\n        function HookBuilder(transition) {\n            this.transition = transition;\n        }\n        HookBuilder.prototype.buildHooksForPhase = function (phase) {\n            var _this = this;\n            var $transitions = this.transition.router.transitionService;\n            return $transitions._pluginapi\n                ._getEvents(phase)\n                .map(function (type) { return _this.buildHooks(type); })\n                .reduce(unnestR, [])\n                .filter(identity);\n        };\n        /**\n         * Returns an array of newly built TransitionHook objects.\n         *\n         * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n         * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n         * - For each of the [[PathNode]]s, creates a TransitionHook\n         *\n         * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n         */\n        HookBuilder.prototype.buildHooks = function (hookType) {\n            var transition = this.transition;\n            var treeChanges = transition.treeChanges();\n            // Find all the matching registered hooks for a given hook type\n            var matchingHooks = this.getMatchingHooks(hookType, treeChanges, transition);\n            if (!matchingHooks)\n                return [];\n            var baseHookOptions = {\n                transition: transition,\n                current: transition.options().current,\n            };\n            var makeTransitionHooks = function (hook) {\n                // Fetch the Nodes that caused this hook to match.\n                var matches = hook.matches(treeChanges, transition);\n                // Select the PathNode[] that will be used as TransitionHook context objects\n                var matchingNodes = matches[hookType.criteriaMatchPath.name];\n                // Return an array of HookTuples\n                return matchingNodes.map(function (node) {\n                    var _options = extend({\n                        bind: hook.bind,\n                        traceData: { hookType: hookType.name, context: node },\n                    }, baseHookOptions);\n                    var state = hookType.criteriaMatchPath.scope === exports.TransitionHookScope.STATE ? node.state.self : null;\n                    var transitionHook = new TransitionHook(transition, state, hook, _options);\n                    return { hook: hook, node: node, transitionHook: transitionHook };\n                });\n            };\n            return matchingHooks\n                .map(makeTransitionHooks)\n                .reduce(unnestR, [])\n                .sort(tupleSort(hookType.reverseSort))\n                .map(function (tuple) { return tuple.transitionHook; });\n        };\n        /**\n         * Finds all RegisteredHooks from:\n         * - The Transition object instance hook registry\n         * - The TransitionService ($transitions) global hook registry\n         *\n         * which matched:\n         * - the eventType\n         * - the matchCriteria (to, from, exiting, retained, entering)\n         *\n         * @returns an array of matched [[RegisteredHook]]s\n         */\n        HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges, transition) {\n            var isCreate = hookType.hookPhase === exports.TransitionHookPhase.CREATE;\n            // Instance and Global hook registries\n            var $transitions = this.transition.router.transitionService;\n            var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n            return registries\n                .map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n                .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n                .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n                .filter(function (hook) { return hook.matches(treeChanges, transition); }); // Only those satisfying matchCriteria\n        };\n        return HookBuilder;\n    }());\n    /**\n     * A factory for a sort function for HookTuples.\n     *\n     * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n     * the EventHook priority.\n     *\n     * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n     * @returns a tuple sort function\n     */\n    function tupleSort(reverseDepthSort) {\n        if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n        return function nodeDepthThenPriority(l, r) {\n            var factor = reverseDepthSort ? -1 : 1;\n            var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n            return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n        };\n    }\n\n    /** @publicapi @module transition */ /** */\n    /** @hidden */\n    var stateSelf = prop('self');\n    /**\n     * Represents a transition between two states.\n     *\n     * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n     *\n     * This object contains all contextual information about the to/from states, parameters, resolves.\n     * It has information about all states being entered and exited as a result of the transition.\n     */\n    var Transition = /** @class */ (function () {\n        /**\n         * Creates a new Transition object.\n         *\n         * If the target state is not valid, an error is thrown.\n         *\n         * @internalapi\n         *\n         * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n         *        encapsulates the \"from state\".\n         * @param targetState The target state and parameters being transitioned to (also, the transition options)\n         * @param router The [[UIRouter]] instance\n         */\n        function Transition(fromPath, targetState, router) {\n            var _this = this;\n            /** @hidden */\n            this._deferred = services.$q.defer();\n            /**\n             * This promise is resolved or rejected based on the outcome of the Transition.\n             *\n             * When the transition is successful, the promise is resolved\n             * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n             */\n            this.promise = this._deferred.promise;\n            /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n            this._registeredHooks = {};\n            /** @hidden */\n            this._hookBuilder = new HookBuilder(this);\n            /** Checks if this transition is currently active/running. */\n            this.isActive = function () { return _this.router.globals.transition === _this; };\n            this.router = router;\n            this._targetState = targetState;\n            if (!targetState.valid()) {\n                throw new Error(targetState.error());\n            }\n            // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n            this._options = extend({ current: val(this) }, targetState.options());\n            this.$id = router.transitionService._transitionCount++;\n            var toPath = PathUtils.buildToPath(fromPath, targetState);\n            this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n            this.createTransitionHookRegFns();\n            var onCreateHooks = this._hookBuilder.buildHooksForPhase(exports.TransitionHookPhase.CREATE);\n            TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n            this.applyViewConfigs(router);\n        }\n        /** @hidden */\n        Transition.prototype.onBefore = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onStart = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onExit = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onRetain = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onEnter = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onFinish = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onSuccess = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        Transition.prototype.onError = function (criteria, callback, options) {\n            return;\n        };\n        /** @hidden\n         * Creates the transition-level hook registration functions\n         * (which can then be used to register hooks)\n         */\n        Transition.prototype.createTransitionHookRegFns = function () {\n            var _this = this;\n            this.router.transitionService._pluginapi\n                ._getEvents()\n                .filter(function (type) { return type.hookPhase !== exports.TransitionHookPhase.CREATE; })\n                .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n        };\n        /** @internalapi */\n        Transition.prototype.getHooks = function (hookName) {\n            return this._registeredHooks[hookName];\n        };\n        Transition.prototype.applyViewConfigs = function (router) {\n            var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n            PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n        };\n        /**\n         * @internalapi\n         *\n         * @returns the internal from [State] object\n         */\n        Transition.prototype.$from = function () {\n            return tail(this._treeChanges.from).state;\n        };\n        /**\n         * @internalapi\n         *\n         * @returns the internal to [State] object\n         */\n        Transition.prototype.$to = function () {\n            return tail(this._treeChanges.to).state;\n        };\n        /**\n         * Returns the \"from state\"\n         *\n         * Returns the state that the transition is coming *from*.\n         *\n         * @returns The state declaration object for the Transition's (\"from state\").\n         */\n        Transition.prototype.from = function () {\n            return this.$from().self;\n        };\n        /**\n         * Returns the \"to state\"\n         *\n         * Returns the state that the transition is going *to*.\n         *\n         * @returns The state declaration object for the Transition's target state (\"to state\").\n         */\n        Transition.prototype.to = function () {\n            return this.$to().self;\n        };\n        /**\n         * Gets the Target State\n         *\n         * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n         *\n         * @returns the [[TargetState]] of this Transition\n         */\n        Transition.prototype.targetState = function () {\n            return this._targetState;\n        };\n        /**\n         * Determines whether two transitions are equivalent.\n         * @deprecated\n         */\n        Transition.prototype.is = function (compare) {\n            if (compare instanceof Transition) {\n                // TODO: Also compare parameters\n                return this.is({ to: compare.$to().name, from: compare.$from().name });\n            }\n            return !((compare.to && !matchState(this.$to(), compare.to, this)) ||\n                (compare.from && !matchState(this.$from(), compare.from, this)));\n        };\n        Transition.prototype.params = function (pathname) {\n            if (pathname === void 0) { pathname = 'to'; }\n            return Object.freeze(this._treeChanges[pathname].map(prop('paramValues')).reduce(mergeR, {}));\n        };\n        Transition.prototype.paramsChanged = function () {\n            var fromParams = this.params('from');\n            var toParams = this.params('to');\n            // All the parameters declared on both the \"to\" and \"from\" paths\n            var allParamDescriptors = []\n                .concat(this._treeChanges.to)\n                .concat(this._treeChanges.from)\n                .map(function (pathNode) { return pathNode.paramSchema; })\n                .reduce(flattenR, [])\n                .reduce(uniqR, []);\n            var changedParamDescriptors = Param.changed(allParamDescriptors, fromParams, toParams);\n            return changedParamDescriptors.reduce(function (changedValues, descriptor) {\n                changedValues[descriptor.id] = toParams[descriptor.id];\n                return changedValues;\n            }, {});\n        };\n        /**\n         * Creates a [[UIInjector]] Dependency Injector\n         *\n         * Returns a Dependency Injector for the Transition's target state (to state).\n         * The injector provides resolve values which the target state has access to.\n         *\n         * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n         *\n         * #### Example:\n         * ```js\n         * .onEnter({ entering: 'myState' }, trans => {\n         *   var myResolveValue = trans.injector().get('myResolve');\n         *   // Inject a global service from the global/native injector (if it exists)\n         *   var MyService = trans.injector().get('MyService');\n         * })\n         * ```\n         *\n         * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n         * You can use [[UIInjector.getAsync]] to get a promise for the data.\n         * #### Example:\n         * ```js\n         * .onBefore({}, trans => {\n         *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n         *     return myResolveValue !== 'ABORT';\n         *   });\n         * });\n         * ```\n         *\n         * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n         * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n         * #### Example:\n         * ```js\n         * .onEnter({ to: 'foo.bar' }, trans => {\n         *   // returns result of `foo` state's `myResolve` resolve\n         *   // even though `foo.bar` also has a `myResolve` resolve\n         *   var fooData = trans.injector('foo').get('myResolve');\n         * });\n         * ```\n         *\n         * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n         * The resolve data from the `from` path will be returned.\n         * #### Example:\n         * ```js\n         * .onExit({ exiting: 'foo.bar' }, trans => {\n         *   // Gets the resolve value of `myResolve` from the state being exited\n         *   var fooData = trans.injector(null, 'from').get('myResolve');\n         * });\n         * ```\n         *\n         *\n         * @param state Limits the resolves provided to only the resolves the provided state has access to.\n         * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n         *\n         * @returns a [[UIInjector]]\n         */\n        Transition.prototype.injector = function (state, pathName) {\n            if (pathName === void 0) { pathName = 'to'; }\n            var path = this._treeChanges[pathName];\n            if (state)\n                path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n            return new ResolveContext(path).injector();\n        };\n        /**\n         * Gets all available resolve tokens (keys)\n         *\n         * This method can be used in conjunction with [[injector]] to inspect the resolve values\n         * available to the Transition.\n         *\n         * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n         * in the Transition's [[TreeChanges.to]] path.\n         *\n         * #### Example:\n         * This example logs all resolve values\n         * ```js\n         * let tokens = trans.getResolveTokens();\n         * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n         * ```\n         *\n         * #### Example:\n         * This example creates promises for each resolve value.\n         * This triggers fetches of resolves (if any have not yet been fetched).\n         * When all promises have all settled, it logs the resolve values.\n         * ```js\n         * let tokens = trans.getResolveTokens();\n         * let promise = tokens.map(token => trans.injector().getAsync(token));\n         * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n         * ```\n         *\n         * Note: Angular 1 users whould use `$q.all()`\n         *\n         * @param pathname resolve context's path name (e.g., `to` or `from`)\n         *\n         * @returns an array of resolve tokens (keys)\n         */\n        Transition.prototype.getResolveTokens = function (pathname) {\n            if (pathname === void 0) { pathname = 'to'; }\n            return new ResolveContext(this._treeChanges[pathname]).getTokens();\n        };\n        /**\n         * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n         *\n         * Allows a transition hook to dynamically add a Resolvable to this Transition.\n         *\n         * Use the [[Transition.injector]] to retrieve the resolved data in subsequent hooks ([[UIInjector.get]]).\n         *\n         * If a `state` argument is provided, the Resolvable is processed when that state is being entered.\n         * If no `state` is provided then the root state is used.\n         * If the given `state` has already been entered, the Resolvable is processed when any child state is entered.\n         * If no child states will be entered, the Resolvable is processed during the `onFinish` phase of the Transition.\n         *\n         * The `state` argument also scopes the resolved data.\n         * The resolved data is available from the injector for that `state` and any children states.\n         *\n         * #### Example:\n         * ```js\n         * transitionService.onBefore({}, transition => {\n         *   transition.addResolvable({\n         *     token: 'myResolve',\n         *     deps: ['MyService'],\n         *     resolveFn: myService => myService.getData()\n         *   });\n         * });\n         * ```\n         *\n         * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n         * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n         */\n        Transition.prototype.addResolvable = function (resolvable, state) {\n            if (state === void 0) { state = ''; }\n            resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n            var stateName = typeof state === 'string' ? state : state.name;\n            var topath = this._treeChanges.to;\n            var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n            var resolveContext = new ResolveContext(topath);\n            resolveContext.addResolvables([resolvable], targetNode.state);\n        };\n        /**\n         * Gets the transition from which this transition was redirected.\n         *\n         * If the current transition is a redirect, this method returns the transition that was redirected.\n         *\n         * #### Example:\n         * ```js\n         * let transitionA = $state.go('A').transition\n         * transitionA.onStart({}, () => $state.target('B'));\n         * $transitions.onSuccess({ to: 'B' }, (trans) => {\n         *   trans.to().name === 'B'; // true\n         *   trans.redirectedFrom() === transitionA; // true\n         * });\n         * ```\n         *\n         * @returns The previous Transition, or null if this Transition is not the result of a redirection\n         */\n        Transition.prototype.redirectedFrom = function () {\n            return this._options.redirectedFrom || null;\n        };\n        /**\n         * Gets the original transition in a redirect chain\n         *\n         * A transition might belong to a long chain of multiple redirects.\n         * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n         *\n         * #### Example:\n         * ```js\n         * // states\n         * registry.register({ name: 'A', redirectTo: 'B' });\n         * registry.register({ name: 'B', redirectTo: 'C' });\n         * registry.register({ name: 'C', redirectTo: 'D' });\n         * registry.register({ name: 'D' });\n         *\n         * let transitionA = $state.go('A').transition\n         *\n         * $transitions.onSuccess({ to: 'D' }, (trans) => {\n         *   trans.to().name === 'D'; // true\n         *   trans.redirectedFrom().to().name === 'C'; // true\n         *   trans.originalTransition() === transitionA; // true\n         *   trans.originalTransition().to().name === 'A'; // true\n         * });\n         * ```\n         *\n         * @returns The original Transition that started a redirect chain\n         */\n        Transition.prototype.originalTransition = function () {\n            var rf = this.redirectedFrom();\n            return (rf && rf.originalTransition()) || this;\n        };\n        /**\n         * Get the transition options\n         *\n         * @returns the options for this Transition.\n         */\n        Transition.prototype.options = function () {\n            return this._options;\n        };\n        /**\n         * Gets the states being entered.\n         *\n         * @returns an array of states that will be entered during this transition.\n         */\n        Transition.prototype.entering = function () {\n            return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n        };\n        /**\n         * Gets the states being exited.\n         *\n         * @returns an array of states that will be exited during this transition.\n         */\n        Transition.prototype.exiting = function () {\n            return map(this._treeChanges.exiting, prop('state'))\n                .map(stateSelf)\n                .reverse();\n        };\n        /**\n         * Gets the states being retained.\n         *\n         * @returns an array of states that are already entered from a previous Transition, that will not be\n         *    exited during this Transition\n         */\n        Transition.prototype.retained = function () {\n            return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n        };\n        /**\n         * Get the [[ViewConfig]]s associated with this Transition\n         *\n         * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n         * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n         *\n         * @param pathname the name of the path to fetch views for:\n         *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n         * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n         *\n         * @returns a list of ViewConfig objects for the given path.\n         */\n        Transition.prototype.views = function (pathname, state) {\n            if (pathname === void 0) { pathname = 'entering'; }\n            var path = this._treeChanges[pathname];\n            path = !state ? path : path.filter(propEq('state', state));\n            return path\n                .map(prop('views'))\n                .filter(identity)\n                .reduce(unnestR, []);\n        };\n        Transition.prototype.treeChanges = function (pathname) {\n            return pathname ? this._treeChanges[pathname] : this._treeChanges;\n        };\n        /**\n         * Creates a new transition that is a redirection of the current one.\n         *\n         * This transition can be returned from a [[TransitionService]] hook to\n         * redirect a transition to a new state and/or set of parameters.\n         *\n         * @internalapi\n         *\n         * @returns Returns a new [[Transition]] instance.\n         */\n        Transition.prototype.redirect = function (targetState) {\n            var redirects = 1, trans = this;\n            // tslint:disable-next-line:no-conditional-assignment\n            while ((trans = trans.redirectedFrom()) != null) {\n                if (++redirects > 20)\n                    throw new Error(\"Too many consecutive Transition redirects (20+)\");\n            }\n            var redirectOpts = { redirectedFrom: this, source: 'redirect' };\n            // If the original transition was caused by URL sync, then use { location: 'replace' }\n            // on the new transition (unless the target state explicitly specifies location: false).\n            // This causes the original url to be replaced with the url for the redirect target\n            // so the original url disappears from the browser history.\n            if (this.options().source === 'url' && targetState.options().location !== false) {\n                redirectOpts.location = 'replace';\n            }\n            var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n            targetState = targetState.withOptions(newOptions, true);\n            var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n            var originalEnteringNodes = this._treeChanges.entering;\n            var redirectEnteringNodes = newTransition._treeChanges.entering;\n            // --- Re-use resolve data from original transition ---\n            // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n            // (because of the redirect), the resolves fetched by the original transition are still valid in the\n            // redirected transition.\n            //\n            // This allows you to define a redirect on a parent state which depends on an async resolve value.\n            // You can wait for the resolve, then redirect to a child state based on the result.\n            // The redirected transition does not have to re-fetch the resolve.\n            // ---------------------------------------------------------\n            var nodeIsReloading = function (reloadState) { return function (node) {\n                return reloadState && node.state.includes[reloadState.name];\n            }; };\n            // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n            var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams).filter(not(nodeIsReloading(targetState.options().reloadState)));\n            // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n            matchingEnteringNodes.forEach(function (node, idx) {\n                node.resolvables = originalEnteringNodes[idx].resolvables;\n            });\n            return newTransition;\n        };\n        /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n        Transition.prototype._changedParams = function () {\n            var tc = this._treeChanges;\n            /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n            // If user explicitly wants a reload\n            if (this._options.reload)\n                return undefined;\n            // If any states are exiting or entering\n            if (tc.exiting.length || tc.entering.length)\n                return undefined;\n            // If to/from path lengths differ\n            if (tc.to.length !== tc.from.length)\n                return undefined;\n            // If the to/from paths are different\n            var pathsDiffer = arrayTuples(tc.to, tc.from)\n                .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n                .reduce(anyTrueR, false);\n            if (pathsDiffer)\n                return undefined;\n            // Find any parameter values that differ\n            var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n            var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n            var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n            return tuples.map(function (_a) {\n                var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n                return Param.changed(schema, toVals, fromVals);\n            }).reduce(unnestR, []);\n        };\n        /**\n         * Returns true if the transition is dynamic.\n         *\n         * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n         *\n         * @returns true if the Transition is dynamic\n         */\n        Transition.prototype.dynamic = function () {\n            var changes = this._changedParams();\n            return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n        };\n        /**\n         * Returns true if the transition is ignored.\n         *\n         * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n         *\n         * @returns true if the Transition is ignored.\n         */\n        Transition.prototype.ignored = function () {\n            return !!this._ignoredReason();\n        };\n        /** @hidden */\n        Transition.prototype._ignoredReason = function () {\n            var pending = this.router.globals.transition;\n            var reloadState = this._options.reloadState;\n            var same = function (pathA, pathB) {\n                if (pathA.length !== pathB.length)\n                    return false;\n                var matching = PathUtils.matching(pathA, pathB);\n                return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n            };\n            var newTC = this.treeChanges();\n            var pendTC = pending && pending.treeChanges();\n            if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n                return 'SameAsPending';\n            if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n                return 'SameAsCurrent';\n        };\n        /**\n         * Runs the transition\n         *\n         * This method is generally called from the [[StateService.transitionTo]]\n         *\n         * @internalapi\n         *\n         * @returns a promise for a successful transition.\n         */\n        Transition.prototype.run = function () {\n            var _this = this;\n            var runAllHooks = TransitionHook.runAllHooks;\n            // Gets transition hooks array for the given phase\n            var getHooksFor = function (phase) { return _this._hookBuilder.buildHooksForPhase(phase); };\n            // When the chain is complete, then resolve or reject the deferred\n            var transitionSuccess = function () {\n                trace.traceSuccess(_this.$to(), _this);\n                _this.success = true;\n                _this._deferred.resolve(_this.to());\n                runAllHooks(getHooksFor(exports.TransitionHookPhase.SUCCESS));\n            };\n            var transitionError = function (reason) {\n                trace.traceError(reason, _this);\n                _this.success = false;\n                _this._deferred.reject(reason);\n                _this._error = reason;\n                runAllHooks(getHooksFor(exports.TransitionHookPhase.ERROR));\n            };\n            var runTransition = function () {\n                // Wait to build the RUN hook chain until the BEFORE hooks are done\n                // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n                var allRunHooks = getHooksFor(exports.TransitionHookPhase.RUN);\n                var done = function () { return services.$q.when(undefined); };\n                return TransitionHook.invokeHooks(allRunHooks, done);\n            };\n            var startTransition = function () {\n                var globals = _this.router.globals;\n                globals.lastStartedTransitionId = _this.$id;\n                globals.transition = _this;\n                globals.transitionHistory.enqueue(_this);\n                trace.traceTransitionStart(_this);\n                return services.$q.when(undefined);\n            };\n            var allBeforeHooks = getHooksFor(exports.TransitionHookPhase.BEFORE);\n            TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n                .then(runTransition)\n                .then(transitionSuccess, transitionError);\n            return this.promise;\n        };\n        /**\n         * Checks if the Transition is valid\n         *\n         * @returns true if the Transition is valid\n         */\n        Transition.prototype.valid = function () {\n            return !this.error() || this.success !== undefined;\n        };\n        /**\n         * Aborts this transition\n         *\n         * Imperative API to abort a Transition.\n         * This only applies to Transitions that are not yet complete.\n         */\n        Transition.prototype.abort = function () {\n            // Do not set flag if the transition is already complete\n            if (isUndefined(this.success)) {\n                this._aborted = true;\n            }\n        };\n        /**\n         * The Transition error reason.\n         *\n         * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n         * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n         *\n         * @returns a transition rejection explaining why the transition is invalid, or the reason the transition failed.\n         */\n        Transition.prototype.error = function () {\n            var state = this.$to();\n            if (state.self.abstract) {\n                return Rejection.invalid(\"Cannot transition to abstract state '\" + state.name + \"'\");\n            }\n            var paramDefs = state.parameters();\n            var values$$1 = this.params();\n            var invalidParams = paramDefs.filter(function (param) { return !param.validates(values$$1[param.id]); });\n            if (invalidParams.length) {\n                var invalidValues = invalidParams.map(function (param) { return \"[\" + param.id + \":\" + stringify(values$$1[param.id]) + \"]\"; }).join(', ');\n                var detail = \"The following parameter values are not valid for state '\" + state.name + \"': \" + invalidValues;\n                return Rejection.invalid(detail);\n            }\n            if (this.success === false)\n                return this._error;\n        };\n        /**\n         * A string representation of the Transition\n         *\n         * @returns A string representation of the Transition\n         */\n        Transition.prototype.toString = function () {\n            var fromStateOrName = this.from();\n            var toStateOrName = this.to();\n            var avoidEmptyHash = function (params) {\n                return params['#'] !== null && params['#'] !== undefined ? params : omit(params, ['#']);\n            };\n            // (X) means the to state is invalid.\n            var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = stringify(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? '' : '(X) ', to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = stringify(avoidEmptyHash(this.params()));\n            return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n        };\n        /** @hidden */\n        Transition.diToken = Transition;\n        return Transition;\n    }());\n\n    /** @publicapi @module url */ /** */\n    /** @hidden */\n    function quoteRegExp(str, param) {\n        var surroundPattern = ['', ''], result = str.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, '\\\\$&');\n        if (!param)\n            return result;\n        switch (param.squash) {\n            case false:\n                surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n                break;\n            case true:\n                result = result.replace(/\\/$/, '');\n                surroundPattern = ['(?:/(', ')|/)?'];\n                break;\n            default:\n                surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n                break;\n        }\n        return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n    }\n    /** @hidden */\n    var memoizeTo = function (obj, _prop, fn) { return (obj[_prop] = obj[_prop] || fn()); };\n    /** @hidden */\n    var splitOnSlash = splitOnDelim('/');\n    /** @hidden */\n    var defaultConfig = {\n        state: { params: {} },\n        strict: true,\n        caseInsensitive: true,\n    };\n    /**\n     * Matches URLs against patterns.\n     *\n     * Matches URLs against patterns and extracts named parameters from the path or the search\n     * part of the URL.\n     *\n     * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n     * parameters. Multiple search parameter names are separated by '&'. Search parameters\n     * do not influence whether or not a URL is matched, but their values are passed through into\n     * the matched parameters returned by [[UrlMatcher.exec]].\n     *\n     * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n     * or colon placeholders (`/somePath/:param`).\n     *\n     * - *A parameter RegExp* may be defined for a param after a colon\n     * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n     * The regexp must match for the url to be matched.\n     * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n     *\n     * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n     *\n     * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n     *   See [[UrlMatcherFactory.type]] for more information.\n     *\n     * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n     *   A catch-all * parameter value will contain the remainder of the URL.\n     *\n     * ---\n     *\n     * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n     * must be unique within the pattern (across both path and search parameters).\n     * A path parameter matches any number of characters other than '/'. For catch-all\n     * placeholders the path parameter matches any number of characters.\n     *\n     * Examples:\n     *\n     * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n     *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n     * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n     *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n     * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n     * * `'/user/{id:[^/]*}'` - Same as the previous example.\n     * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n     *   parameter consists of 1 to 8 hex digits.\n     * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n     *   path into the parameter 'path'.\n     * * `'/files/*path'` - ditto.\n     * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n     *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n     *\n     */\n    var UrlMatcher = /** @class */ (function () {\n        /**\n         * @param pattern The pattern to compile into a matcher.\n         * @param paramTypes The [[ParamTypes]] registry\n         * @param paramFactory A [[ParamFactory]] object\n         * @param config  A [[UrlMatcherCompileConfig]] configuration object\n         */\n        function UrlMatcher(pattern$$1, paramTypes, paramFactory, config) {\n            var _this = this;\n            /** @hidden */\n            this._cache = { path: [this] };\n            /** @hidden */\n            this._children = [];\n            /** @hidden */\n            this._params = [];\n            /** @hidden */\n            this._segments = [];\n            /** @hidden */\n            this._compiled = [];\n            this.config = config = defaults(config, defaultConfig);\n            this.pattern = pattern$$1;\n            // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n            //   '*' name\n            //   ':' name\n            //   '{' name '}'\n            //   '{' name ':' regexp '}'\n            // The regular expression is somewhat complicated due to the need to allow curly braces\n            // inside the regular expression. The placeholder regexp breaks down as follows:\n            //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n            //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n            //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n            //    [^{}\\\\]+                       - anything other than curly braces or backslash\n            //    \\\\.                            - a backslash escape\n            //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n            var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n            var searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n            var patterns = [];\n            var last = 0;\n            var matchArray;\n            var checkParamErrors = function (id) {\n                if (!UrlMatcher.nameValidator.test(id))\n                    throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern$$1 + \"'\");\n                if (find(_this._params, propEq('id', id)))\n                    throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern$$1 + \"'\");\n            };\n            // Split into static segments separated by path parameter placeholders.\n            // The number of segments is always 1 more than the number of parameters.\n            var matchDetails = function (m, isSearch) {\n                // IE[78] returns '' for unmatched groups instead of null\n                var id = m[2] || m[3];\n                var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n                var makeRegexpType = function (str) {\n                    return inherit(paramTypes.type(isSearch ? 'query' : 'path'), {\n                        pattern: new RegExp(str, _this.config.caseInsensitive ? 'i' : undefined),\n                    });\n                };\n                return {\n                    id: id,\n                    regexp: regexp,\n                    segment: pattern$$1.substring(last, m.index),\n                    type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp),\n                };\n            };\n            var details;\n            var segment;\n            // tslint:disable-next-line:no-conditional-assignment\n            while ((matchArray = placeholder.exec(pattern$$1))) {\n                details = matchDetails(matchArray, false);\n                if (details.segment.indexOf('?') >= 0)\n                    break; // we're into the search part\n                checkParamErrors(details.id);\n                this._params.push(paramFactory.fromPath(details.id, details.type, config.state));\n                this._segments.push(details.segment);\n                patterns.push([details.segment, tail(this._params)]);\n                last = placeholder.lastIndex;\n            }\n            segment = pattern$$1.substring(last);\n            // Find any search parameter names and remove them from the last segment\n            var i = segment.indexOf('?');\n            if (i >= 0) {\n                var search = segment.substring(i);\n                segment = segment.substring(0, i);\n                if (search.length > 0) {\n                    last = 0;\n                    // tslint:disable-next-line:no-conditional-assignment\n                    while ((matchArray = searchPlaceholder.exec(search))) {\n                        details = matchDetails(matchArray, true);\n                        checkParamErrors(details.id);\n                        this._params.push(paramFactory.fromSearch(details.id, details.type, config.state));\n                        last = placeholder.lastIndex;\n                        // check if ?&\n                    }\n                }\n            }\n            this._segments.push(segment);\n            this._compiled = patterns.map(function (_pattern) { return quoteRegExp.apply(null, _pattern); }).concat(quoteRegExp(segment));\n        }\n        /** @hidden */\n        UrlMatcher.encodeDashes = function (str) {\n            // Replace dashes with encoded \"\\-\"\n            return encodeURIComponent(str).replace(/-/g, function (c) {\n                return \"%5C%\" + c\n                    .charCodeAt(0)\n                    .toString(16)\n                    .toUpperCase();\n            });\n        };\n        /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n        UrlMatcher.pathSegmentsAndParams = function (matcher) {\n            var staticSegments = matcher._segments;\n            var pathParams = matcher._params.filter(function (p) { return p.location === exports.DefType.PATH; });\n            return arrayTuples(staticSegments, pathParams.concat(undefined))\n                .reduce(unnestR, [])\n                .filter(function (x) { return x !== '' && isDefined(x); });\n        };\n        /** @hidden Given a matcher, return an array with the matcher's query params */\n        UrlMatcher.queryParams = function (matcher) {\n            return matcher._params.filter(function (p) { return p.location === exports.DefType.SEARCH; });\n        };\n        /**\n         * Compare two UrlMatchers\n         *\n         * This comparison function converts a UrlMatcher into static and dynamic path segments.\n         * Each static path segment is a static string between a path separator (slash character).\n         * Each dynamic segment is a path parameter.\n         *\n         * The comparison function sorts static segments before dynamic ones.\n         */\n        UrlMatcher.compare = function (a, b) {\n            /**\n             * Turn a UrlMatcher and all its parent matchers into an array\n             * of slash literals '/', string literals, and Param objects\n             *\n             * This example matcher matches strings like \"/foo/:param/tail\":\n             * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n             * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n             *\n             * Caches the result as `matcher._cache.segments`\n             */\n            var segments = function (matcher) {\n                return (matcher._cache.segments =\n                    matcher._cache.segments ||\n                        matcher._cache.path\n                            .map(UrlMatcher.pathSegmentsAndParams)\n                            .reduce(unnestR, [])\n                            .reduce(joinNeighborsR, [])\n                            .map(function (x) { return (isString(x) ? splitOnSlash(x) : x); })\n                            .reduce(unnestR, []));\n            };\n            /**\n             * Gets the sort weight for each segment of a UrlMatcher\n             *\n             * Caches the result as `matcher._cache.weights`\n             */\n            var weights = function (matcher) {\n                return (matcher._cache.weights =\n                    matcher._cache.weights ||\n                        segments(matcher).map(function (segment) {\n                            // Sort slashes first, then static strings, the Params\n                            if (segment === '/')\n                                return 1;\n                            if (isString(segment))\n                                return 2;\n                            if (segment instanceof Param)\n                                return 3;\n                        }));\n            };\n            /**\n             * Pads shorter array in-place (mutates)\n             */\n            var padArrays = function (l, r, padVal) {\n                var len = Math.max(l.length, r.length);\n                while (l.length < len)\n                    l.push(padVal);\n                while (r.length < len)\n                    r.push(padVal);\n            };\n            var weightsA = weights(a), weightsB = weights(b);\n            padArrays(weightsA, weightsB, 0);\n            var _pairs = arrayTuples(weightsA, weightsB);\n            var cmp, i;\n            for (i = 0; i < _pairs.length; i++) {\n                cmp = _pairs[i][0] - _pairs[i][1];\n                if (cmp !== 0)\n                    return cmp;\n            }\n            return 0;\n        };\n        /**\n         * Creates a new concatenated UrlMatcher\n         *\n         * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n         *\n         * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n         */\n        UrlMatcher.prototype.append = function (url) {\n            this._children.push(url);\n            url._cache = {\n                path: this._cache.path.concat(url),\n                parent: this,\n                pattern: null,\n            };\n            return url;\n        };\n        /** @hidden */\n        UrlMatcher.prototype.isRoot = function () {\n            return this._cache.path[0] === this;\n        };\n        /** Returns the input pattern string */\n        UrlMatcher.prototype.toString = function () {\n            return this.pattern;\n        };\n        /**\n         * Tests the specified url/path against this matcher.\n         *\n         * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n         * parameter values.  Returns null if the path does not match.\n         *\n         * The returned object contains the values\n         * of any search parameters that are mentioned in the pattern, but their value may be null if\n         * they are not present in `search`. This means that search parameters are always treated\n         * as optional.\n         *\n         * #### Example:\n         * ```js\n         * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n         *   x: '1', q: 'hello'\n         * });\n         * // returns { id: 'bob', q: 'hello', r: null }\n         * ```\n         *\n         * @param path    The URL path to match, e.g. `$location.path()`.\n         * @param search  URL search parameters, e.g. `$location.search()`.\n         * @param hash    URL hash e.g. `$location.hash()`.\n         * @param options\n         *\n         * @returns The captured parameter values.\n         */\n        UrlMatcher.prototype.exec = function (path, search, hash, options) {\n            var _this = this;\n            if (search === void 0) { search = {}; }\n            if (options === void 0) { options = {}; }\n            var match = memoizeTo(this._cache, 'pattern', function () {\n                return new RegExp([\n                    '^',\n                    unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                    _this.config.strict === false ? '/?' : '',\n                    '$',\n                ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n            }).exec(path);\n            if (!match)\n                return null;\n            // options = defaults(options, { isolate: false });\n            var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values$$1 = {};\n            if (nPathSegments !== match.length - 1)\n                throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n            function decodePathArray(paramVal) {\n                var reverseString = function (str) {\n                    return str\n                        .split('')\n                        .reverse()\n                        .join('');\n                };\n                var unquoteDashes = function (str) { return str.replace(/\\\\-/g, '-'); };\n                var split = reverseString(paramVal).split(/-(?!\\\\)/);\n                var allReversed = map(split, reverseString);\n                return map(allReversed, unquoteDashes).reverse();\n            }\n            for (var i = 0; i < nPathSegments; i++) {\n                var param = pathParams[i];\n                var value = match[i + 1];\n                // if the param value matches a pre-replace pair, replace the value before decoding.\n                for (var j = 0; j < param.replace.length; j++) {\n                    if (param.replace[j].from === value)\n                        value = param.replace[j].to;\n                }\n                if (value && param.array === true)\n                    value = decodePathArray(value);\n                if (isDefined(value))\n                    value = param.type.decode(value);\n                values$$1[param.id] = param.value(value);\n            }\n            searchParams.forEach(function (param) {\n                var value = search[param.id];\n                for (var j = 0; j < param.replace.length; j++) {\n                    if (param.replace[j].from === value)\n                        value = param.replace[j].to;\n                }\n                if (isDefined(value))\n                    value = param.type.decode(value);\n                values$$1[param.id] = param.value(value);\n            });\n            if (hash)\n                values$$1['#'] = hash;\n            return values$$1;\n        };\n        /**\n         * @hidden\n         * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n         *\n         * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n         *    pattern has no parameters, an empty array is returned.\n         */\n        UrlMatcher.prototype.parameters = function (opts) {\n            if (opts === void 0) { opts = {}; }\n            if (opts.inherit === false)\n                return this._params;\n            return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n        };\n        /**\n         * @hidden\n         * Returns a single parameter from this UrlMatcher by id\n         *\n         * @param id\n         * @param opts\n         * @returns {T|Param|any|boolean|UrlMatcher|null}\n         */\n        UrlMatcher.prototype.parameter = function (id, opts) {\n            var _this = this;\n            if (opts === void 0) { opts = {}; }\n            var findParam = function () {\n                for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                    var param = _a[_i];\n                    if (param.id === id)\n                        return param;\n                }\n            };\n            var parent = this._cache.parent;\n            return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n        };\n        /**\n         * Validates the input parameter values against this UrlMatcher\n         *\n         * Checks an object hash of parameters to validate their correctness according to the parameter\n         * types of this `UrlMatcher`.\n         *\n         * @param params The object hash of parameters to validate.\n         * @returns Returns `true` if `params` validates, otherwise `false`.\n         */\n        UrlMatcher.prototype.validates = function (params) {\n            var validParamVal = function (param, val$$1) { return !param || param.validates(val$$1); };\n            params = params || {};\n            // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n            var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n            return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n        };\n        /**\n         * Given a set of parameter values, creates a URL from this UrlMatcher.\n         *\n         * Creates a URL that matches this pattern by substituting the specified values\n         * for the path and search parameters.\n         *\n         * #### Example:\n         * ```js\n         * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n         * // returns '/user/bob?q=yes'\n         * ```\n         *\n         * @param values  the values to substitute for the parameters in this pattern.\n         * @returns the formatted URL (path and optionally search part).\n         */\n        UrlMatcher.prototype.format = function (values$$1) {\n            if (values$$1 === void 0) { values$$1 = {}; }\n            // Build the full path of UrlMatchers (including all parent UrlMatchers)\n            var urlMatchers = this._cache.path;\n            // Extract all the static segments and Params (processed as ParamDetails)\n            // into an ordered array\n            var pathSegmentsAndParams = urlMatchers\n                .map(UrlMatcher.pathSegmentsAndParams)\n                .reduce(unnestR, [])\n                .map(function (x) { return (isString(x) ? x : getDetails(x)); });\n            // Extract the query params into a separate array\n            var queryParams = urlMatchers\n                .map(UrlMatcher.queryParams)\n                .reduce(unnestR, [])\n                .map(getDetails);\n            var isInvalid = function (param) { return param.isValid === false; };\n            if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n                return null;\n            }\n            /**\n             * Given a Param, applies the parameter value, then returns detailed information about it\n             */\n            function getDetails(param) {\n                // Normalize to typed value\n                var value = param.value(values$$1[param.id]);\n                var isValid = param.validates(value);\n                var isDefaultValue = param.isDefaultValue(value);\n                // Check if we're in squash mode for the parameter\n                var squash = isDefaultValue ? param.squash : false;\n                // Allow the Parameter's Type to encode the value\n                var encoded = param.type.encode(value);\n                return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n            }\n            // Build up the path-portion from the list of static segments and parameters\n            var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n                // The element is a static segment (a raw string); just append it\n                if (isString(x))\n                    return acc + x;\n                // Otherwise, it's a ParamDetails.\n                var squash = x.squash, encoded = x.encoded, param = x.param;\n                // If squash is === true, try to remove a slash from the path\n                if (squash === true)\n                    return acc.match(/\\/$/) ? acc.slice(0, -1) : acc;\n                // If squash is a string, use the string for the param value\n                if (isString(squash))\n                    return acc + squash;\n                if (squash !== false)\n                    return acc; // ?\n                if (encoded == null)\n                    return acc;\n                // If this parameter value is an array, encode the value using encodeDashes\n                if (isArray(encoded))\n                    return acc + map(encoded, UrlMatcher.encodeDashes).join('-');\n                // If the parameter type is \"raw\", then do not encodeURIComponent\n                if (param.raw)\n                    return acc + encoded;\n                // Encode the value\n                return acc + encodeURIComponent(encoded);\n            }, '');\n            // Build the query string by applying parameter values (array or regular)\n            // then mapping to key=value, then flattening and joining using \"&\"\n            var queryString = queryParams\n                .map(function (paramDetails) {\n                var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n                if (encoded == null || (isDefaultValue && squash !== false))\n                    return;\n                if (!isArray(encoded))\n                    encoded = [encoded];\n                if (encoded.length === 0)\n                    return;\n                if (!param.raw)\n                    encoded = map(encoded, encodeURIComponent);\n                return encoded.map(function (val$$1) { return param.id + \"=\" + val$$1; });\n            })\n                .filter(identity)\n                .reduce(unnestR, [])\n                .join('&');\n            // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n            return pathString + (queryString ? \"?\" + queryString : '') + (values$$1['#'] ? '#' + values$$1['#'] : '');\n        };\n        /** @hidden */\n        UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n        return UrlMatcher;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || function () {\n        __assign = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    /** @internalapi */\n    var ParamFactory = /** @class */ (function () {\n        function ParamFactory(router) {\n            this.router = router;\n        }\n        ParamFactory.prototype.fromConfig = function (id, type, state) {\n            return new Param(id, type, exports.DefType.CONFIG, this.router.urlService.config, state);\n        };\n        ParamFactory.prototype.fromPath = function (id, type, state) {\n            return new Param(id, type, exports.DefType.PATH, this.router.urlService.config, state);\n        };\n        ParamFactory.prototype.fromSearch = function (id, type, state) {\n            return new Param(id, type, exports.DefType.SEARCH, this.router.urlService.config, state);\n        };\n        return ParamFactory;\n    }());\n    /**\n     * Factory for [[UrlMatcher]] instances.\n     *\n     * The factory is available to ng1 services as\n     * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n     *\n     * @internalapi\n     */\n    var UrlMatcherFactory = /** @class */ (function () {\n        // TODO: move implementations to UrlConfig (urlService.config)\n        function UrlMatcherFactory(/** @hidden */ router) {\n            var _this = this;\n            this.router = router;\n            /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n            this.paramFactory = new ParamFactory(this.router);\n            /** @deprecated use [[UrlConfig.caseInsensitive]] */\n            this.caseInsensitive = function (value) { return _this.router.urlService.config.caseInsensitive(value); };\n            /** @deprecated use [[UrlConfig.defaultSquashPolicy]] */\n            this.defaultSquashPolicy = function (value) { return _this.router.urlService.config.defaultSquashPolicy(value); };\n            /** @deprecated use [[UrlConfig.strictMode]] */\n            this.strictMode = function (value) { return _this.router.urlService.config.strictMode(value); };\n            /** @deprecated use [[UrlConfig.type]] */\n            this.type = function (name, definition, definitionFn) {\n                return _this.router.urlService.config.type(name, definition, definitionFn) || _this;\n            };\n            extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n        }\n        /**\n         * Creates a [[UrlMatcher]] for the specified pattern.\n         *\n         * @param pattern  The URL pattern.\n         * @param config  The config object hash.\n         * @returns The UrlMatcher.\n         */\n        UrlMatcherFactory.prototype.compile = function (pattern$$1, config) {\n            var urlConfig = this.router.urlService.config;\n            // backward-compatible support for config.params -> config.state.params\n            var params = config && !config.state && config.params;\n            config = params ? __assign({ state: { params: params } }, config) : config;\n            var globalConfig = { strict: urlConfig._isStrictMode, caseInsensitive: urlConfig._isCaseInsensitive };\n            return new UrlMatcher(pattern$$1, urlConfig.paramTypes, this.paramFactory, extend(globalConfig, config));\n        };\n        /**\n         * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n         *\n         * @param object  The object to perform the type check against.\n         * @returns `true` if the object matches the `UrlMatcher` interface, by\n         *          implementing all the same methods.\n         */\n        UrlMatcherFactory.prototype.isMatcher = function (object) {\n            // TODO: typeof?\n            if (!isObject(object))\n                return false;\n            var result = true;\n            forEach(UrlMatcher.prototype, function (val$$1, name) {\n                if (isFunction(val$$1))\n                    result = result && (isDefined(object[name]) && isFunction(object[name]));\n            });\n            return result;\n        };\n        /** @hidden */\n        UrlMatcherFactory.prototype.$get = function () {\n            var urlConfig = this.router.urlService.config;\n            urlConfig.paramTypes.enqueue = false;\n            urlConfig.paramTypes._flushTypeQueue();\n            return this;\n        };\n        return UrlMatcherFactory;\n    }());\n\n    /** @publicapi @module url */ /** */\n    /**\n     * Creates a [[UrlRule]]\n     *\n     * Creates a [[UrlRule]] from a:\n     *\n     * - `string`\n     * - [[UrlMatcher]]\n     * - `RegExp`\n     * - [[StateObject]]\n     * @internalapi\n     */\n    var UrlRuleFactory = /** @class */ (function () {\n        function UrlRuleFactory(router) {\n            this.router = router;\n        }\n        UrlRuleFactory.prototype.compile = function (str) {\n            return this.router.urlMatcherFactory.compile(str);\n        };\n        UrlRuleFactory.prototype.create = function (what, handler) {\n            var _this = this;\n            var isState = StateObject.isState;\n            var makeRule = pattern([\n                [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n                [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n                [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n                [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n                [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n            ]);\n            var rule = makeRule(what);\n            if (!rule)\n                throw new Error(\"invalid 'what' in when()\");\n            return rule;\n        };\n        /**\n         * A UrlRule which matches based on a UrlMatcher\n         *\n         * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n         *\n         * ## Handler as a function\n         *\n         * If `handler` is a function, the function is invoked with:\n         *\n         * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n         * - url: the current Url ([[UrlParts]])\n         * - router: the router object ([[UIRouter]])\n         *\n         * #### Example:\n         * ```js\n         * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n         * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n         * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n         * var result = rule.handler(match); // '/home/123/456'\n         * ```\n         *\n         * ## Handler as UrlMatcher\n         *\n         * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n         * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n         * The url is replaced with the result.\n         *\n         * #### Example:\n         * ```js\n         * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n         * var handler = $umf.compile(\"/home/:fooId/:barId\");\n         * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n         * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n         * var result = rule.handler(match); // '/home/123/456'\n         * ```\n         */\n        UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n            var _handler = handler;\n            if (isString(handler))\n                handler = this.router.urlMatcherFactory.compile(handler);\n            if (is(UrlMatcher)(handler))\n                _handler = function (match) { return handler.format(match); };\n            function matchUrlParamters(url) {\n                var params = urlMatcher.exec(url.path, url.search, url.hash);\n                return urlMatcher.validates(params) && params;\n            }\n            // Prioritize URLs, lowest to highest:\n            // - Some optional URL parameters, but none matched\n            // - No optional parameters in URL\n            // - Some optional parameters, some matched\n            // - Some optional parameters, all matched\n            function matchPriority(params) {\n                var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n                if (!optional.length)\n                    return 0.000001;\n                var matched = optional.filter(function (param) { return params[param.id]; });\n                return matched.length / optional.length;\n            }\n            var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: 'URLMATCHER' };\n            return extend(new BaseUrlRule(matchUrlParamters, _handler), details);\n        };\n        /**\n         * A UrlRule which matches a state by its url\n         *\n         * #### Example:\n         * ```js\n         * var rule = factory.fromState($state.get('foo'), router);\n         * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n         * var result = rule.handler(match);\n         * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n         * ```\n         */\n        UrlRuleFactory.prototype.fromState = function (state, router) {\n            /**\n             * Handles match by transitioning to matched state\n             *\n             * First checks if the router should start a new transition.\n             * A new transition is not required if the current state's URL\n             * and the new URL are already identical\n             */\n            var handler = function (match) {\n                var $state = router.stateService;\n                var globals = router.globals;\n                if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                    $state.transitionTo(state, match, { inherit: true, source: 'url' });\n                }\n            };\n            var details = { state: state, type: 'STATE' };\n            return extend(this.fromUrlMatcher(state.url, handler), details);\n        };\n        /**\n         * A UrlRule which matches based on a regular expression\n         *\n         * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n         *\n         * ## Handler as a function\n         *\n         * If `handler` is a function, the function is invoked with:\n         *\n         * - regexp match array (from `regexp`)\n         * - url: the current Url ([[UrlParts]])\n         * - router: the router object ([[UIRouter]])\n         *\n         * #### Example:\n         * ```js\n         * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n         * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n         * var result = rule.handler(match); // '/home/bar'\n         * ```\n         *\n         * ## Handler as string\n         *\n         * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n         * The string is first interpolated using `string.replace()` style pattern.\n         *\n         * #### Example:\n         * ```js\n         * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n         * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n         * var result = rule.handler(match); // '/home/bar'\n         * ```\n         */\n        UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n            if (regexp.global || regexp.sticky)\n                throw new Error('Rule RegExp must not be global or sticky');\n            /**\n             * If handler is a string, the url will be replaced by the string.\n             * If the string has any String.replace() style variables in it (like `$2`),\n             * they will be replaced by the captures from [[match]]\n             */\n            var redirectUrlTo = function (match) {\n                // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n                return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) { return match[what === '$' ? 0 : Number(what)]; });\n            };\n            var _handler = isString(handler) ? redirectUrlTo : handler;\n            var matchParamsFromRegexp = function (url) { return regexp.exec(url.path); };\n            var details = { regexp: regexp, type: 'REGEXP' };\n            return extend(new BaseUrlRule(matchParamsFromRegexp, _handler), details);\n        };\n        UrlRuleFactory.isUrlRule = function (obj) { return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); }); };\n        return UrlRuleFactory;\n    }());\n    /**\n     * A base rule which calls `match`\n     *\n     * The value from the `match` function is passed through to the `handler`.\n     * @internalapi\n     */\n    var BaseUrlRule = /** @class */ (function () {\n        function BaseUrlRule(match, handler) {\n            var _this = this;\n            this.match = match;\n            this.type = 'RAW';\n            this.matchPriority = function (match) { return 0 - _this.$id; };\n            this.handler = handler || identity;\n        }\n        return BaseUrlRule;\n    }());\n\n    /** @publicapi @module url */ /** */\n    /** @hidden */\n    function appendBasePath(url, isHtml5, absolute, baseHref) {\n        if (baseHref === '/')\n            return url;\n        if (isHtml5)\n            return stripLastPathElement(baseHref) + url;\n        if (absolute)\n            return baseHref.slice(1) + url;\n        return url;\n    }\n    /**\n     * Updates URL and responds to URL changes\n     *\n     * ### Deprecation warning:\n     * This class is now considered to be an internal API\n     * Use the [[UrlService]] instead.\n     * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n     *\n     * @internalapi\n     */\n    var UrlRouter = /** @class */ (function () {\n        /** @hidden */\n        function UrlRouter(/** @hidden */ router) {\n            var _this = this;\n            this.router = router;\n            // Delegate these calls to [[UrlService]]\n            /** @deprecated use [[UrlService.sync]]*/\n            this.sync = function (evt) { return _this.router.urlService.sync(evt); };\n            /** @deprecated use [[UrlService.listen]]*/\n            this.listen = function (enabled) { return _this.router.urlService.listen(enabled); };\n            /** @deprecated use [[UrlService.deferIntercept]]*/\n            this.deferIntercept = function (defer) { return _this.router.urlService.deferIntercept(defer); };\n            /** @deprecated use [[UrlService.match]]*/\n            this.match = function (urlParts) { return _this.router.urlService.match(urlParts); };\n            // Delegate these calls to [[UrlRules]]\n            /** @deprecated use [[UrlRules.initial]]*/\n            this.initial = function (handler) {\n                return _this.router.urlService.rules.initial(handler);\n            };\n            /** @deprecated use [[UrlRules.otherwise]]*/\n            this.otherwise = function (handler) {\n                return _this.router.urlService.rules.otherwise(handler);\n            };\n            /** @deprecated use [[UrlRules.removeRule]]*/\n            this.removeRule = function (rule) { return _this.router.urlService.rules.removeRule(rule); };\n            /** @deprecated use [[UrlRules.rule]]*/\n            this.rule = function (rule) { return _this.router.urlService.rules.rule(rule); };\n            /** @deprecated use [[UrlRules.rules]]*/\n            this.rules = function () { return _this.router.urlService.rules.rules(); };\n            /** @deprecated use [[UrlRules.sort]]*/\n            this.sort = function (compareFn) { return _this.router.urlService.rules.sort(compareFn); };\n            /** @deprecated use [[UrlRules.when]]*/\n            this.when = function (matcher, handler, options) { return _this.router.urlService.rules.when(matcher, handler, options); };\n            this.urlRuleFactory = new UrlRuleFactory(router);\n        }\n        /**\n         * Internal API.\n         * @internalapi\n         */\n        UrlRouter.prototype.update = function (read) {\n            var $url = this.router.locationService;\n            if (read) {\n                this.location = $url.url();\n                return;\n            }\n            if ($url.url() === this.location)\n                return;\n            $url.url(this.location, true);\n        };\n        /**\n         * Internal API.\n         *\n         * Pushes a new location to the browser history.\n         *\n         * @internalapi\n         * @param urlMatcher\n         * @param params\n         * @param options\n         */\n        UrlRouter.prototype.push = function (urlMatcher, params, options) {\n            var replace = options && !!options.replace;\n            this.router.urlService.url(urlMatcher.format(params || {}), replace);\n        };\n        /**\n         * Builds and returns a URL with interpolated parameters\n         *\n         * #### Example:\n         * ```js\n         * matcher = $umf.compile(\"/about/:person\");\n         * params = { person: \"bob\" };\n         * $bob = $urlRouter.href(matcher, params);\n         * // $bob == \"/about/bob\";\n         * ```\n         *\n         * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n         * @param params An object of parameter values to fill the matcher's required parameters.\n         * @param options Options object. The options are:\n         *\n         * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n         *\n         * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n         */\n        UrlRouter.prototype.href = function (urlMatcher, params, options) {\n            var url = urlMatcher.format(params);\n            if (url == null)\n                return null;\n            options = options || { absolute: false };\n            var cfg = this.router.urlService.config;\n            var isHtml5 = cfg.html5Mode();\n            if (!isHtml5 && url !== null) {\n                url = '#' + cfg.hashPrefix() + url;\n            }\n            url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n            if (!options.absolute || !url) {\n                return url;\n            }\n            var slash = !isHtml5 && url ? '/' : '';\n            var cfgPort = cfg.port();\n            var port = (cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n            return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n        };\n        Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n            /** @deprecated use [[UrlService.interceptDeferred]]*/\n            get: function () {\n                return this.router.urlService.interceptDeferred;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return UrlRouter;\n    }());\n\n    /** @publicapi @module view */ /** */\n    /**\n     * The View service\n     *\n     * This service pairs existing `ui-view` components (which live in the DOM)\n     * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n     *\n     * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n     *   The views from exited states are deactivated via [[deactivateViewConfig]].\n     *   (See: the [[registerActivateViews]] Transition Hook)\n     *\n     * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n     *\n     * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n     * are configured with the matching [[ViewConfig]](s)\n     *\n     */\n    var ViewService = /** @class */ (function () {\n        /** @hidden */\n        function ViewService(/** @hidden */ router) {\n            var _this = this;\n            this.router = router;\n            /** @hidden */ this._uiViews = [];\n            /** @hidden */ this._viewConfigs = [];\n            /** @hidden */ this._viewConfigFactories = {};\n            /** @hidden */ this._listeners = [];\n            /** @internalapi */\n            this._pluginapi = {\n                _rootViewContext: this._rootViewContext.bind(this),\n                _viewConfigFactory: this._viewConfigFactory.bind(this),\n                _registeredUIView: function (id) { return find(_this._uiViews, function (view) { return _this.router.$id + \".\" + view.id === id; }); },\n                _registeredUIViews: function () { return _this._uiViews; },\n                _activeViewConfigs: function () { return _this._viewConfigs; },\n                _onSync: function (listener) {\n                    _this._listeners.push(listener);\n                    return function () { return removeFrom(_this._listeners, listener); };\n                },\n            };\n        }\n        /**\n         * Normalizes a view's name from a state.views configuration block.\n         *\n         * This should be used by a framework implementation to calculate the values for\n         * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n         *\n         * @param context the context object (state declaration) that the view belongs to\n         * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n         *\n         * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n         */\n        ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n            if (rawViewName === void 0) { rawViewName = ''; }\n            // TODO: Validate incoming view name with a regexp to allow:\n            // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n            // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n            var viewAtContext = rawViewName.split('@');\n            var uiViewName = viewAtContext[0] || '$default'; // default to unnamed view\n            var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : '^'; // default to parent context\n            // Handle relative view-name sugar syntax.\n            // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n            var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n            if (relativeViewNameSugar) {\n                // Clobbers existing contextAnchor (rawViewName validation will fix this)\n                uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n                uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n            }\n            if (uiViewName.charAt(0) === '!') {\n                uiViewName = uiViewName.substr(1);\n                uiViewContextAnchor = ''; // target absolutely from root\n            }\n            // handle parent relative targeting \"^.^.^\"\n            var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n            if (relativeMatch.exec(uiViewContextAnchor)) {\n                var anchorState = uiViewContextAnchor.split('.').reduce(function (anchor, x) { return anchor.parent; }, context);\n                uiViewContextAnchor = anchorState.name;\n            }\n            else if (uiViewContextAnchor === '.') {\n                uiViewContextAnchor = context.name;\n            }\n            return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n        };\n        /** @hidden */\n        ViewService.prototype._rootViewContext = function (context) {\n            return (this._rootContext = context || this._rootContext);\n        };\n        /** @hidden */\n        ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n            this._viewConfigFactories[viewType] = factory;\n        };\n        ViewService.prototype.createViewConfig = function (path, decl) {\n            var cfgFactory = this._viewConfigFactories[decl.$type];\n            if (!cfgFactory)\n                throw new Error('ViewService: No view config factory registered for type ' + decl.$type);\n            var cfgs = cfgFactory(path, decl);\n            return isArray(cfgs) ? cfgs : [cfgs];\n        };\n        /**\n         * Deactivates a ViewConfig.\n         *\n         * This function deactivates a `ViewConfig`.\n         * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n         *\n         * @param viewConfig The ViewConfig view to deregister.\n         */\n        ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n            trace.traceViewServiceEvent('<- Removing', viewConfig);\n            removeFrom(this._viewConfigs, viewConfig);\n        };\n        ViewService.prototype.activateViewConfig = function (viewConfig) {\n            trace.traceViewServiceEvent('-> Registering', viewConfig);\n            this._viewConfigs.push(viewConfig);\n        };\n        ViewService.prototype.sync = function () {\n            var _this = this;\n            var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n            // Return a weighted depth value for a uiView.\n            // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n            // plus the depth of the state that is populating the uiView\n            function uiViewDepth(uiView) {\n                var stateDepth = function (context) { return (context && context.parent ? stateDepth(context.parent) + 1 : 1); };\n                return uiView.fqn.split('.').length * 10000 + stateDepth(uiView.creationContext);\n            }\n            // Return the ViewConfig's context's depth in the context tree.\n            function viewConfigDepth(config) {\n                var context = config.viewDecl.$context, count = 0;\n                while (++count && context.parent)\n                    context = context.parent;\n                return count;\n            }\n            // Given a depth function, returns a compare function which can return either ascending or descending order\n            var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n            var matchingConfigPair = function (uiView) {\n                var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n                if (matchingConfigs.length > 1) {\n                    // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                    // Sort by depth and return the match from the deepest child\n                    // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                    matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n                }\n                return { uiView: uiView, viewConfig: matchingConfigs[0] };\n            };\n            var configureUIView = function (tuple) {\n                // If a parent ui-view is reconfigured, it could destroy child ui-views.\n                // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n                if (_this._uiViews.indexOf(tuple.uiView) !== -1)\n                    tuple.uiView.configUpdated(tuple.viewConfig);\n            };\n            // Sort views by FQN and state depth. Process uiviews nearest the root first.\n            var uiViewTuples = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n            var matchedViewConfigs = uiViewTuples.map(function (tuple) { return tuple.viewConfig; });\n            var unmatchedConfigTuples = this._viewConfigs\n                .filter(function (config) { return !inArray(matchedViewConfigs, config); })\n                .map(function (viewConfig) { return ({ uiView: undefined, viewConfig: viewConfig }); });\n            uiViewTuples.forEach(configureUIView);\n            var allTuples = uiViewTuples.concat(unmatchedConfigTuples);\n            this._listeners.forEach(function (cb) { return cb(allTuples); });\n            trace.traceViewSync(allTuples);\n        };\n        /**\n         * Registers a `ui-view` component\n         *\n         * When a `ui-view` component is created, it uses this method to register itself.\n         * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n         *\n         * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n         * and what the view's state context is.\n         *\n         * Note: There is no corresponding `deregisterUIView`.\n         *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n         *\n         * @param uiView The metadata for a UIView\n         * @return a de-registration function used when the view is destroyed.\n         */\n        ViewService.prototype.registerUIView = function (uiView) {\n            trace.traceViewServiceUIViewEvent('-> Registering', uiView);\n            var uiViews = this._uiViews;\n            var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n            if (uiViews.filter(fqnAndTypeMatches).length)\n                trace.traceViewServiceUIViewEvent('!!!! duplicate uiView named:', uiView);\n            uiViews.push(uiView);\n            this.sync();\n            return function () {\n                var idx = uiViews.indexOf(uiView);\n                if (idx === -1) {\n                    trace.traceViewServiceUIViewEvent('Tried removing non-registered uiView', uiView);\n                    return;\n                }\n                trace.traceViewServiceUIViewEvent('<- Deregistering', uiView);\n                removeFrom(uiViews)(uiView);\n            };\n        };\n        /**\n         * Returns the list of views currently available on the page, by fully-qualified name.\n         *\n         * @return {Array} Returns an array of fully-qualified view names.\n         */\n        ViewService.prototype.available = function () {\n            return this._uiViews.map(prop('fqn'));\n        };\n        /**\n         * Returns the list of views on the page containing loaded content.\n         *\n         * @return {Array} Returns an array of fully-qualified view names.\n         */\n        ViewService.prototype.active = function () {\n            return this._uiViews.filter(prop('$config')).map(prop('name'));\n        };\n        /**\n         * Given a ui-view and a ViewConfig, determines if they \"match\".\n         *\n         * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n         * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n         *\n         * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n         * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n         *\n         * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n         *\n         * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n         * - the ui-view's name matches the ViewConfig's target name\n         * - the ui-view's context matches the ViewConfig's anchor\n         *\n         * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n         * - There exists a parent ui-view where:\n         *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n         *    - the parent ui-view's context matches the ViewConfig's anchor\n         * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n         *\n         * Example:\n         *\n         * DOM:\n         * <ui-view>                        <!-- created in the root context (name: \"\") -->\n         *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n         *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n         *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n         *       </ui-view>\n         *     </ui-view>\n         *   </ui-view>\n         * </ui-view>\n         *\n         * uiViews: [\n         *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n         *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n         *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n         *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n         * ]\n         *\n         * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n         *\n         * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n         * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n         * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n         * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n         *\n         * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n         * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n         * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n         *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n         *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n         * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n         *   the tail of the ui-view's fqn \"default.bar\"\n         *\n         * @internalapi\n         */\n        ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n            // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n            if (uiView.$type !== viewConfig.viewDecl.$type)\n                return false;\n            // Split names apart from both viewConfig and uiView into segments\n            var vc = viewConfig.viewDecl;\n            var vcSegments = vc.$uiViewName.split('.');\n            var uivSegments = uiView.fqn.split('.');\n            // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n            // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n            if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n                return false;\n            // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n            // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n            var negOffset = 1 - vcSegments.length || undefined;\n            var fqnToFirstSegment = uivSegments.slice(0, negOffset).join('.');\n            var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n            return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n        }; };\n        return ViewService;\n    }());\n\n    /** @publicapi @module core */ /** */\n    /**\n     * Global router state\n     *\n     * This is where we hold the global mutable state such as current state, current\n     * params, current transition, etc.\n     */\n    var UIRouterGlobals = /** @class */ (function () {\n        function UIRouterGlobals() {\n            /**\n             * Current parameter values\n             *\n             * The parameter values from the latest successful transition\n             */\n            this.params = new StateParams();\n            /** @internalapi */\n            this.lastStartedTransitionId = -1;\n            /** @internalapi */\n            this.transitionHistory = new Queue([], 1);\n            /** @internalapi */\n            this.successfulTransitions = new Queue([], 1);\n        }\n        UIRouterGlobals.prototype.dispose = function () {\n            this.transitionHistory.clear();\n            this.successfulTransitions.clear();\n            this.transition = null;\n        };\n        return UIRouterGlobals;\n    }());\n\n    /** @hidden */\n    var prioritySort = function (a, b) { return (b.priority || 0) - (a.priority || 0); };\n    /** @hidden */\n    var typeSort = function (a, b) {\n        var weights = { STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1 };\n        return (weights[a.type] || 0) - (weights[b.type] || 0);\n    };\n    /** @hidden */\n    var urlMatcherSort = function (a, b) {\n        return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n    };\n    /** @hidden */\n    var idSort = function (a, b) {\n        // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n        var useMatchPriority = { STATE: true, URLMATCHER: true };\n        var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n        return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n    };\n    /**\n     * Default rule priority sorting function.\n     *\n     * Sorts rules by:\n     *\n     * - Explicit priority (set rule priority using [[UrlRules.when]])\n     * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n     * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n     * - Rule registration order (for rule types other than STATE and URLMATCHER)\n     *   - Equally sorted State and UrlMatcher rules will each match the URL.\n     *     Then, the *best* match is chosen based on how many parameter values were matched.\n     *\n     * @publicapi\n     */\n    var defaultRuleSortFn;\n    defaultRuleSortFn = function (a, b) {\n        var cmp = prioritySort(a, b);\n        if (cmp !== 0)\n            return cmp;\n        cmp = typeSort(a, b);\n        if (cmp !== 0)\n            return cmp;\n        cmp = urlMatcherSort(a, b);\n        if (cmp !== 0)\n            return cmp;\n        return idSort(a, b);\n    };\n    /** @hidden */\n    function getHandlerFn(handler) {\n        if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n            throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n        }\n        return isFunction(handler) ? handler : val(handler);\n    }\n    /**\n     * API for managing URL rules\n     *\n     * This API is used to create and manage URL rules.\n     * URL rules are a mechanism to respond to specific URL patterns.\n     *\n     * The most commonly used methods are [[otherwise]] and [[when]].\n     *\n     * This API is a property of [[UrlService]] as [[UrlService.rules]]\n     *\n     * @publicapi\n     */\n    var UrlRules = /** @class */ (function () {\n        /** @hidden */\n        function UrlRules(/** @hidden */ router) {\n            this.router = router;\n            /** @hidden */ this._sortFn = defaultRuleSortFn;\n            /** @hidden */ this._rules = [];\n            /** @hidden */ this._id = 0;\n            this.urlRuleFactory = new UrlRuleFactory(router);\n        }\n        /** @hidden */\n        UrlRules.prototype.dispose = function (router) {\n            this._rules = [];\n            delete this._otherwiseFn;\n        };\n        /**\n         * Defines the initial state, path, or behavior to use when the app starts.\n         *\n         * This rule defines the initial/starting state for the application.\n         *\n         * This rule is triggered the first time the URL is checked (when the app initially loads).\n         * The rule is triggered only when the url matches either `\"\"` or `\"/\"`.\n         *\n         * Note: The rule is intended to be used when the root of the application is directly linked to.\n         * When the URL is *not* `\"\"` or `\"/\"` and doesn't match other rules, the [[otherwise]] rule is triggered.\n         * This allows 404-like behavior when an unknown URL is deep-linked.\n         *\n         * #### Example:\n         * Start app at `home` state.\n         * ```js\n         * .initial({ state: 'home' });\n         * ```\n         *\n         * #### Example:\n         * Start app at `/home` (by url)\n         * ```js\n         * .initial('/home');\n         * ```\n         *\n         * #### Example:\n         * When no other url rule matches, go to `home` state\n         * ```js\n         * .initial((matchValue, url, router) => {\n         *   console.log('initial state');\n         *   return { state: 'home' };\n         * })\n         * ```\n         *\n         * @param handler The initial state or url path, or a function which returns the state or url path (or performs custom logic).\n         */\n        UrlRules.prototype.initial = function (handler) {\n            var handlerFn = getHandlerFn(handler);\n            var matchFn = function (urlParts, router) {\n                return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n            };\n            this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n        };\n        /**\n         * Defines the state, url, or behavior to use when no other rule matches the URL.\n         *\n         * This rule is matched when *no other rule* matches.\n         * It is generally used to handle unknown URLs (similar to \"404\" behavior, but on the client side).\n         *\n         * - If `handler` a string, it is treated as a url redirect\n         *\n         * #### Example:\n         * When no other url rule matches, redirect to `/index`\n         * ```js\n         * .otherwise('/index');\n         * ```\n         *\n         * - If `handler` is an object with a `state` property, the state is activated.\n         *\n         * #### Example:\n         * When no other url rule matches, redirect to `home` and provide a `dashboard` parameter value.\n         * ```js\n         * .otherwise({ state: 'home', params: { dashboard: 'default' } });\n         * ```\n         *\n         * - If `handler` is a function, the function receives the current url ([[UrlParts]]) and the [[UIRouter]] object.\n         *   The function can perform actions, and/or return a value.\n         *\n         * #### Example:\n         * When no other url rule matches, manually trigger a transition to the `home` state\n         * ```js\n         * .otherwise((matchValue, urlParts, router) => {\n         *   router.stateService.go('home');\n         * });\n         * ```\n         *\n         * #### Example:\n         * When no other url rule matches, go to `home` state\n         * ```js\n         * .otherwise((matchValue, urlParts, router) => {\n         *   return { state: 'home' };\n         * });\n         * ```\n         *\n         * @param handler The url path to redirect to, or a function which returns the url path (or performs custom logic).\n         */\n        UrlRules.prototype.otherwise = function (handler) {\n            var handlerFn = getHandlerFn(handler);\n            this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n            this._sorted = false;\n        };\n        /**\n         * Remove a rule previously registered\n         *\n         * @param rule the matcher rule that was previously registered using [[rule]]\n         */\n        UrlRules.prototype.removeRule = function (rule) {\n            removeFrom(this._rules, rule);\n        };\n        /**\n         * Manually adds a URL Rule.\n         *\n         * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n         * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n         * Rules can be created using [[urlRuleFactory]], or created manually as simple objects.\n         *\n         * A rule should have a `match` function which returns truthy if the rule matched.\n         * It should also have a `handler` function which is invoked if the rule is the best match.\n         *\n         * @return a function that deregisters the rule\n         */\n        UrlRules.prototype.rule = function (rule) {\n            var _this = this;\n            if (!UrlRuleFactory.isUrlRule(rule))\n                throw new Error('invalid rule');\n            rule.$id = this._id++;\n            rule.priority = rule.priority || 0;\n            this._rules.push(rule);\n            this._sorted = false;\n            return function () { return _this.removeRule(rule); };\n        };\n        /**\n         * Gets all registered rules\n         *\n         * @returns an array of all the registered rules\n         */\n        UrlRules.prototype.rules = function () {\n            this.ensureSorted();\n            return this._rules.concat(this._otherwiseFn ? [this._otherwiseFn] : []);\n        };\n        /**\n         * Defines URL Rule priorities\n         *\n         * More than one rule ([[UrlRule]]) might match a given URL.\n         * This `compareFn` is used to sort the rules by priority.\n         * Higher priority rules should sort earlier.\n         *\n         * The [[defaultRuleSortFn]] is used by default.\n         *\n         * You only need to call this function once.\n         * The `compareFn` will be used to sort the rules as each is registered.\n         *\n         * If called without any parameter, it will re-sort the rules.\n         *\n         * ---\n         *\n         * Url rules may come from multiple sources: states's urls ([[StateDeclaration.url]]), [[when]], and [[rule]].\n         * Each rule has a (user-provided) [[UrlRule.priority]], a [[UrlRule.type]], and a [[UrlRule.$id]]\n         * The `$id` is is the order in which the rule was registered.\n         *\n         * The sort function should use these data, or data found on a specific type\n         * of [[UrlRule]] (such as [[StateRule.state]]), to order the rules as desired.\n         *\n         * #### Example:\n         * This compare function prioritizes rules by the order in which the rules were registered.\n         * A rule registered earlier has higher priority.\n         *\n         * ```js\n         * function compareFn(a, b) {\n         *   return a.$id - b.$id;\n         * }\n         * ```\n         *\n         * @param compareFn a function that compares to [[UrlRule]] objects.\n         *    The `compareFn` should abide by the `Array.sort` compare function rules.\n         *    Given two rules, `a` and `b`, return a negative number if `a` should be higher priority.\n         *    Return a positive number if `b` should be higher priority.\n         *    Return `0` if the rules are identical.\n         *\n         *    See the [mozilla reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)\n         *    for details.\n         */\n        UrlRules.prototype.sort = function (compareFn) {\n            var sorted = this.stableSort(this._rules, (this._sortFn = compareFn || this._sortFn));\n            // precompute _sortGroup values and apply to each rule\n            var group = 0;\n            for (var i = 0; i < sorted.length; i++) {\n                sorted[i]._group = group;\n                if (i < sorted.length - 1 && this._sortFn(sorted[i], sorted[i + 1]) !== 0) {\n                    group++;\n                }\n            }\n            this._rules = sorted;\n            this._sorted = true;\n        };\n        /** @hidden */\n        UrlRules.prototype.ensureSorted = function () {\n            this._sorted || this.sort();\n        };\n        /** @hidden */\n        UrlRules.prototype.stableSort = function (arr, compareFn) {\n            var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n            arrOfWrapper.sort(function (wrapperA, wrapperB) {\n                var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n                return cmpDiff === 0 ? wrapperA.idx - wrapperB.idx : cmpDiff;\n            });\n            return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n        };\n        /**\n         * Registers a `matcher` and `handler` for custom URLs handling.\n         *\n         * The `matcher` can be:\n         *\n         * - a [[UrlMatcher]]: See: [[UrlMatcherFactory.compile]]\n         * - a `string`: The string is compiled to a [[UrlMatcher]]\n         * - a `RegExp`: The regexp is used to match the url.\n         *\n         * The `handler` can be:\n         *\n         * - a string: The url is redirected to the value of the string.\n         * - a function: The url is redirected to the return value of the function.\n         *\n         * ---\n         *\n         * When the `handler` is a `string` and the `matcher` is a `UrlMatcher` (or string), the redirect\n         * string is interpolated with parameter values.\n         *\n         * #### Example:\n         * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n         * ```js\n         * .when(\"/foo/:param1\", \"/bar/:param1\")\n         * ```\n         *\n         * ---\n         *\n         * When the `handler` is a string and the `matcher` is a `RegExp`, the redirect string is\n         * interpolated with capture groups from the RegExp.\n         *\n         * #### Example:\n         * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n         * ```js\n         * .when(new RegExp(\"^/foo/(.*)$\"), \"/bar/$1\");\n         * ```\n         *\n         * ---\n         *\n         * When the handler is a function, it receives the matched value, the current URL, and the `UIRouter` object (See [[UrlRuleHandlerFn]]).\n         * The \"matched value\" differs based on the `matcher`.\n         * For [[UrlMatcher]]s, it will be the matched state params.\n         * For `RegExp`, it will be the match array from `regexp.exec()`.\n         *\n         * If the handler returns a string, the URL is redirected to the string.\n         *\n         * #### Example:\n         * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n         * ```js\n         * .when(new RegExp(\"^/foo/(.*)$\"), match => \"/bar/\" + match[1]);\n         * ```\n         *\n         * Note: the `handler` may also invoke arbitrary code, such as `$state.go()`\n         *\n         * @param matcher A pattern `string` to match, compiled as a [[UrlMatcher]], or a `RegExp`.\n         * @param handler The path to redirect to, or a function that returns the path.\n         * @param options `{ priority: number }`\n         *\n         * @return the registered [[UrlRule]]\n         */\n        UrlRules.prototype.when = function (matcher, handler, options) {\n            var rule = this.urlRuleFactory.create(matcher, handler);\n            if (isDefined(options && options.priority))\n                rule.priority = options.priority;\n            this.rule(rule);\n            return rule;\n        };\n        return UrlRules;\n    }());\n\n    /**\n     * An API to customize the URL behavior and retrieve URL configuration\n     *\n     * This API is used to customize the behavior of the URL.\n     * This includes optional trailing slashes ([[strictMode]]), case sensitivity ([[caseInsensitive]]),\n     * and custom parameter encoding (custom [[type]]).\n     *\n     * It also has information about the location (url) configuration such as [[port]] and [[baseHref]].\n     * This information can be used to build absolute URLs, such as\n     * `https://example.com:443/basepath/state/substate?param1=a#hashvalue`;\n     *\n     * This API is a property of [[UrlService]] as [[UrlService.config]].\n     */\n    var UrlConfig = /** @class */ (function () {\n        /** @hidden */ function UrlConfig(/** @hidden */ router) {\n            var _this = this;\n            this.router = router;\n            /** @hidden */ this.paramTypes = new ParamTypes();\n            /** @hidden */ this._isCaseInsensitive = false;\n            /** @hidden */ this._isStrictMode = true;\n            /** @hidden */ this._defaultSquashPolicy = false;\n            /** @internalapi */ this.dispose = function () { return _this.paramTypes.dispose(); };\n            // Delegate these calls to the current LocationConfig implementation\n            /**\n             * Gets the base Href, e.g., `http://localhost/approot/`\n             *\n             * @return the application's base href\n             */\n            this.baseHref = function () { return _this.router.locationConfig.baseHref(); };\n            /**\n             * Gets or sets the hashPrefix\n             *\n             * This only applies when not running in [[html5Mode]] (pushstate mode)\n             *\n             * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n             *\n             * @return the hash prefix\n             */\n            this.hashPrefix = function (newprefix) { return _this.router.locationConfig.hashPrefix(newprefix); };\n            /**\n             * Gets the host, e.g., `localhost`\n             *\n             * @return the protocol\n             */\n            this.host = function () { return _this.router.locationConfig.host(); };\n            /**\n             * Returns true when running in pushstate mode\n             *\n             * @return true when running in html5 mode (pushstate mode).\n             */\n            this.html5Mode = function () { return _this.router.locationConfig.html5Mode(); };\n            /**\n             * Gets the port, e.g., `80`\n             *\n             * @return the port number\n             */\n            this.port = function () { return _this.router.locationConfig.port(); };\n            /**\n             * Gets the protocol, e.g., `http`\n             *\n             * @return the protocol\n             */\n            this.protocol = function () { return _this.router.locationConfig.protocol(); };\n        }\n        /**\n         * Defines whether URL matching should be case sensitive (the default behavior), or not.\n         *\n         * #### Example:\n         * ```js\n         * // Allow case insensitive url matches\n         * urlService.config.caseInsensitive(true);\n         * ```\n         *\n         * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n         * @returns the current value of caseInsensitive\n         */\n        UrlConfig.prototype.caseInsensitive = function (value) {\n            return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n        };\n        /**\n         * Sets the default behavior when generating or matching URLs with default parameter values.\n         *\n         * #### Example:\n         * ```js\n         * // Remove default parameter values from the url\n         * urlService.config.defaultSquashPolicy(true);\n         * ```\n         *\n         * @param value A string that defines the default parameter URL squashing behavior.\n         *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n         *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n         *      parameter is surrounded by slashes, squash (remove) one slash from the URL\n         *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n         *      the parameter value from the URL and replace it with this string.\n         * @returns the current value of defaultSquashPolicy\n         */\n        UrlConfig.prototype.defaultSquashPolicy = function (value) {\n            if (isDefined(value) && value !== true && value !== false && !isString(value))\n                throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n            return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n        };\n        /**\n         * Defines whether URLs should match trailing slashes, or not (the default behavior).\n         *\n         * #### Example:\n         * ```js\n         * // Allow optional trailing slashes\n         * urlService.config.strictMode(false);\n         * ```\n         *\n         * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n         * @returns the current value of strictMode\n         */\n        UrlConfig.prototype.strictMode = function (value) {\n            return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n        };\n        /**\n         * Creates and registers a custom [[ParamType]] object\n         *\n         * A custom parameter type can be used to generate URLs with typed parameters or custom encoding/decoding.\n         *\n         * #### Note: Register custom types *before using them* in a state definition.\n         *\n         * #### Example:\n         * ```js\n         * // Encode object parameter as JSON string\n         * urlService.config.type('myjson', {\n         *   encode: (obj) => JSON.stringify(obj),\n         *   decode: (str) => JSON.parse(str),\n         *   is: (val) => typeof(val) === 'object',\n         *   pattern: /[^/]+/,\n         *   equals: (a, b) => _.isEqual(a, b),\n         * });\n         * ```\n         *\n         * See [[ParamTypeDefinition]] for more examples\n         *\n         * @param name The type name.\n         * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n         * @param definitionFn A function that is injected before the app runtime starts.\n         *        The result of this function should be a [[ParamTypeDefinition]].\n         *        The result is merged into the existing `definition`.\n         *        See [[ParamType]] for information on the values accepted.\n         *\n         * @returns if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n         */\n        UrlConfig.prototype.type = function (name, definition, definitionFn) {\n            var type = this.paramTypes.type(name, definition, definitionFn);\n            return !isDefined(definition) ? type : this;\n        };\n        return UrlConfig;\n    }());\n\n    /** API for URL management */\n    var UrlService = /** @class */ (function () {\n        /** @hidden */\n        function UrlService(/** @hidden */ router) {\n            var _this = this;\n            this.router = router;\n            /** @hidden */ this.interceptDeferred = false;\n            /**\n             * The nested [[UrlRules]] API for managing URL rules and rewrites\n             *\n             * See: [[UrlRules]] for details\n             */\n            this.rules = new UrlRules(this.router);\n            /**\n             * The nested [[UrlConfig]] API to configure the URL and retrieve URL information\n             *\n             * See: [[UrlConfig]] for details\n             */\n            this.config = new UrlConfig(this.router);\n            // Delegate these calls to the current LocationServices implementation\n            /**\n             * Gets the current url, or updates the url\n             *\n             * ### Getting the current URL\n             *\n             * When no arguments are passed, returns the current URL.\n             * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n             *\n             * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n             * have a base HREF prepended ([[PushStateLocationServices]]).\n             *\n             * The raw URL in the browser might be:\n             *\n             * ```\n             * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n             * ```\n             *\n             * or\n             *\n             * ```\n             * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n             * ```\n             *\n             * then this method returns:\n             *\n             * ```\n             * /internal/path/123?param1=foo#anchor\n             * ```\n             *\n             *\n             * #### Example:\n             * ```js\n             * locationServices.url(); // \"/some/path?query=value#anchor\"\n             * ```\n             *\n             * ### Updating the URL\n             *\n             * When `newurl` arguments is provided, changes the URL to reflect `newurl`\n             *\n             * #### Example:\n             * ```js\n             * locationServices.url(\"/some/path?query=value#anchor\", true);\n             * ```\n             *\n             * @param newurl The new value for the URL.\n             *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n             *               It should not include the protocol, site, port, or base path of an absolute HREF.\n             * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n             * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n             *\n             * @return the url (after potentially being processed)\n             */\n            this.url = function (newurl, replace, state) {\n                return _this.router.locationService.url(newurl, replace, state);\n            };\n            /**\n             * Gets the path part of the current url\n             *\n             * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n             *\n             * @return the path portion of the url\n             */\n            this.path = function () { return _this.router.locationService.path(); };\n            /**\n             * Gets the search part of the current url as an object\n             *\n             * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n             *\n             * @return the search (query) portion of the url, as an object\n             */\n            this.search = function () { return _this.router.locationService.search(); };\n            /**\n             * Gets the hash part of the current url\n             *\n             * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n             *\n             * @return the hash (anchor) portion of the url\n             */\n            this.hash = function () { return _this.router.locationService.hash(); };\n            /**\n             * @internalapi\n             *\n             * Registers a low level url change handler\n             *\n             * Note: Because this is a low level handler, it's not recommended for general use.\n             *\n             * #### Example:\n             * ```js\n             * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n             * ```\n             *\n             * @param callback a function that will be called when the url is changing\n             * @return a function that de-registers the callback\n             */\n            this.onChange = function (callback) { return _this.router.locationService.onChange(callback); };\n        }\n        /** @hidden */\n        UrlService.prototype.dispose = function () {\n            this.listen(false);\n            this.rules.dispose();\n        };\n        /**\n         * Gets the current URL parts\n         *\n         * This method returns the different parts of the current URL (the [[path]], [[search]], and [[hash]]) as a [[UrlParts]] object.\n         */\n        UrlService.prototype.parts = function () {\n            return { path: this.path(), search: this.search(), hash: this.hash() };\n        };\n        /**\n         * Activates the best rule for the current URL\n         *\n         * Checks the current URL for a matching [[UrlRule]], then invokes that rule's handler.\n         * This method is called internally any time the URL has changed.\n         *\n         * This effectively activates the state (or redirect, etc) which matches the current URL.\n         *\n         * #### Example:\n         * ```js\n         * urlService.deferIntercept();\n         *\n         * fetch('/states.json').then(resp => resp.json()).then(data => {\n         *   data.forEach(state => $stateRegistry.register(state));\n         *   urlService.listen();\n         *   // Find the matching URL and invoke the handler.\n         *   urlService.sync();\n         * });\n         * ```\n         */\n        UrlService.prototype.sync = function (evt) {\n            if (evt && evt.defaultPrevented)\n                return;\n            var _a = this.router, urlService = _a.urlService, stateService = _a.stateService;\n            var url = { path: urlService.path(), search: urlService.search(), hash: urlService.hash() };\n            var best = this.match(url);\n            var applyResult = pattern([\n                [isString, function (newurl) { return urlService.url(newurl, true); }],\n                [TargetState.isDef, function (def) { return stateService.go(def.state, def.params, def.options); }],\n                [is(TargetState), function (target) { return stateService.go(target.state(), target.params(), target.options()); }],\n            ]);\n            applyResult(best && best.rule.handler(best.match, url, this.router));\n        };\n        /**\n         * Starts or stops listening for URL changes\n         *\n         * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n         * This causes UI-Router to start listening for changes to the URL, if it wasn't already listening.\n         *\n         * If called with `false`, UI-Router will stop listening (call listen(true) to start listening again).\n         *\n         * #### Example:\n         * ```js\n         * urlService.deferIntercept();\n         *\n         * fetch('/states.json').then(resp => resp.json()).then(data => {\n         *   data.forEach(state => $stateRegistry.register(state));\n         *   // Start responding to URL changes\n         *   urlService.listen();\n         *   urlService.sync();\n         * });\n         * ```\n         *\n         * @param enabled `true` or `false` to start or stop listening to URL changes\n         */\n        UrlService.prototype.listen = function (enabled) {\n            var _this = this;\n            if (enabled === false) {\n                this._stopListeningFn && this._stopListeningFn();\n                delete this._stopListeningFn;\n            }\n            else {\n                return (this._stopListeningFn = this._stopListeningFn || this.router.urlService.onChange(function (evt) { return _this.sync(evt); }));\n            }\n        };\n        /**\n         * Disables monitoring of the URL.\n         *\n         * Call this method before UI-Router has bootstrapped.\n         * It will stop UI-Router from performing the initial url sync.\n         *\n         * This can be useful to perform some asynchronous initialization before the router starts.\n         * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n         *\n         * #### Example:\n         * ```js\n         * // Prevent UI-Router from automatically intercepting URL changes when it starts;\n         * urlService.deferIntercept();\n         *\n         * fetch('/states.json').then(resp => resp.json()).then(data => {\n         *   data.forEach(state => $stateRegistry.register(state));\n         *   urlService.listen();\n         *   urlService.sync();\n         * });\n         * ```\n         *\n         * @param defer Indicates whether to defer location change interception.\n         *        Passing no parameter is equivalent to `true`.\n         */\n        UrlService.prototype.deferIntercept = function (defer) {\n            if (defer === undefined)\n                defer = true;\n            this.interceptDeferred = defer;\n        };\n        /**\n         * Matches a URL\n         *\n         * Given a URL (as a [[UrlParts]] object), check all rules and determine the best matching rule.\n         * Return the result as a [[MatchResult]].\n         */\n        UrlService.prototype.match = function (url) {\n            var _this = this;\n            url = extend({ path: '', search: {}, hash: '' }, url);\n            var rules = this.rules.rules();\n            // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n            var checkRule = function (rule) {\n                var match = rule.match(url, _this.router);\n                return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n            };\n            // The rules are pre-sorted.\n            // - Find the first matching rule.\n            // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n            // - Choose the rule with the highest match weight.\n            var best;\n            for (var i = 0; i < rules.length; i++) {\n                // Stop when there is a 'best' rule and the next rule sorts differently than it.\n                if (best && best.rule._group !== rules[i]._group)\n                    break;\n                var current = checkRule(rules[i]);\n                // Pick the best MatchResult\n                best = !best || (current && current.weight > best.weight) ? current : best;\n            }\n            return best;\n        };\n        return UrlService;\n    }());\n\n    /** @publicapi @module core */ /** */\n    /** @hidden */\n    var _routerInstance = 0;\n    /** @hidden */\n    var locSvcFns = ['url', 'path', 'search', 'hash', 'onChange'];\n    /** @hidden */\n    var locCfgFns = ['port', 'protocol', 'host', 'baseHref', 'html5Mode', 'hashPrefix'];\n    /** @hidden */\n    var locationServiceStub = makeStub('LocationServices', locSvcFns);\n    /** @hidden */\n    var locationConfigStub = makeStub('LocationConfig', locCfgFns);\n    /**\n     * The master class used to instantiate an instance of UI-Router.\n     *\n     * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n     * This class instantiates and wires the UI-Router services together.\n     *\n     * After a new instance of the UIRouter class is created, it should be configured for your app.\n     * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n     *\n     * ---\n     *\n     * Normally the framework code will bootstrap UI-Router.\n     * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n     * [[UrlService.listen]] then [[UrlService.sync]].\n     */\n    var UIRouter = /** @class */ (function () {\n        /**\n         * Creates a new `UIRouter` object\n         *\n         * @param locationService a [[LocationServices]] implementation\n         * @param locationConfig a [[LocationConfig]] implementation\n         * @internalapi\n         */\n        function UIRouter(locationService, locationConfig) {\n            if (locationService === void 0) { locationService = locationServiceStub; }\n            if (locationConfig === void 0) { locationConfig = locationConfigStub; }\n            this.locationService = locationService;\n            this.locationConfig = locationConfig;\n            /** @hidden */ this.$id = _routerInstance++;\n            /** @hidden */ this._disposed = false;\n            /** @hidden */ this._disposables = [];\n            /** Provides trace information to the console */\n            this.trace = trace;\n            /** Provides services related to ui-view synchronization */\n            this.viewService = new ViewService(this);\n            /** Global router state */\n            this.globals = new UIRouterGlobals();\n            /** Provides services related to Transitions */\n            this.transitionService = new TransitionService(this);\n            /**\n             * Deprecated for public use. Use [[urlService]] instead.\n             * @deprecated Use [[urlService]] instead\n             */\n            this.urlMatcherFactory = new UrlMatcherFactory(this);\n            /**\n             * Deprecated for public use. Use [[urlService]] instead.\n             * @deprecated Use [[urlService]] instead\n             */\n            this.urlRouter = new UrlRouter(this);\n            /** Provides services related to the URL */\n            this.urlService = new UrlService(this);\n            /** Provides a registry for states, and related registration services */\n            this.stateRegistry = new StateRegistry(this);\n            /** Provides services related to states */\n            this.stateService = new StateService(this);\n            /** @hidden plugin instances are registered here */\n            this._plugins = {};\n            this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n            this.globals.$current = this.stateRegistry.root();\n            this.globals.current = this.globals.$current.self;\n            this.disposable(this.globals);\n            this.disposable(this.stateService);\n            this.disposable(this.stateRegistry);\n            this.disposable(this.transitionService);\n            this.disposable(this.urlService);\n            this.disposable(locationService);\n            this.disposable(locationConfig);\n        }\n        /** Registers an object to be notified when the router is disposed */\n        UIRouter.prototype.disposable = function (disposable) {\n            this._disposables.push(disposable);\n        };\n        /**\n         * Disposes this router instance\n         *\n         * When called, clears resources retained by the router by calling `dispose(this)` on all\n         * registered [[disposable]] objects.\n         *\n         * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n         *\n         * @param disposable (optional) the disposable to dispose\n         */\n        UIRouter.prototype.dispose = function (disposable) {\n            var _this = this;\n            if (disposable && isFunction(disposable.dispose)) {\n                disposable.dispose(this);\n                return undefined;\n            }\n            this._disposed = true;\n            this._disposables.slice().forEach(function (d) {\n                try {\n                    typeof d.dispose === 'function' && d.dispose(_this);\n                    removeFrom(_this._disposables, d);\n                }\n                catch (ignored) { }\n            });\n        };\n        /**\n         * Adds a plugin to UI-Router\n         *\n         * This method adds a UI-Router Plugin.\n         * A plugin can enhance or change UI-Router behavior using any public API.\n         *\n         * #### Example:\n         * ```js\n         * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n         *\n         * var plugin = router.addPlugin(MyCoolPlugin);\n         * ```\n         *\n         * ### Plugin authoring\n         *\n         * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n         *\n         * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n         * For example, it may configure router options or add a Transition Hook.\n         *\n         * The plugin can then be published as a separate module.\n         *\n         * #### Example:\n         * ```js\n         * export class MyAuthPlugin implements UIRouterPlugin {\n         *   constructor(router: UIRouter, options: any) {\n         *     this.name = \"MyAuthPlugin\";\n         *     let $transitions = router.transitionService;\n         *     let $state = router.stateService;\n         *\n         *     let authCriteria = {\n         *       to: (state) => state.data && state.data.requiresAuth\n         *     };\n         *\n         *     function authHook(transition: Transition) {\n         *       let authService = transition.injector().get('AuthService');\n         *       if (!authService.isAuthenticated()) {\n         *         return $state.target('login');\n         *       }\n         *     }\n         *\n         *     $transitions.onStart(authCriteria, authHook);\n         *   }\n         * }\n         * ```\n         *\n         * @param plugin one of:\n         *        - a plugin class which implements [[UIRouterPlugin]]\n         *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n         *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n         * @param options options to pass to the plugin class/factory\n         * @returns the registered plugin instance\n         */\n        UIRouter.prototype.plugin = function (plugin, options) {\n            if (options === void 0) { options = {}; }\n            var pluginInstance = new plugin(this, options);\n            if (!pluginInstance.name)\n                throw new Error('Required property `name` missing on plugin: ' + pluginInstance);\n            this._disposables.push(pluginInstance);\n            return (this._plugins[pluginInstance.name] = pluginInstance);\n        };\n        UIRouter.prototype.getPlugin = function (pluginName) {\n            return pluginName ? this._plugins[pluginName] : values(this._plugins);\n        };\n        return UIRouter;\n    }());\n\n    /** @internalapi @module hooks */ /** */\n    function addCoreResolvables(trans) {\n        trans.addResolvable(Resolvable.fromData(UIRouter, trans.router), '');\n        trans.addResolvable(Resolvable.fromData(Transition, trans), '');\n        trans.addResolvable(Resolvable.fromData('$transition$', trans), '');\n        trans.addResolvable(Resolvable.fromData('$stateParams', trans.params()), '');\n        trans.entering().forEach(function (state) {\n            trans.addResolvable(Resolvable.fromData('$state$', state), state);\n        });\n    }\n    var registerAddCoreResolvables = function (transitionService) {\n        return transitionService.onCreate({}, addCoreResolvables);\n    };\n    var TRANSITION_TOKENS = ['$transition$', Transition];\n    var isTransition = inArray(TRANSITION_TOKENS);\n    // References to Transition in the treeChanges pathnodes makes all\n    // previous Transitions reachable in memory, causing a memory leak\n    // This function removes resolves for '$transition$' and `Transition` from the treeChanges.\n    // Do not use this on current transitions, only on old ones.\n    var treeChangesCleanup = function (trans) {\n        var nodes = values(trans.treeChanges())\n            .reduce(unnestR, [])\n            .reduce(uniqR, []);\n        // If the resolvable is a Transition, return a new resolvable with null data\n        var replaceTransitionWithNull = function (r) {\n            return isTransition(r.token) ? Resolvable.fromData(r.token, null) : r;\n        };\n        nodes.forEach(function (node) {\n            node.resolvables = node.resolvables.map(replaceTransitionWithNull);\n        });\n    };\n\n    /** @internalapi @module hooks */ /** */\n    /**\n     * A [[TransitionHookFn]] that redirects to a different state or params\n     *\n     * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n     *\n     * See [[StateDeclaration.redirectTo]]\n     */\n    var redirectToHook = function (trans) {\n        var redirect = trans.to().redirectTo;\n        if (!redirect)\n            return;\n        var $state = trans.router.stateService;\n        function handleResult(result) {\n            if (!result)\n                return;\n            if (result instanceof TargetState)\n                return result;\n            if (isString(result))\n                return $state.target(result, trans.params(), trans.options());\n            if (result['state'] || result['params'])\n                return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n        }\n        if (isFunction(redirect)) {\n            return services.$q.when(redirect(trans)).then(handleResult);\n        }\n        return handleResult(redirect);\n    };\n    var registerRedirectToHook = function (transitionService) {\n        return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n    };\n\n    /**\n     * A factory which creates an onEnter, onExit or onRetain transition hook function\n     *\n     * The returned function invokes the (for instance) state.onEnter hook when the\n     * state is being entered.\n     *\n     * @hidden\n     */\n    function makeEnterExitRetainHook(hookName) {\n        return function (transition, state) {\n            var _state = state.$$state();\n            var hookFn = _state[hookName];\n            return hookFn(transition, state);\n        };\n    }\n    /**\n     * The [[TransitionStateHookFn]] for onExit\n     *\n     * When the state is being exited, the state's .onExit function is invoked.\n     *\n     * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n     *\n     * See: [[IHookRegistry.onExit]]\n     */\n    var onExitHook = makeEnterExitRetainHook('onExit');\n    var registerOnExitHook = function (transitionService) {\n        return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n    };\n    /**\n     * The [[TransitionStateHookFn]] for onRetain\n     *\n     * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n     *\n     * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n     *\n     * See: [[IHookRegistry.onRetain]]\n     */\n    var onRetainHook = makeEnterExitRetainHook('onRetain');\n    var registerOnRetainHook = function (transitionService) {\n        return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n    };\n    /**\n     * The [[TransitionStateHookFn]] for onEnter\n     *\n     * When the state is being entered, the state's .onEnter function is invoked.\n     *\n     * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n     *\n     * See: [[IHookRegistry.onEnter]]\n     */\n    var onEnterHook = makeEnterExitRetainHook('onEnter');\n    var registerOnEnterHook = function (transitionService) {\n        return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n    };\n\n    /** @internalapi @module hooks */ /** */\n    var RESOLVE_HOOK_PRIORITY = 1000;\n    /**\n     * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n     *\n     * Registered using `transitionService.onStart({}, eagerResolvePath, { priority: 1000 });`\n     *\n     * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n     *\n     * See [[StateDeclaration.resolve]]\n     */\n    var eagerResolvePath = function (trans) {\n        return new ResolveContext(trans.treeChanges().to).resolvePath('EAGER', trans).then(noop);\n    };\n    var registerEagerResolvePath = function (transitionService) {\n        return transitionService.onStart({}, eagerResolvePath, { priority: RESOLVE_HOOK_PRIORITY });\n    };\n    /**\n     * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n     *\n     * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState, { priority: 1000 });`\n     *\n     * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n     *\n     * See [[StateDeclaration.resolve]]\n     */\n    var lazyResolveState = function (trans, state) {\n        return new ResolveContext(trans.treeChanges().to)\n            .subContext(state.$$state())\n            .resolvePath('LAZY', trans)\n            .then(noop);\n    };\n    var registerLazyResolveState = function (transitionService) {\n        return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: RESOLVE_HOOK_PRIORITY });\n    };\n    /**\n     * A [[TransitionHookFn]] which resolves any dynamically added (LAZY or EAGER) Resolvables.\n     *\n     * Registered using `transitionService.onFinish({}, eagerResolvePath, { priority: 1000 });`\n     *\n     * After all entering states have been entered, this hook resolves any remaining Resolvables.\n     * These are typically dynamic resolves which were added by some Transition Hook using [[Transition.addResolvable]].\n     *\n     * See [[StateDeclaration.resolve]]\n     */\n    var resolveRemaining = function (trans) {\n        return new ResolveContext(trans.treeChanges().to).resolvePath('LAZY', trans).then(noop);\n    };\n    var registerResolveRemaining = function (transitionService) {\n        return transitionService.onFinish({}, resolveRemaining, { priority: RESOLVE_HOOK_PRIORITY });\n    };\n\n    /** @internalapi @module hooks */ /** */\n    /**\n     * A [[TransitionHookFn]] which waits for the views to load\n     *\n     * Registered using `transitionService.onStart({}, loadEnteringViews);`\n     *\n     * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n     * In angular 1, this includes loading the templates.\n     */\n    var loadEnteringViews = function (transition) {\n        var $q = services.$q;\n        var enteringViews = transition.views('entering');\n        if (!enteringViews.length)\n            return;\n        return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n    };\n    var registerLoadEnteringViews = function (transitionService) {\n        return transitionService.onFinish({}, loadEnteringViews);\n    };\n    /**\n     * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n     *\n     * Registered using `transitionService.onSuccess({}, activateViews);`\n     *\n     * After a transition is complete, this hook deactivates the old views from the previous state,\n     * and activates the new views from the destination state.\n     *\n     * See [[ViewService]]\n     */\n    var activateViews = function (transition) {\n        var enteringViews = transition.views('entering');\n        var exitingViews = transition.views('exiting');\n        if (!enteringViews.length && !exitingViews.length)\n            return;\n        var $view = transition.router.viewService;\n        exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n        enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n        $view.sync();\n    };\n    var registerActivateViews = function (transitionService) {\n        return transitionService.onSuccess({}, activateViews);\n    };\n\n    /**\n     * A [[TransitionHookFn]] which updates global UI-Router state\n     *\n     * Registered using `transitionService.onBefore({}, updateGlobalState);`\n     *\n     * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n     * After a successful [[Transition]], updates the global values of \"the current state\"\n     * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n     *\n     * See also the deprecated properties:\n     * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n     */\n    var updateGlobalState = function (trans) {\n        var globals = trans.router.globals;\n        var transitionSuccessful = function () {\n            globals.successfulTransitions.enqueue(trans);\n            globals.$current = trans.$to();\n            globals.current = globals.$current.self;\n            copy(trans.params(), globals.params);\n        };\n        var clearCurrentTransition = function () {\n            // Do not clear globals.transition if a different transition has started in the meantime\n            if (globals.transition === trans)\n                globals.transition = null;\n        };\n        trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n        trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n    };\n    var registerUpdateGlobalState = function (transitionService) {\n        return transitionService.onCreate({}, updateGlobalState);\n    };\n\n    /**\n     * A [[TransitionHookFn]] which updates the URL after a successful transition\n     *\n     * Registered using `transitionService.onSuccess({}, updateUrl);`\n     */\n    var updateUrl = function (transition) {\n        var options = transition.options();\n        var $state = transition.router.stateService;\n        var $urlRouter = transition.router.urlRouter;\n        // Dont update the url in these situations:\n        // The transition was triggered by a URL sync (options.source === 'url')\n        // The user doesn't want the url to update (options.location === false)\n        // The destination state, and all parents have no navigable url\n        if (options.source !== 'url' && options.location && $state.$current.navigable) {\n            var urlOptions = { replace: options.location === 'replace' };\n            $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n        }\n        $urlRouter.update(true);\n    };\n    var registerUpdateUrl = function (transitionService) {\n        return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n    };\n\n    /**\n     * A [[TransitionHookFn]] that performs lazy loading\n     *\n     * When entering a state \"abc\" which has a `lazyLoad` function defined:\n     * - Invoke the `lazyLoad` function (unless it is already in process)\n     *   - Flag the hook function as \"in process\"\n     *   - The function should return a promise (that resolves when lazy loading is complete)\n     * - Wait for the promise to settle\n     *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n     *   - Flag the hook function as \"not in process\"\n     * - If the hook was successful\n     *   - Remove the `lazyLoad` function from the state declaration\n     * - If all the hooks were successful\n     *   - Retry the transition (by returning a TargetState)\n     *\n     * ```\n     * .state('abc', {\n     *   component: 'fooComponent',\n     *   lazyLoad: () => System.import('./fooComponent')\n     *   });\n     * ```\n     *\n     * See [[StateDeclaration.lazyLoad]]\n     */\n    var lazyLoadHook = function (transition) {\n        var router = transition.router;\n        function retryTransition() {\n            if (transition.originalTransition().options().source !== 'url') {\n                // The original transition was not triggered via url sync\n                // The lazy state should be loaded now, so re-try the original transition\n                var orig = transition.targetState();\n                return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n            }\n            // The original transition was triggered via url sync\n            // Run the URL rules and find the best match\n            var $url = router.urlService;\n            var result = $url.match($url.parts());\n            var rule = result && result.rule;\n            // If the best match is a state, redirect the transition (instead\n            // of calling sync() which supersedes the current transition)\n            if (rule && rule.type === 'STATE') {\n                var state = rule.state;\n                var params = result.match;\n                return router.stateService.target(state, params, transition.options());\n            }\n            // No matching state found, so let .sync() choose the best non-state match/otherwise\n            router.urlService.sync();\n        }\n        var promises = transition\n            .entering()\n            .filter(function (state) { return !!state.$$state().lazyLoad; })\n            .map(function (state) { return lazyLoadState(transition, state); });\n        return services.$q.all(promises).then(retryTransition);\n    };\n    var registerLazyLoadHook = function (transitionService) {\n        return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n    };\n    /**\n     * Invokes a state's lazy load function\n     *\n     * @param transition a Transition context\n     * @param state the state to lazy load\n     * @returns A promise for the lazy load result\n     */\n    function lazyLoadState(transition, state) {\n        var lazyLoadFn = state.$$state().lazyLoad;\n        // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n        var promise = lazyLoadFn['_promise'];\n        if (!promise) {\n            var success = function (result) {\n                delete state.lazyLoad;\n                delete state.$$state().lazyLoad;\n                delete lazyLoadFn['_promise'];\n                return result;\n            };\n            var error = function (err) {\n                delete lazyLoadFn['_promise'];\n                return services.$q.reject(err);\n            };\n            promise = lazyLoadFn['_promise'] = services.$q\n                .when(lazyLoadFn(transition, state))\n                .then(updateStateRegistry)\n                .then(success, error);\n        }\n        /** Register any lazy loaded state definitions */\n        function updateStateRegistry(result) {\n            if (result && Array.isArray(result.states)) {\n                result.states.forEach(function (_state) { return transition.router.stateRegistry.register(_state); });\n            }\n            return result;\n        }\n        return promise;\n    }\n\n    /**\n     * This class defines a type of hook, such as `onBefore` or `onEnter`.\n     * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n     *\n     * @interalapi\n     */\n    var TransitionEventType = /** @class */ (function () {\n        /* tslint:disable:no-inferrable-types */\n        function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n            if (reverseSort === void 0) { reverseSort = false; }\n            if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n            if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n            if (synchronous === void 0) { synchronous = false; }\n            this.name = name;\n            this.hookPhase = hookPhase;\n            this.hookOrder = hookOrder;\n            this.criteriaMatchPath = criteriaMatchPath;\n            this.reverseSort = reverseSort;\n            this.getResultHandler = getResultHandler;\n            this.getErrorHandler = getErrorHandler;\n            this.synchronous = synchronous;\n        }\n        return TransitionEventType;\n    }());\n\n    /** @internalapi @module hooks */ /** */\n    /**\n     * A [[TransitionHookFn]] that skips a transition if it should be ignored\n     *\n     * This hook is invoked at the end of the onBefore phase.\n     *\n     * If the transition should be ignored (because no parameter or states changed)\n     * then the transition is ignored and not processed.\n     */\n    function ignoredHook(trans) {\n        var ignoredReason = trans._ignoredReason();\n        if (!ignoredReason)\n            return;\n        trace.traceTransitionIgnored(trans);\n        var pending = trans.router.globals.transition;\n        // The user clicked a link going back to the *current state* ('A')\n        // However, there is also a pending transition in flight (to 'B')\n        // Abort the transition to 'B' because the user now wants to be back at 'A'.\n        if (ignoredReason === 'SameAsCurrent' && pending) {\n            pending.abort();\n        }\n        return Rejection.ignored().toPromise();\n    }\n    var registerIgnoredTransitionHook = function (transitionService) {\n        return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n    };\n\n    /** @internalapi @module hooks */ /** */\n    /**\n     * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n     *\n     * This hook is invoked at the end of the onBefore phase.\n     * If the transition is invalid (for example, param values do not validate)\n     * then the transition is rejected.\n     */\n    function invalidTransitionHook(trans) {\n        if (!trans.valid()) {\n            throw new Error(trans.error().toString());\n        }\n    }\n    var registerInvalidTransitionHook = function (transitionService) {\n        return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n    };\n\n    /** @publicapi @module transition */ /** */\n    /**\n     * The default [[Transition]] options.\n     *\n     * Include this object when applying custom defaults:\n     * let reloadOpts = { reload: true, notify: true }\n     * let options = defaults(theirOpts, customDefaults, defaultOptions);\n     */\n    var defaultTransOpts = {\n        location: true,\n        relative: null,\n        inherit: false,\n        notify: true,\n        reload: false,\n        custom: {},\n        current: function () { return null; },\n        source: 'unknown',\n    };\n    /**\n     * This class provides services related to Transitions.\n     *\n     * - Most importantly, it allows global Transition Hooks to be registered.\n     * - It allows the default transition error handler to be set.\n     * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n     *\n     * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n     */\n    var TransitionService = /** @class */ (function () {\n        /** @hidden */\n        function TransitionService(_router) {\n            /** @hidden */\n            this._transitionCount = 0;\n            /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n            this._eventTypes = [];\n            /** @hidden The registered transition hooks */\n            this._registeredHooks = {};\n            /** @hidden The  paths on a criteria object */\n            this._criteriaPaths = {};\n            this._router = _router;\n            this.$view = _router.viewService;\n            this._deregisterHookFns = {};\n            this._pluginapi = (createProxyFunctions(val(this), {}, val(this), [\n                '_definePathType',\n                '_defineEvent',\n                '_getPathTypes',\n                '_getEvents',\n                'getHooks',\n            ]));\n            this._defineCorePaths();\n            this._defineCoreEvents();\n            this._registerCoreTransitionHooks();\n            _router.globals.successfulTransitions.onEvict(treeChangesCleanup);\n        }\n        /**\n         * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n         *\n         * Registers a transition lifecycle hook, which is invoked during transition construction.\n         *\n         * This low level hook should only be used by plugins.\n         * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n         * The Sticky States plugin uses this hook to modify the treechanges.\n         *\n         * ### Lifecycle\n         *\n         * `onCreate` hooks are invoked *while a transition is being constructed*.\n         *\n         * ### Return value\n         *\n         * The hook's return value is ignored\n         *\n         * @internalapi\n         * @param criteria defines which Transitions the Hook should be invoked for.\n         * @param callback the hook function which will be invoked.\n         * @param options the registration options\n         * @returns a function which deregisters the hook.\n         */\n        TransitionService.prototype.onCreate = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onBefore = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onStart = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onExit = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onRetain = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onEnter = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onFinish = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onSuccess = function (criteria, callback, options) {\n            return;\n        };\n        /** @inheritdoc */\n        TransitionService.prototype.onError = function (criteria, callback, options) {\n            return;\n        };\n        /**\n         * dispose\n         * @internalapi\n         */\n        TransitionService.prototype.dispose = function (router) {\n            values(this._registeredHooks).forEach(function (hooksArray) {\n                return hooksArray.forEach(function (hook) {\n                    hook._deregistered = true;\n                    removeFrom(hooksArray, hook);\n                });\n            });\n        };\n        /**\n         * Creates a new [[Transition]] object\n         *\n         * This is a factory function for creating new Transition objects.\n         * It is used internally by the [[StateService]] and should generally not be called by application code.\n         *\n         * @param fromPath the path to the current state (the from state)\n         * @param targetState the target state (destination)\n         * @returns a Transition\n         */\n        TransitionService.prototype.create = function (fromPath, targetState) {\n            return new Transition(fromPath, targetState, this._router);\n        };\n        /** @hidden */\n        TransitionService.prototype._defineCoreEvents = function () {\n            var Phase = exports.TransitionHookPhase;\n            var TH = TransitionHook;\n            var paths = this._criteriaPaths;\n            var NORMAL_SORT = false, REVERSE_SORT = true;\n            var SYNCHRONOUS = true;\n            this._defineEvent('onCreate', Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n            this._defineEvent('onBefore', Phase.BEFORE, 0, paths.to);\n            this._defineEvent('onStart', Phase.RUN, 0, paths.to);\n            this._defineEvent('onExit', Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n            this._defineEvent('onRetain', Phase.RUN, 200, paths.retained);\n            this._defineEvent('onEnter', Phase.RUN, 300, paths.entering);\n            this._defineEvent('onFinish', Phase.RUN, 400, paths.to);\n            this._defineEvent('onSuccess', Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n            this._defineEvent('onError', Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        };\n        /** @hidden */\n        TransitionService.prototype._defineCorePaths = function () {\n            var STATE = exports.TransitionHookScope.STATE, TRANSITION = exports.TransitionHookScope.TRANSITION;\n            this._definePathType('to', TRANSITION);\n            this._definePathType('from', TRANSITION);\n            this._definePathType('exiting', STATE);\n            this._definePathType('retained', STATE);\n            this._definePathType('entering', STATE);\n        };\n        /** @hidden */\n        TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n            if (reverseSort === void 0) { reverseSort = false; }\n            if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n            if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n            if (synchronous === void 0) { synchronous = false; }\n            var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n            this._eventTypes.push(eventType);\n            makeEvent(this, this, eventType);\n        };\n        /** @hidden */\n        // tslint:disable-next-line\n        TransitionService.prototype._getEvents = function (phase) {\n            var transitionHookTypes = isDefined(phase)\n                ? this._eventTypes.filter(function (type) { return type.hookPhase === phase; })\n                : this._eventTypes.slice();\n            return transitionHookTypes.sort(function (l, r) {\n                var cmpByPhase = l.hookPhase - r.hookPhase;\n                return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n            });\n        };\n        /**\n         * Adds a Path to be used as a criterion against a TreeChanges path\n         *\n         * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n         * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n         * Each state in the exiting path is checked against the criteria and returned as part of the match.\n         *\n         * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n         * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n         * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n         *\n         * @hidden\n         */\n        TransitionService.prototype._definePathType = function (name, hookScope) {\n            this._criteriaPaths[name] = { name: name, scope: hookScope };\n        };\n        /** * @hidden */\n        // tslint:disable-next-line\n        TransitionService.prototype._getPathTypes = function () {\n            return this._criteriaPaths;\n        };\n        /** @hidden */\n        TransitionService.prototype.getHooks = function (hookName) {\n            return this._registeredHooks[hookName];\n        };\n        /** @hidden */\n        TransitionService.prototype._registerCoreTransitionHooks = function () {\n            var fns = this._deregisterHookFns;\n            fns.addCoreResolves = registerAddCoreResolvables(this);\n            fns.ignored = registerIgnoredTransitionHook(this);\n            fns.invalid = registerInvalidTransitionHook(this);\n            // Wire up redirectTo hook\n            fns.redirectTo = registerRedirectToHook(this);\n            // Wire up onExit/Retain/Enter state hooks\n            fns.onExit = registerOnExitHook(this);\n            fns.onRetain = registerOnRetainHook(this);\n            fns.onEnter = registerOnEnterHook(this);\n            // Wire up Resolve hooks\n            fns.eagerResolve = registerEagerResolvePath(this);\n            fns.lazyResolve = registerLazyResolveState(this);\n            fns.resolveAll = registerResolveRemaining(this);\n            // Wire up the View management hooks\n            fns.loadViews = registerLoadEnteringViews(this);\n            fns.activateViews = registerActivateViews(this);\n            // Updates global state after a transition\n            fns.updateGlobals = registerUpdateGlobalState(this);\n            // After globals.current is updated at priority: 10000\n            fns.updateUrl = registerUpdateUrl(this);\n            // Lazy load state trees\n            fns.lazyLoad = registerLazyLoadHook(this);\n        };\n        return TransitionService;\n    }());\n\n    /** @publicapi @module state */ /** */\n    /**\n     * Provides state related service functions\n     *\n     * This class provides services related to ui-router states.\n     * An instance of this class is located on the global [[UIRouter]] object.\n     */\n    var StateService = /** @class */ (function () {\n        /** @internalapi */\n        function StateService(/** @hidden */ router) {\n            this.router = router;\n            /** @internalapi */\n            this.invalidCallbacks = [];\n            /** @hidden */\n            this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n                if ($error$ instanceof Error && $error$.stack) {\n                    console.error($error$);\n                    console.error($error$.stack);\n                }\n                else if ($error$ instanceof Rejection) {\n                    console.error($error$.toString());\n                    if ($error$.detail && $error$.detail.stack)\n                        console.error($error$.detail.stack);\n                }\n                else {\n                    console.error($error$);\n                }\n            };\n            var getters = ['current', '$current', 'params', 'transition'];\n            var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n            createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n        }\n        Object.defineProperty(StateService.prototype, \"transition\", {\n            /**\n             * The [[Transition]] currently in progress (or null)\n             *\n             * This is a passthrough through to [[UIRouterGlobals.transition]]\n             */\n            get: function () {\n                return this.router.globals.transition;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(StateService.prototype, \"params\", {\n            /**\n             * The latest successful state parameters\n             *\n             * This is a passthrough through to [[UIRouterGlobals.params]]\n             */\n            get: function () {\n                return this.router.globals.params;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(StateService.prototype, \"current\", {\n            /**\n             * The current [[StateDeclaration]]\n             *\n             * This is a passthrough through to [[UIRouterGlobals.current]]\n             */\n            get: function () {\n                return this.router.globals.current;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(StateService.prototype, \"$current\", {\n            /**\n             * The current [[StateObject]]\n             *\n             * This is a passthrough through to [[UIRouterGlobals.$current]]\n             */\n            get: function () {\n                return this.router.globals.$current;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internalapi */\n        StateService.prototype.dispose = function () {\n            this.defaultErrorHandler(noop);\n            this.invalidCallbacks = [];\n        };\n        /**\n         * Handler for when [[transitionTo]] is called with an invalid state.\n         *\n         * Invokes the [[onInvalid]] callbacks, in natural order.\n         * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n         * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n         *\n         * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n         *\n         * @internalapi\n         */\n        StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n            var _this = this;\n            var fromState = PathUtils.makeTargetState(this.router.stateRegistry, fromPath);\n            var globals = this.router.globals;\n            var latestThing = function () { return globals.transitionHistory.peekTail(); };\n            var latest = latestThing();\n            var callbackQueue = new Queue(this.invalidCallbacks.slice());\n            var injector = new ResolveContext(fromPath).injector();\n            var checkForRedirect = function (result) {\n                if (!(result instanceof TargetState)) {\n                    return;\n                }\n                var target = result;\n                // Recreate the TargetState, in case the state is now defined.\n                target = _this.target(target.identifier(), target.params(), target.options());\n                if (!target.valid()) {\n                    return Rejection.invalid(target.error()).toPromise();\n                }\n                if (latestThing() !== latest) {\n                    return Rejection.superseded().toPromise();\n                }\n                return _this.transitionTo(target.identifier(), target.params(), target.options());\n            };\n            function invokeNextCallback() {\n                var nextCallback = callbackQueue.dequeue();\n                if (nextCallback === undefined)\n                    return Rejection.invalid(toState.error()).toPromise();\n                var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n                return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n            }\n            return invokeNextCallback();\n        };\n        /**\n         * Registers an Invalid State handler\n         *\n         * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n         * has been called with an invalid state reference parameter\n         *\n         * Example:\n         * ```js\n         * stateService.onInvalid(function(to, from, injector) {\n         *   if (to.name() === 'foo') {\n         *     let lazyLoader = injector.get('LazyLoadService');\n         *     return lazyLoader.load('foo')\n         *         .then(() => stateService.target('foo'));\n         *   }\n         * });\n         * ```\n         *\n         * @param {function} callback invoked when the toState is invalid\n         *   This function receives the (invalid) toState, the fromState, and an injector.\n         *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n         *   If one is returned, it is treated as a redirect.\n         *\n         * @returns a function which deregisters the callback\n         */\n        StateService.prototype.onInvalid = function (callback) {\n            this.invalidCallbacks.push(callback);\n            return function deregisterListener() {\n                removeFrom(this.invalidCallbacks)(callback);\n            }.bind(this);\n        };\n        /**\n         * Reloads the current state\n         *\n         * A method that force reloads the current state, or a partial state hierarchy.\n         * All resolves are re-resolved, and components reinstantiated.\n         *\n         * #### Example:\n         * ```js\n         * let app angular.module('app', ['ui.router']);\n         *\n         * app.controller('ctrl', function ($scope, $state) {\n         *   $scope.reload = function(){\n         *     $state.reload();\n         *   }\n         * });\n         * ```\n         *\n         * Note: `reload()` is just an alias for:\n         *\n         * ```js\n         * $state.transitionTo($state.current, $state.params, {\n         *   reload: true, inherit: false\n         * });\n         * ```\n         *\n         * @param reloadState A state name or a state object.\n         *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n         *\n         * #### Example:\n         * ```js\n         * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n         * //and current state is 'contacts.detail.item'\n         * let app angular.module('app', ['ui.router']);\n         *\n         * app.controller('ctrl', function ($scope, $state) {\n         *   $scope.reload = function(){\n         *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n         *     $state.reload('contact.detail');\n         *   }\n         * });\n         * ```\n         *\n         * @returns A promise representing the state of the new transition. See [[StateService.go]]\n         */\n        StateService.prototype.reload = function (reloadState) {\n            return this.transitionTo(this.current, this.params, {\n                reload: isDefined(reloadState) ? reloadState : true,\n                inherit: false,\n                notify: false,\n            });\n        };\n        /**\n         * Transition to a different state and/or parameters\n         *\n         * Convenience method for transitioning to a new state.\n         *\n         * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n         * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n         * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n         * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n         * inherit from the current parameter values (because of `inherit: true`).\n         *\n         * #### Example:\n         * ```js\n         * let app = angular.module('app', ['ui.router']);\n         *\n         * app.controller('ctrl', function ($scope, $state) {\n         *   $scope.changeState = function () {\n         *     $state.go('contact.detail');\n         *   };\n         * });\n         * ```\n         *\n         * @param to Absolute state name, state object, or relative state path (relative to current state).\n         *\n         * Some examples:\n         *\n         * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n         * - `$state.go('^')` - will go to the parent state\n         * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n         * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n         *\n         * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n         *\n         *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n         *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n         *\n         * @param options Transition options\n         *\n         * @returns {promise} A promise representing the state of the new transition.\n         */\n        StateService.prototype.go = function (to, params, options) {\n            var defautGoOpts = { relative: this.$current, inherit: true };\n            var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n            return this.transitionTo(to, params, transOpts);\n        };\n        /**\n         * Creates a [[TargetState]]\n         *\n         * This is a factory method for creating a TargetState\n         *\n         * This may be returned from a Transition Hook to redirect a transition, for example.\n         */\n        StateService.prototype.target = function (identifier, params, options) {\n            if (options === void 0) { options = {}; }\n            // If we're reloading, find the state object to reload from\n            if (isObject(options.reload) && !options.reload.name)\n                throw new Error('Invalid reload state object');\n            var reg = this.router.stateRegistry;\n            options.reloadState =\n                options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n            if (options.reload && !options.reloadState)\n                throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n            return new TargetState(this.router.stateRegistry, identifier, params, options);\n        };\n        StateService.prototype.getCurrentPath = function () {\n            var _this = this;\n            var globals = this.router.globals;\n            var latestSuccess = globals.successfulTransitions.peekTail();\n            var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n            return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n        };\n        /**\n         * Low-level method for transitioning to a new state.\n         *\n         * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n         *\n         * #### Example:\n         * ```js\n         * let app = angular.module('app', ['ui.router']);\n         *\n         * app.controller('ctrl', function ($scope, $state) {\n         *   $scope.changeState = function () {\n         *     $state.transitionTo('contact.detail');\n         *   };\n         * });\n         * ```\n         *\n         * @param to State name or state object.\n         * @param toParams A map of the parameters that will be sent to the state,\n         *      will populate $stateParams.\n         * @param options Transition options\n         *\n         * @returns A promise representing the state of the new transition. See [[go]]\n         */\n        StateService.prototype.transitionTo = function (to, toParams, options) {\n            var _this = this;\n            if (toParams === void 0) { toParams = {}; }\n            if (options === void 0) { options = {}; }\n            var router = this.router;\n            var globals = router.globals;\n            options = defaults(options, defaultTransOpts);\n            var getCurrent = function () { return globals.transition; };\n            options = extend(options, { current: getCurrent });\n            var ref = this.target(to, toParams, options);\n            var currentPath = this.getCurrentPath();\n            if (!ref.exists())\n                return this._handleInvalidTargetState(currentPath, ref);\n            if (!ref.valid())\n                return silentRejection(ref.error());\n            /**\n             * Special handling for Ignored, Aborted, and Redirected transitions\n             *\n             * The semantics for the transition.run() promise and the StateService.transitionTo()\n             * promise differ. For instance, the run() promise may be rejected because it was\n             * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n             * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n             * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n             */\n            var rejectedTransitionHandler = function (trans) { return function (error) {\n                if (error instanceof Rejection) {\n                    var isLatest = router.globals.lastStartedTransitionId <= trans.$id;\n                    if (error.type === exports.RejectType.IGNORED) {\n                        isLatest && router.urlRouter.update();\n                        // Consider ignored `Transition.run()` as a successful `transitionTo`\n                        return services.$q.when(globals.current);\n                    }\n                    var detail = error.detail;\n                    if (error.type === exports.RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                        // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                        // by returning the promise for the new (redirect) `Transition.run()`.\n                        var redirect = trans.redirect(detail);\n                        return redirect.run().catch(rejectedTransitionHandler(redirect));\n                    }\n                    if (error.type === exports.RejectType.ABORTED) {\n                        isLatest && router.urlRouter.update();\n                        return services.$q.reject(error);\n                    }\n                }\n                var errorHandler = _this.defaultErrorHandler();\n                errorHandler(error);\n                return services.$q.reject(error);\n            }; };\n            var transition = this.router.transitionService.create(currentPath, ref);\n            var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n            silenceUncaughtInPromise(transitionToPromise); // issue #2676\n            // Return a promise for the transition, which also has the transition object on it.\n            return extend(transitionToPromise, { transition: transition });\n        };\n        /**\n         * Checks if the current state *is* the provided state\n         *\n         * Similar to [[includes]] but only checks for the full state name.\n         * If params is supplied then it will be tested for strict equality against the current\n         * active params object, so all params must match with none missing and no extras.\n         *\n         * #### Example:\n         * ```js\n         * $state.$current.name = 'contacts.details.item';\n         *\n         * // absolute name\n         * $state.is('contact.details.item'); // returns true\n         * $state.is(contactDetailItemStateObject); // returns true\n         * ```\n         *\n         * // relative name (. and ^), typically from a template\n         * // E.g. from the 'contacts.details' template\n         * ```html\n         * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n         * ```\n         *\n         * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n         * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n         * to test against the current active state.\n         * @param options An options object. The options are:\n         *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n         *     test relative to `options.relative` state (or name).\n         *\n         * @returns Returns true if it is the state.\n         */\n        StateService.prototype.is = function (stateOrName, params, options) {\n            options = defaults(options, { relative: this.$current });\n            var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n            if (!isDefined(state))\n                return undefined;\n            if (this.$current !== state)\n                return false;\n            if (!params)\n                return true;\n            var schema = state.parameters({ inherit: true, matchingKeys: params });\n            return Param.equals(schema, Param.values(schema, params), this.params);\n        };\n        /**\n         * Checks if the current state *includes* the provided state\n         *\n         * A method to determine if the current active state is equal to or is the child of the\n         * state stateName. If any params are passed then they will be tested for a match as well.\n         * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n         *\n         * #### Example when `$state.$current.name === 'contacts.details.item'`\n         * ```js\n         * // Using partial names\n         * $state.includes(\"contacts\"); // returns true\n         * $state.includes(\"contacts.details\"); // returns true\n         * $state.includes(\"contacts.details.item\"); // returns true\n         * $state.includes(\"contacts.list\"); // returns false\n         * $state.includes(\"about\"); // returns false\n         * ```\n         *\n         * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n         * ```js\n         * $state.includes(\"*.details.*.*\"); // returns true\n         * $state.includes(\"*.details.**\"); // returns true\n         * $state.includes(\"**.item.**\"); // returns true\n         * $state.includes(\"*.details.item.url\"); // returns true\n         * $state.includes(\"*.details.*.url\"); // returns true\n         * $state.includes(\"*.details.*\"); // returns false\n         * $state.includes(\"item.**\"); // returns false\n         * ```\n         *\n         * @param stateOrName A partial name, relative name, glob pattern,\n         *   or state object to be searched for within the current state name.\n         * @param params A param object, e.g. `{sectionId: section.id}`,\n         *   that you'd like to test against the current active state.\n         * @param options An options object. The options are:\n         *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n         *     test relative to `options.relative` state (or name).\n         *\n         * @returns {boolean} Returns true if it does include the state\n         */\n        StateService.prototype.includes = function (stateOrName, params, options) {\n            options = defaults(options, { relative: this.$current });\n            var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n            if (glob) {\n                if (!glob.matches(this.$current.name))\n                    return false;\n                stateOrName = this.$current.name;\n            }\n            var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n            if (!isDefined(state))\n                return undefined;\n            if (!isDefined(include[state.name]))\n                return false;\n            if (!params)\n                return true;\n            var schema = state.parameters({ inherit: true, matchingKeys: params });\n            return Param.equals(schema, Param.values(schema, params), this.params);\n        };\n        /**\n         * Generates a URL for a state and parameters\n         *\n         * Returns the url for the given state populated with the given params.\n         *\n         * #### Example:\n         * ```js\n         * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n         * ```\n         *\n         * @param stateOrName The state name or state object you'd like to generate a url from.\n         * @param params An object of parameter values to fill the state's required parameters.\n         * @param options Options object. The options are:\n         *\n         * @returns {string} compiled state url\n         */\n        StateService.prototype.href = function (stateOrName, params, options) {\n            var defaultHrefOpts = {\n                lossy: true,\n                inherit: true,\n                absolute: false,\n                relative: this.$current,\n            };\n            options = defaults(options, defaultHrefOpts);\n            params = params || {};\n            var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n            if (!isDefined(state))\n                return null;\n            if (options.inherit)\n                params = this.params.$inherit(params, this.$current, state);\n            var nav = state && options.lossy ? state.navigable : state;\n            if (!nav || nav.url === undefined || nav.url === null) {\n                return null;\n            }\n            return this.router.urlRouter.href(nav.url, params, { absolute: options.absolute });\n        };\n        /**\n         * Sets or gets the default [[transitionTo]] error handler.\n         *\n         * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n         * This includes errors caused by resolves and transition hooks.\n         *\n         * Note:\n         * This handler does not receive certain Transition rejections.\n         * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n         *\n         * The built-in default error handler logs the error to the console.\n         *\n         * You can provide your own custom handler.\n         *\n         * #### Example:\n         * ```js\n         * stateService.defaultErrorHandler(function() {\n         *   // Do not log transitionTo errors\n         * });\n         * ```\n         *\n         * @param handler a global error handler function\n         * @returns the current global error handler\n         */\n        StateService.prototype.defaultErrorHandler = function (handler) {\n            return (this._defaultErrorHandler = handler || this._defaultErrorHandler);\n        };\n        StateService.prototype.get = function (stateOrName, base) {\n            var reg = this.router.stateRegistry;\n            if (arguments.length === 0)\n                return reg.get();\n            return reg.get(stateOrName, base || this.$current);\n        };\n        /**\n         * Lazy loads a state\n         *\n         * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n         *\n         * @param stateOrName the state that should be lazy loaded\n         * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n         * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n         * This noop transition is not actually run.\n         *\n         * @returns a promise to lazy load\n         */\n        StateService.prototype.lazyLoad = function (stateOrName, transition) {\n            var state = this.get(stateOrName);\n            if (!state || !state.lazyLoad)\n                throw new Error('Can not lazy load ' + stateOrName);\n            var currentPath = this.getCurrentPath();\n            var target = PathUtils.makeTargetState(this.router.stateRegistry, currentPath);\n            transition = transition || this.router.transitionService.create(currentPath, target);\n            return lazyLoadState(transition, state);\n        };\n        return StateService;\n    }());\n\n    /**\n     * # Transition subsystem\n     *\n     * This module contains APIs related to a Transition.\n     *\n     * See:\n     * - [[TransitionService]]\n     * - [[Transition]]\n     * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n     *\n     * @preferred @publicapi @module transition\n     */ /** */\n\n    /** @internalapi @module vanilla */ /** */\n    /**\n     * An angular1-like promise api\n     *\n     * This object implements four methods similar to the\n     * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n     *\n     * UI-Router evolved from an angular 1 library to a framework agnostic library.\n     * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n     *\n     * This API provides native ES6 promise support wrapped as a $q-like API.\n     * Internally, UI-Router uses this $q object to perform promise operations.\n     * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n     *\n     * $q-like promise api\n     */\n    var $q = {\n        /** Normalizes a value as a promise */\n        when: function (val$$1) { return new Promise(function (resolve, reject) { return resolve(val$$1); }); },\n        /** Normalizes a value as a promise rejection */\n        reject: function (val$$1) {\n            return new Promise(function (resolve, reject) {\n                reject(val$$1);\n            });\n        },\n        /** @returns a deferred object, which has `resolve` and `reject` functions */\n        defer: function () {\n            var deferred = {};\n            deferred.promise = new Promise(function (resolve, reject) {\n                deferred.resolve = resolve;\n                deferred.reject = reject;\n            });\n            return deferred;\n        },\n        /** Like Promise.all(), but also supports object key/promise notation like $q */\n        all: function (promises) {\n            if (isArray(promises)) {\n                return Promise.all(promises);\n            }\n            if (isObject(promises)) {\n                // Convert promises map to promises array.\n                // When each promise resolves, map it to a tuple { key: key, val: val }\n                var chain = Object.keys(promises).map(function (key) { return promises[key].then(function (val$$1) { return ({ key: key, val: val$$1 }); }); });\n                // Then wait for all promises to resolve, and convert them back to an object\n                return $q.all(chain).then(function (values$$1) {\n                    return values$$1.reduce(function (acc, tuple) {\n                        acc[tuple.key] = tuple.val;\n                        return acc;\n                    }, {});\n                });\n            }\n        },\n    };\n\n    /** @internalapi @module vanilla */ /** */\n    // globally available injectables\n    var globals = {};\n    var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\n    var ARGUMENT_NAMES = /([^\\s,]+)/g;\n    /**\n     * A basic angular1-like injector api\n     *\n     * This object implements four methods similar to the\n     * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n     *\n     * UI-Router evolved from an angular 1 library to a framework agnostic library.\n     * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n     *\n     * This object provides a naive implementation of a globally scoped dependency injection system.\n     * It supports the following DI approaches:\n     *\n     * ### Function parameter names\n     *\n     * A function's `.toString()` is called, and the parameter names are parsed.\n     * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n     *\n     * ```js\n     * function injectedFunction(FooService, BarService) {\n     *   // FooService and BarService are injected\n     * }\n     * ```\n     *\n     * ### Function annotation\n     *\n     * A function may be annotated with an array of dependency names as the `$inject` property.\n     *\n     * ```js\n     * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n     * function injectedFunction(fs, bs) {\n     *   // FooService and BarService are injected as fs and bs parameters\n     * }\n     * ```\n     *\n     * ### Array notation\n     *\n     * An array provides the names of the dependencies to inject (as strings).\n     * The function is the last element of the array.\n     *\n     * ```js\n     * [ 'FooService', 'BarService', function (fs, bs) {\n     *   // FooService and BarService are injected as fs and bs parameters\n     * }]\n     * ```\n     *\n     * @type {$InjectorLike}\n     */\n    var $injector = {\n        /** Gets an object from DI based on a string token */\n        get: function (name) { return globals[name]; },\n        /** Returns true if an object named `name` exists in global DI */\n        has: function (name) { return $injector.get(name) != null; },\n        /**\n         * Injects a function\n         *\n         * @param fn the function to inject\n         * @param context the function's `this` binding\n         * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n         */\n        invoke: function (fn, context, locals) {\n            var all$$1 = extend({}, globals, locals || {});\n            var params = $injector.annotate(fn);\n            var ensureExist = assertPredicate(function (key) { return all$$1.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n            var args = params.filter(ensureExist).map(function (x) { return all$$1[x]; });\n            if (isFunction(fn))\n                return fn.apply(context, args);\n            else\n                return fn.slice(-1)[0].apply(context, args);\n        },\n        /**\n         * Returns a function's dependencies\n         *\n         * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n         * @return an array of `string`s\n         */\n        annotate: function (fn) {\n            if (!isInjectable(fn))\n                throw new Error(\"Not an injectable function: \" + fn);\n            if (fn && fn.$inject)\n                return fn.$inject;\n            if (isArray(fn))\n                return fn.slice(0, -1);\n            var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n            var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n            return result || [];\n        },\n    };\n\n    /** @internalapi @module vanilla */ /** */\n    var keyValsToObjectR = function (accum, _a) {\n        var key = _a[0], val$$1 = _a[1];\n        if (!accum.hasOwnProperty(key)) {\n            accum[key] = val$$1;\n        }\n        else if (isArray(accum[key])) {\n            accum[key].push(val$$1);\n        }\n        else {\n            accum[key] = [accum[key], val$$1];\n        }\n        return accum;\n    };\n    var getParams = function (queryString) {\n        return queryString\n            .split('&')\n            .filter(identity)\n            .map(splitEqual)\n            .reduce(keyValsToObjectR, {});\n    };\n    function parseUrl$1(url) {\n        var orEmptyString = function (x) { return x || ''; };\n        var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n        var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n        return { path: path, search: search, hash: hash, url: url };\n    }\n    var buildUrl = function (loc) {\n        var path = loc.path();\n        var searchObject = loc.search();\n        var hash = loc.hash();\n        var search = Object.keys(searchObject)\n            .map(function (key) {\n            var param = searchObject[key];\n            var vals = isArray(param) ? param : [param];\n            return vals.map(function (val$$1) { return key + '=' + val$$1; });\n        })\n            .reduce(unnestR, [])\n            .join('&');\n        return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n    };\n    function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n        return function (uiRouter) {\n            var service = (uiRouter.locationService = new serviceClass(uiRouter));\n            var configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n            function dispose(router) {\n                router.dispose(service);\n                router.dispose(configuration);\n            }\n            return { name: name, service: service, configuration: configuration, dispose: dispose };\n        };\n    }\n\n    /** @internalapi @module vanilla */ /** */\n    /** A base `LocationServices` */\n    var BaseLocationServices = /** @class */ (function () {\n        function BaseLocationServices(router, fireAfterUpdate) {\n            var _this = this;\n            this.fireAfterUpdate = fireAfterUpdate;\n            this._listeners = [];\n            this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n            this.hash = function () { return parseUrl$1(_this._get()).hash; };\n            this.path = function () { return parseUrl$1(_this._get()).path; };\n            this.search = function () { return getParams(parseUrl$1(_this._get()).search); };\n            this._location = root.location;\n            this._history = root.history;\n        }\n        BaseLocationServices.prototype.url = function (url, replace) {\n            if (replace === void 0) { replace = true; }\n            if (isDefined(url) && url !== this._get()) {\n                this._set(null, null, url, replace);\n                if (this.fireAfterUpdate) {\n                    this._listeners.forEach(function (cb) { return cb({ url: url }); });\n                }\n            }\n            return buildUrl(this);\n        };\n        BaseLocationServices.prototype.onChange = function (cb) {\n            var _this = this;\n            this._listeners.push(cb);\n            return function () { return removeFrom(_this._listeners, cb); };\n        };\n        BaseLocationServices.prototype.dispose = function (router) {\n            deregAll(this._listeners);\n        };\n        return BaseLocationServices;\n    }());\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\n    var HashLocationService = /** @class */ (function (_super) {\n        __extends(HashLocationService, _super);\n        function HashLocationService(router) {\n            var _this = _super.call(this, router, false) || this;\n            root.addEventListener('hashchange', _this._listener, false);\n            return _this;\n        }\n        HashLocationService.prototype._get = function () {\n            return trimHashVal(this._location.hash);\n        };\n        HashLocationService.prototype._set = function (state, title, url, replace) {\n            this._location.hash = url;\n        };\n        HashLocationService.prototype.dispose = function (router) {\n            _super.prototype.dispose.call(this, router);\n            root.removeEventListener('hashchange', this._listener);\n        };\n        return HashLocationService;\n    }(BaseLocationServices));\n\n    var __extends$1 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /** A `LocationServices` that gets/sets the current location from an in-memory object */\n    var MemoryLocationService = /** @class */ (function (_super) {\n        __extends$1(MemoryLocationService, _super);\n        function MemoryLocationService(router) {\n            return _super.call(this, router, true) || this;\n        }\n        MemoryLocationService.prototype._get = function () {\n            return this._url;\n        };\n        MemoryLocationService.prototype._set = function (state, title, url, replace) {\n            this._url = url;\n        };\n        return MemoryLocationService;\n    }(BaseLocationServices));\n\n    var __extends$2 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    /**\n     * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n     *\n     * Uses `history.pushState` and `history.replaceState`\n     */\n    var PushStateLocationService = /** @class */ (function (_super) {\n        __extends$2(PushStateLocationService, _super);\n        function PushStateLocationService(router) {\n            var _this = _super.call(this, router, true) || this;\n            _this._config = router.urlService.config;\n            root.addEventListener('popstate', _this._listener, false);\n            return _this;\n        }\n        /**\n         * Gets the base prefix without:\n         * - trailing slash\n         * - trailing filename\n         * - protocol and hostname\n         *\n         * If <base href='/base/'>, this returns '/base'.\n         * If <base href='/foo/base/'>, this returns '/foo/base'.\n         * If <base href='/base/index.html'>, this returns '/base'.\n         * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n         * If <base href='/base'>, this returns ''.\n         * If <base href='http://localhost:8080'>, this returns ''.\n         * If <base href='http://localhost:8080/'>, this returns ''.\n         *\n         * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n         */\n        PushStateLocationService.prototype._getBasePrefix = function () {\n            return stripLastPathElement(this._config.baseHref());\n        };\n        PushStateLocationService.prototype._get = function () {\n            var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n            search = splitQuery(search)[1]; // strip ? if found\n            hash = splitHash(hash)[1]; // strip # if found\n            var basePrefix = this._getBasePrefix();\n            var exactBaseHrefMatch = pathname === this._config.baseHref();\n            var startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n            pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n            return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n        };\n        PushStateLocationService.prototype._set = function (state, title, url, replace) {\n            var basePrefix = this._getBasePrefix();\n            var slash = url && url[0] !== '/' ? '/' : '';\n            var fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n            if (replace) {\n                this._history.replaceState(state, title, fullUrl);\n            }\n            else {\n                this._history.pushState(state, title, fullUrl);\n            }\n        };\n        PushStateLocationService.prototype.dispose = function (router) {\n            _super.prototype.dispose.call(this, router);\n            root.removeEventListener('popstate', this._listener);\n        };\n        return PushStateLocationService;\n    }(BaseLocationServices));\n\n    /** A `LocationConfig` mock that gets/sets all config from an in-memory object */\n    var MemoryLocationConfig = /** @class */ (function () {\n        function MemoryLocationConfig() {\n            var _this = this;\n            this.dispose = noop;\n            this._baseHref = '';\n            this._port = 80;\n            this._protocol = 'http';\n            this._host = 'localhost';\n            this._hashPrefix = '';\n            this.port = function () { return _this._port; };\n            this.protocol = function () { return _this._protocol; };\n            this.host = function () { return _this._host; };\n            this.baseHref = function () { return _this._baseHref; };\n            this.html5Mode = function () { return false; };\n            this.hashPrefix = function (newval) { return (isDefined(newval) ? (_this._hashPrefix = newval) : _this._hashPrefix); };\n        }\n        return MemoryLocationConfig;\n    }());\n\n    /** @internalapi @module vanilla */\n    /** A `LocationConfig` that delegates to the browser's `location` object */\n    var BrowserLocationConfig = /** @class */ (function () {\n        function BrowserLocationConfig(router, _isHtml5) {\n            if (_isHtml5 === void 0) { _isHtml5 = false; }\n            this._isHtml5 = _isHtml5;\n            this._baseHref = undefined;\n            this._hashPrefix = '';\n        }\n        BrowserLocationConfig.prototype.port = function () {\n            if (location.port) {\n                return Number(location.port);\n            }\n            return this.protocol() === 'https' ? 443 : 80;\n        };\n        BrowserLocationConfig.prototype.protocol = function () {\n            return location.protocol.replace(/:/g, '');\n        };\n        BrowserLocationConfig.prototype.host = function () {\n            return location.hostname;\n        };\n        BrowserLocationConfig.prototype.html5Mode = function () {\n            return this._isHtml5;\n        };\n        BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n            return isDefined(newprefix) ? (this._hashPrefix = newprefix) : this._hashPrefix;\n        };\n        BrowserLocationConfig.prototype.baseHref = function (href) {\n            if (isDefined(href))\n                this._baseHref = href;\n            if (isUndefined(this._baseHref))\n                this._baseHref = this.getBaseHref();\n            return this._baseHref;\n        };\n        BrowserLocationConfig.prototype.getBaseHref = function () {\n            var baseTag = document.getElementsByTagName('base')[0];\n            if (baseTag && baseTag.href) {\n                return baseTag.href.replace(/^([^/:]*:)?\\/\\/[^/]*/, '');\n            }\n            return this._isHtml5 ? '/' : location.pathname || '/';\n        };\n        BrowserLocationConfig.prototype.dispose = function () { };\n        return BrowserLocationConfig;\n    }());\n\n    /** @internalapi @module vanilla */ /** */\n    function servicesPlugin(router) {\n        services.$injector = $injector;\n        services.$q = $q;\n        return { name: 'vanilla.services', $q: $q, $injector: $injector, dispose: function () { return null; } };\n    }\n    /** A `UIRouterPlugin` uses the browser hash to get/set the current location */\n    var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n    /** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\n    var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n    /** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\n    var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);\n\n    /** @internalapi @module vanilla */ /** */\n\n    /**\n     * # Core classes and interfaces\n     *\n     * The classes and interfaces that are core to ui-router and do not belong\n     * to a more specific subsystem (such as resolve).\n     *\n     * @preferred @publicapi @module core\n     */ /** */\n    /** @internalapi */\n    var UIRouterPluginBase = /** @class */ (function () {\n        function UIRouterPluginBase() {\n        }\n        UIRouterPluginBase.prototype.dispose = function (router) { };\n        return UIRouterPluginBase;\n    }());\n\n    /** @publicapi @module common */ /** */\n\n    var index = /*#__PURE__*/Object.freeze({\n        root: root,\n        fromJson: fromJson,\n        toJson: toJson,\n        forEach: forEach,\n        extend: extend,\n        equals: equals,\n        identity: identity,\n        noop: noop,\n        createProxyFunctions: createProxyFunctions,\n        inherit: inherit,\n        inArray: inArray,\n        _inArray: _inArray,\n        removeFrom: removeFrom,\n        _removeFrom: _removeFrom,\n        pushTo: pushTo,\n        _pushTo: _pushTo,\n        deregAll: deregAll,\n        defaults: defaults,\n        mergeR: mergeR,\n        ancestors: ancestors,\n        pick: pick,\n        omit: omit,\n        pluck: pluck,\n        filter: filter,\n        find: find,\n        mapObj: mapObj,\n        map: map,\n        values: values,\n        allTrueR: allTrueR,\n        anyTrueR: anyTrueR,\n        unnestR: unnestR,\n        flattenR: flattenR,\n        pushR: pushR,\n        uniqR: uniqR,\n        unnest: unnest,\n        flatten: flatten,\n        assertPredicate: assertPredicate,\n        assertMap: assertMap,\n        assertFn: assertFn,\n        pairs: pairs,\n        arrayTuples: arrayTuples,\n        applyPairs: applyPairs,\n        tail: tail,\n        copy: copy,\n        _extend: _extend,\n        silenceUncaughtInPromise: silenceUncaughtInPromise,\n        silentRejection: silentRejection,\n        makeStub: makeStub,\n        services: services,\n        Glob: Glob,\n        curry: curry,\n        compose: compose,\n        pipe: pipe,\n        prop: prop,\n        propEq: propEq,\n        parse: parse,\n        not: not,\n        and: and,\n        or: or,\n        all: all,\n        any: any,\n        is: is,\n        eq: eq,\n        val: val,\n        invoke: invoke,\n        pattern: pattern,\n        isUndefined: isUndefined,\n        isDefined: isDefined,\n        isNull: isNull,\n        isNullOrUndefined: isNullOrUndefined,\n        isFunction: isFunction,\n        isNumber: isNumber,\n        isString: isString,\n        isObject: isObject,\n        isArray: isArray,\n        isDate: isDate,\n        isRegExp: isRegExp,\n        isInjectable: isInjectable,\n        isPromise: isPromise,\n        Queue: Queue,\n        maxLength: maxLength,\n        padString: padString,\n        kebobString: kebobString,\n        functionToString: functionToString,\n        fnToString: fnToString,\n        stringify: stringify,\n        beforeAfterSubstr: beforeAfterSubstr,\n        hostRegex: hostRegex,\n        stripLastPathElement: stripLastPathElement,\n        splitHash: splitHash,\n        splitQuery: splitQuery,\n        splitEqual: splitEqual,\n        trimHashVal: trimHashVal,\n        splitOnDelim: splitOnDelim,\n        joinNeighborsR: joinNeighborsR,\n        get Category () { return exports.Category; },\n        Trace: Trace,\n        trace: trace,\n        get DefType () { return exports.DefType; },\n        Param: Param,\n        ParamTypes: ParamTypes,\n        StateParams: StateParams,\n        ParamType: ParamType,\n        PathNode: PathNode,\n        PathUtils: PathUtils,\n        resolvePolicies: resolvePolicies,\n        defaultResolvePolicy: defaultResolvePolicy,\n        Resolvable: Resolvable,\n        NATIVE_INJECTOR_TOKEN: NATIVE_INJECTOR_TOKEN,\n        ResolveContext: ResolveContext,\n        resolvablesBuilder: resolvablesBuilder,\n        StateBuilder: StateBuilder,\n        StateObject: StateObject,\n        StateMatcher: StateMatcher,\n        StateQueueManager: StateQueueManager,\n        StateRegistry: StateRegistry,\n        StateService: StateService,\n        TargetState: TargetState,\n        get TransitionHookPhase () { return exports.TransitionHookPhase; },\n        get TransitionHookScope () { return exports.TransitionHookScope; },\n        HookBuilder: HookBuilder,\n        matchState: matchState,\n        RegisteredHook: RegisteredHook,\n        makeEvent: makeEvent,\n        get RejectType () { return exports.RejectType; },\n        Rejection: Rejection,\n        Transition: Transition,\n        TransitionHook: TransitionHook,\n        TransitionEventType: TransitionEventType,\n        defaultTransOpts: defaultTransOpts,\n        TransitionService: TransitionService,\n        UrlRules: UrlRules,\n        UrlConfig: UrlConfig,\n        UrlMatcher: UrlMatcher,\n        ParamFactory: ParamFactory,\n        UrlMatcherFactory: UrlMatcherFactory,\n        UrlRouter: UrlRouter,\n        UrlRuleFactory: UrlRuleFactory,\n        BaseUrlRule: BaseUrlRule,\n        UrlService: UrlService,\n        ViewService: ViewService,\n        UIRouterGlobals: UIRouterGlobals,\n        UIRouter: UIRouter,\n        $q: $q,\n        $injector: $injector,\n        BaseLocationServices: BaseLocationServices,\n        HashLocationService: HashLocationService,\n        MemoryLocationService: MemoryLocationService,\n        PushStateLocationService: PushStateLocationService,\n        MemoryLocationConfig: MemoryLocationConfig,\n        BrowserLocationConfig: BrowserLocationConfig,\n        keyValsToObjectR: keyValsToObjectR,\n        getParams: getParams,\n        parseUrl: parseUrl$1,\n        buildUrl: buildUrl,\n        locationPluginFactory: locationPluginFactory,\n        servicesPlugin: servicesPlugin,\n        hashLocationPlugin: hashLocationPlugin,\n        pushStateLocationPlugin: pushStateLocationPlugin,\n        memoryLocationPlugin: memoryLocationPlugin,\n        UIRouterPluginBase: UIRouterPluginBase\n    });\n\n    /** @internalapi */\n    function getNg1ViewConfigFactory() {\n        var templateFactory = null;\n        return function (path, view) {\n            templateFactory = templateFactory || services.$injector.get('$templateFactory');\n            return [new Ng1ViewConfig(path, view, templateFactory)];\n        };\n    }\n    /** @internalapi */\n    var hasAnyKey = function (keys, obj) { return keys.reduce(function (acc, key) { return acc || isDefined(obj[key]); }, false); };\n    /**\n     * This is a [[StateBuilder.builder]] function for angular1 `views`.\n     *\n     * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n     * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n     *\n     * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n     * and applies the state-level configuration to a view named `$default`.\n     *\n     * @internalapi\n     */\n    function ng1ViewsBuilder(state) {\n        // Do not process root state\n        if (!state.parent)\n            return {};\n        var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n        // Do not allow a state to have both state-level props and also a `views: {}` property.\n        // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n        // However, the `$default` approach should not be mixed with a separate `views: ` block.\n        if (isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n            throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n                \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n                \"Move the following properties into a view (in the 'views' object): \" +\n                (\" \" + allViewKeys.filter(function (key) { return isDefined(state[key]); }).join(', ')));\n        }\n        var views = {}, viewsObject = state.views || { $default: pick(state, allViewKeys) };\n        forEach(viewsObject, function (config, name) {\n            // Account for views: { \"\": { template... } }\n            name = name || '$default';\n            // Account for views: { header: \"headerComponent\" }\n            if (isString(config))\n                config = { component: config };\n            // Make a shallow copy of the config object\n            config = extend({}, config);\n            // Do not allow a view to mix props for component-style view with props for template/controller-style view\n            if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n                throw new Error(\"Cannot combine: \" + compKeys.join('|') + \" with: \" + nonCompKeys.join('|') + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n            }\n            config.resolveAs = config.resolveAs || '$resolve';\n            config.$type = 'ng1';\n            config.$context = state;\n            config.$name = name;\n            var normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n            config.$uiViewName = normalized.uiViewName;\n            config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n            views[name] = config;\n        });\n        return views;\n    }\n    /** @hidden */\n    var id$1 = 0;\n    /** @internalapi */\n    var Ng1ViewConfig = /** @class */ (function () {\n        function Ng1ViewConfig(path, viewDecl, factory) {\n            var _this = this;\n            this.path = path;\n            this.viewDecl = viewDecl;\n            this.factory = factory;\n            this.$id = id$1++;\n            this.loaded = false;\n            this.getTemplate = function (uiView, context) {\n                return _this.component\n                    ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings)\n                    : _this.template;\n            };\n        }\n        Ng1ViewConfig.prototype.load = function () {\n            var _this = this;\n            var $q$$1 = services.$q;\n            var context = new ResolveContext(this.path);\n            var params = this.path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {});\n            var promises = {\n                template: $q$$1.when(this.factory.fromConfig(this.viewDecl, params, context)),\n                controller: $q$$1.when(this.getController(context)),\n            };\n            return $q$$1.all(promises).then(function (results) {\n                trace.traceViewServiceEvent('Loaded', _this);\n                _this.controller = results.controller;\n                extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n                return _this;\n            });\n        };\n        /**\n         * Gets the controller for a view configuration.\n         *\n         * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n         */\n        Ng1ViewConfig.prototype.getController = function (context) {\n            var provider = this.viewDecl.controllerProvider;\n            if (!isInjectable(provider))\n                return this.viewDecl.controller;\n            var deps = services.$injector.annotate(provider);\n            var providerFn = isArray(provider) ? tail(provider) : provider;\n            var resolvable = new Resolvable('', providerFn, deps);\n            return resolvable.get(context);\n        };\n        return Ng1ViewConfig;\n    }());\n\n    /** @publicapi @module view */ /** */\n    /**\n     * Service which manages loading of templates from a ViewConfig.\n     */\n    var TemplateFactory = /** @class */ (function () {\n        function TemplateFactory() {\n            var _this = this;\n            /** @hidden */ this._useHttp = ng.version.minor < 3;\n            /** @hidden */ this.$get = [\n                '$http',\n                '$templateCache',\n                '$injector',\n                function ($http, $templateCache, $injector$$1) {\n                    _this.$templateRequest = $injector$$1.has && $injector$$1.has('$templateRequest') && $injector$$1.get('$templateRequest');\n                    _this.$http = $http;\n                    _this.$templateCache = $templateCache;\n                    return _this;\n                },\n            ];\n        }\n        /** @hidden */\n        TemplateFactory.prototype.useHttpService = function (value) {\n            this._useHttp = value;\n        };\n        /**\n         * Creates a template from a configuration object.\n         *\n         * @param config Configuration object for which to load a template.\n         * The following properties are search in the specified order, and the first one\n         * that is defined is used to create the template:\n         *\n         * @param params  Parameters to pass to the template function.\n         * @param context The resolve context associated with the template's view\n         *\n         * @return {string|object}  The template html as a string, or a promise for\n         * that string,or `null` if no template is configured.\n         */\n        TemplateFactory.prototype.fromConfig = function (config, params, context) {\n            var defaultTemplate = '<ui-view></ui-view>';\n            var asTemplate = function (result) { return services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n            var asComponent = function (result) { return services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n            return isDefined(config.template)\n                ? asTemplate(this.fromString(config.template, params))\n                : isDefined(config.templateUrl)\n                    ? asTemplate(this.fromUrl(config.templateUrl, params))\n                    : isDefined(config.templateProvider)\n                        ? asTemplate(this.fromProvider(config.templateProvider, params, context))\n                        : isDefined(config.component)\n                            ? asComponent(config.component)\n                            : isDefined(config.componentProvider)\n                                ? asComponent(this.fromComponentProvider(config.componentProvider, params, context))\n                                : asTemplate(defaultTemplate);\n        };\n        /**\n         * Creates a template from a string or a function returning a string.\n         *\n         * @param template html template as a string or function that returns an html template as a string.\n         * @param params Parameters to pass to the template function.\n         *\n         * @return {string|object} The template html as a string, or a promise for that\n         * string.\n         */\n        TemplateFactory.prototype.fromString = function (template, params) {\n            return isFunction(template) ? template(params) : template;\n        };\n        /**\n         * Loads a template from the a URL via `$http` and `$templateCache`.\n         *\n         * @param {string|Function} url url of the template to load, or a function\n         * that returns a url.\n         * @param {Object} params Parameters to pass to the url function.\n         * @return {string|Promise.<string>} The template html as a string, or a promise\n         * for that string.\n         */\n        TemplateFactory.prototype.fromUrl = function (url, params) {\n            if (isFunction(url))\n                url = url(params);\n            if (url == null)\n                return null;\n            if (this._useHttp) {\n                return this.$http\n                    .get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                    .then(function (response) {\n                    return response.data;\n                });\n            }\n            return this.$templateRequest(url);\n        };\n        /**\n         * Creates a template by invoking an injectable provider function.\n         *\n         * @param provider Function to invoke via `locals`\n         * @param {Function} injectFn a function used to invoke the template provider\n         * @return {string|Promise.<string>} The template html as a string, or a promise\n         * for that string.\n         */\n        TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n            var deps = services.$injector.annotate(provider);\n            var providerFn = isArray(provider) ? tail(provider) : provider;\n            var resolvable = new Resolvable('', providerFn, deps);\n            return resolvable.get(context);\n        };\n        /**\n         * Creates a component's template by invoking an injectable provider function.\n         *\n         * @param provider Function to invoke via `locals`\n         * @param {Function} injectFn a function used to invoke the template provider\n         * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n         */\n        TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n            var deps = services.$injector.annotate(provider);\n            var providerFn = isArray(provider) ? tail(provider) : provider;\n            var resolvable = new Resolvable('', providerFn, deps);\n            return resolvable.get(context);\n        };\n        /**\n         * Creates a template from a component's name\n         *\n         * This implements route-to-component.\n         * It works by retrieving the component (directive) metadata from the injector.\n         * It analyses the component's bindings, then constructs a template that instantiates the component.\n         * The template wires input and output bindings to resolves or from the parent component.\n         *\n         * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n         * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n         * @param component {string} Component's name in camel case.\n         * @param bindings An object defining the component's bindings: {foo: '<'}\n         * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n         */\n        TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n            bindings = bindings || {};\n            // Bind once prefix\n            var prefix = ng.version.minor >= 3 ? '::' : '';\n            // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n            var kebob = function (camelCase) {\n                var kebobed = kebobString(camelCase);\n                return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n            };\n            var attributeTpl = function (input) {\n                var name = input.name, type = input.type;\n                var attrName = kebob(name);\n                // If the ui-view has an attribute which matches a binding on the routed component\n                // then pass that attribute through to the routed component template.\n                // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n                if (uiView.attr(attrName) && !bindings[name])\n                    return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n                var resolveName = bindings[name] || name;\n                // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n                // some-attr=\"{{ ::$resolve.someResolveName }}\"\n                if (type === '@')\n                    return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n                // Wire \"&\" callbacks to resolves that return a callback function\n                // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n                // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n                if (type === '&') {\n                    var res = context.getResolvable(resolveName);\n                    var fn = res && res.data;\n                    var args = (fn && services.$injector.annotate(fn)) || [];\n                    // account for array style injection, i.e., ['foo', function(foo) {}]\n                    var arrayIdxStr = isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                    return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(',') + \")'\";\n                }\n                // some-attr=\"::$resolve.someResolveName\"\n                return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n            };\n            var attrs = getComponentBindings(component)\n                .map(attributeTpl)\n                .join(' ');\n            var kebobName = kebob(component);\n            return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n        };\n        return TemplateFactory;\n    }());\n    // Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\n    function getComponentBindings(name) {\n        var cmpDefs = services.$injector.get(name + 'Directive'); // could be multiple\n        if (!cmpDefs || !cmpDefs.length)\n            throw new Error(\"Unable to find component named '\" + name + \"'\");\n        return cmpDefs.map(getBindings).reduce(unnestR, []);\n    }\n    // Given a directive definition, find its object input attributes\n    // Use different properties, depending on the type of directive (component, bindToController, normal)\n    var getBindings = function (def) {\n        if (isObject(def.bindToController))\n            return scopeBindings(def.bindToController);\n        return scopeBindings(def.scope);\n    };\n    // for ng 1.2 style, process the scope: { input: \"=foo\" }\n    // for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\n    var scopeBindings = function (bindingsObj) {\n        return Object.keys(bindingsObj || {})\n            // [ 'input', [ '=foo', '=', 'foo' ] ]\n            .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n            // skip malformed values\n            .filter(function (tuple) { return isDefined(tuple) && isArray(tuple[1]); })\n            // { name: ('foo' || 'input'), type: '=' }\n            .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); });\n    };\n\n    /** @publicapi @module ng1 */ /** */\n    /**\n     * The Angular 1 `StateProvider`\n     *\n     * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n     * on state.\n     *\n     * A state corresponds to a \"place\" in the application in terms of the overall UI and\n     * navigation. A state describes (via the controller / template / view properties) what\n     * the UI looks like and does at that place.\n     *\n     * States often have things in common, and the primary way of factoring out these\n     * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n     * nested states.\n     *\n     * The `$stateProvider` provides interfaces to declare these states for your app.\n     */\n    var StateProvider = /** @class */ (function () {\n        function StateProvider(stateRegistry, stateService) {\n            this.stateRegistry = stateRegistry;\n            this.stateService = stateService;\n            createProxyFunctions(val(StateProvider.prototype), this, val(this));\n        }\n        /**\n         * Decorates states when they are registered\n         *\n         * Allows you to extend (carefully) or override (at your own peril) the\n         * `stateBuilder` object used internally by [[StateRegistry]].\n         * This can be used to add custom functionality to ui-router,\n         * for example inferring templateUrl based on the state name.\n         *\n         * When passing only a name, it returns the current (original or decorated) builder\n         * function that matches `name`.\n         *\n         * The builder functions that can be decorated are listed below. Though not all\n         * necessarily have a good use case for decoration, that is up to you to decide.\n         *\n         * In addition, users can attach custom decorators, which will generate new\n         * properties within the state's internal definition. There is currently no clear\n         * use-case for this beyond accessing internal states (i.e. $state.$current),\n         * however, expect this to become increasingly relevant as we introduce additional\n         * meta-programming features.\n         *\n         * **Warning**: Decorators should not be interdependent because the order of\n         * execution of the builder functions in non-deterministic. Builder functions\n         * should only be dependent on the state definition object and super function.\n         *\n         *\n         * Existing builder functions and current return values:\n         *\n         * - **parent** `{object}` - returns the parent state object.\n         * - **data** `{object}` - returns state data, including any inherited data that is not\n         *   overridden by own values (if any).\n         * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n         *   or `null`.\n         * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n         *   navigable).\n         * - **params** `{object}` - returns an array of state params that are ensured to\n         *   be a super-set of parent's params.\n         * - **views** `{object}` - returns a views object where each key is an absolute view\n         *   name (i.e. \"viewName@stateName\") and each value is the config object\n         *   (template, controller) for the view. Even when you don't use the views object\n         *   explicitly on a state config, one is still created for you internally.\n         *   So by decorating this builder function you have access to decorating template\n         *   and controller properties.\n         * - **ownParams** `{object}` - returns an array of params that belong to the state,\n         *   not including any params defined by ancestor states.\n         * - **path** `{string}` - returns the full path from the root down to this state.\n         *   Needed for state activation.\n         * - **includes** `{object}` - returns an object that includes every state that\n         *   would pass a `$state.includes()` test.\n         *\n         * #### Example:\n         * Override the internal 'views' builder with a function that takes the state\n         * definition, and a reference to the internal function being overridden:\n         * ```js\n         * $stateProvider.decorator('views', function (state, parent) {\n         *   let result = {},\n         *       views = parent(state);\n         *\n         *   angular.forEach(views, function (config, name) {\n         *     let autoName = (state.name + '.' + name).replace('.', '/');\n         *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n         *     result[name] = config;\n         *   });\n         *   return result;\n         * });\n         *\n         * $stateProvider.state('home', {\n         *   views: {\n         *     'contact.list': { controller: 'ListController' },\n         *     'contact.item': { controller: 'ItemController' }\n         *   }\n         * });\n         * ```\n         *\n         *\n         * ```js\n         * // Auto-populates list and item views with /partials/home/contact/list.html,\n         * // and /partials/home/contact/item.html, respectively.\n         * $state.go('home');\n         * ```\n         *\n         * @param {string} name The name of the builder function to decorate.\n         * @param {object} func A function that is responsible for decorating the original\n         * builder function. The function receives two parameters:\n         *\n         *   - `{object}` - state - The state config object.\n         *   - `{object}` - super - The original builder function.\n         *\n         * @return {object} $stateProvider - $stateProvider instance\n         */\n        StateProvider.prototype.decorator = function (name, func) {\n            return this.stateRegistry.decorator(name, func) || this;\n        };\n        StateProvider.prototype.state = function (name, definition) {\n            if (isObject(name)) {\n                definition = name;\n            }\n            else {\n                definition.name = name;\n            }\n            this.stateRegistry.register(definition);\n            return this;\n        };\n        /**\n         * Registers an invalid state handler\n         *\n         * This is a passthrough to [[StateService.onInvalid]] for ng1.\n         */\n        StateProvider.prototype.onInvalid = function (callback) {\n            return this.stateService.onInvalid(callback);\n        };\n        return StateProvider;\n    }());\n\n    /** @publicapi @module ng1 */ /** */\n    /**\n     * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n     * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n     *\n     * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n     * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n     *\n     * @internalapi\n     */\n    var getStateHookBuilder = function (hookName) {\n        return function stateHookBuilder(stateObject, parentFn) {\n            var hook = stateObject[hookName];\n            var pathname = hookName === 'onExit' ? 'from' : 'to';\n            function decoratedNg1Hook(trans, state) {\n                var resolveContext = new ResolveContext(trans.treeChanges(pathname));\n                var subContext = resolveContext.subContext(state.$$state());\n                var locals = extend(getLocals(subContext), { $state$: state, $transition$: trans });\n                return services.$injector.invoke(hook, this, locals);\n            }\n            return hook ? decoratedNg1Hook : undefined;\n        };\n    };\n\n    /** @publicapi @module ng1 */ /** */\n    /**\n     * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n     * @internalapi\n     */\n    var Ng1LocationServices = /** @class */ (function () {\n        function Ng1LocationServices($locationProvider) {\n            // .onChange() registry\n            this._urlListeners = [];\n            this.$locationProvider = $locationProvider;\n            var _lp = val($locationProvider);\n            createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n        }\n        /**\n         * Applys ng1-specific path parameter encoding\n         *\n         * The Angular 1 `$location` service is a bit weird.\n         * It doesn't allow slashes to be encoded/decoded bi-directionally.\n         *\n         * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n         *\n         * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n         *\n         * @param router\n         */\n        Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n            var pathType = router.urlMatcherFactory.type('path');\n            pathType.encode = function (x) {\n                return x != null ? x.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : x;\n            };\n            pathType.decode = function (x) {\n                return x != null ? x.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : x;\n            };\n        };\n        Ng1LocationServices.prototype.dispose = function () { };\n        Ng1LocationServices.prototype.onChange = function (callback) {\n            var _this = this;\n            this._urlListeners.push(callback);\n            return function () { return removeFrom(_this._urlListeners)(callback); };\n        };\n        Ng1LocationServices.prototype.html5Mode = function () {\n            var html5Mode = this.$locationProvider.html5Mode();\n            html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n            return html5Mode && this.$sniffer.history;\n        };\n        Ng1LocationServices.prototype.baseHref = function () {\n            return this._baseHref || (this._baseHref = this.$browser.baseHref() || this.$window.location.pathname);\n        };\n        Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n            if (replace === void 0) { replace = false; }\n            if (isDefined(newUrl))\n                this.$location.url(newUrl);\n            if (replace)\n                this.$location.replace();\n            if (state)\n                this.$location.state(state);\n            return this.$location.url();\n        };\n        Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser, $window) {\n            var _this = this;\n            this.$location = $location;\n            this.$sniffer = $sniffer;\n            this.$browser = $browser;\n            this.$window = $window;\n            // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n            $rootScope.$on('$locationChangeSuccess', function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n            var _loc = val($location);\n            // Bind these LocationService functions to $location\n            createProxyFunctions(_loc, this, _loc, ['replace', 'path', 'search', 'hash']);\n            // Bind these LocationConfig functions to $location\n            createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n        };\n        return Ng1LocationServices;\n    }());\n\n    /** @publicapi @module url */ /** */\n    /**\n     * Manages rules for client-side URL\n     *\n     * ### Deprecation warning:\n     * This class is now considered to be an internal API\n     * Use the [[UrlService]] instead.\n     * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n     *\n     * This class manages the router rules for what to do when the URL changes.\n     *\n     * This provider remains for backwards compatibility.\n     *\n     * @internalapi\n     * @deprecated\n     */\n    var UrlRouterProvider = /** @class */ (function () {\n        /** @hidden */\n        function UrlRouterProvider(/** @hidden */ router) {\n            this.router = router;\n        }\n        UrlRouterProvider.injectableHandler = function (router, handler) {\n            return function (match) { return services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params }); };\n        };\n        /** @hidden */\n        UrlRouterProvider.prototype.$get = function () {\n            var urlService = this.router.urlService;\n            this.router.urlRouter.update(true);\n            if (!urlService.interceptDeferred)\n                urlService.listen();\n            return this.router.urlRouter;\n        };\n        /**\n         * Registers a url handler function.\n         *\n         * Registers a low level url handler (a `rule`).\n         * A rule detects specific URL patterns and returns a redirect, or performs some action.\n         *\n         * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n         *\n         * #### Example:\n         * ```js\n         * var app = angular.module('app', ['ui.router.router']);\n         *\n         * app.config(function ($urlRouterProvider) {\n         *   // Here's an example of how you might allow case insensitive urls\n         *   $urlRouterProvider.rule(function ($injector, $location) {\n         *     var path = $location.path(),\n         *         normalized = path.toLowerCase();\n         *\n         *     if (path !== normalized) {\n         *       return normalized;\n         *     }\n         *   });\n         * });\n         * ```\n         *\n         * @param ruleFn\n         * Handler function that takes `$injector` and `$location` services as arguments.\n         * You can use them to detect a url and return a different url as a string.\n         *\n         * @return [[UrlRouterProvider]] (`this`)\n         */\n        UrlRouterProvider.prototype.rule = function (ruleFn) {\n            var _this = this;\n            if (!isFunction(ruleFn))\n                throw new Error(\"'rule' must be a function\");\n            var match = function () { return ruleFn(services.$injector, _this.router.locationService); };\n            var rule = new BaseUrlRule(match, identity);\n            this.router.urlService.rules.rule(rule);\n            return this;\n        };\n        /**\n         * Defines the path or behavior to use when no url can be matched.\n         *\n         * #### Example:\n         * ```js\n         * var app = angular.module('app', ['ui.router.router']);\n         *\n         * app.config(function ($urlRouterProvider) {\n         *   // if the path doesn't match any of the urls you configured\n         *   // otherwise will take care of routing the user to the\n         *   // specified url\n         *   $urlRouterProvider.otherwise('/index');\n         *\n         *   // Example of using function rule as param\n         *   $urlRouterProvider.otherwise(function ($injector, $location) {\n         *     return '/a/valid/url';\n         *   });\n         * });\n         * ```\n         *\n         * @param rule\n         * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n         * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n         *\n         * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n         */\n        UrlRouterProvider.prototype.otherwise = function (rule) {\n            var _this = this;\n            var urlRules = this.router.urlService.rules;\n            if (isString(rule)) {\n                urlRules.otherwise(rule);\n            }\n            else if (isFunction(rule)) {\n                urlRules.otherwise(function () { return rule(services.$injector, _this.router.locationService); });\n            }\n            else {\n                throw new Error(\"'rule' must be a string or function\");\n            }\n            return this;\n        };\n        /**\n         * Registers a handler for a given url matching.\n         *\n         * If the handler is a string, it is\n         * treated as a redirect, and is interpolated according to the syntax of match\n         * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n         *\n         * If the handler is a function, it is injectable.\n         * It gets invoked if `$location` matches.\n         * You have the option of inject the match object as `$match`.\n         *\n         * The handler can return\n         *\n         * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n         *   will continue trying to find another one that matches.\n         * - **string** which is treated as a redirect and passed to `$location.url()`\n         * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n         *\n         * #### Example:\n         * ```js\n         * var app = angular.module('app', ['ui.router.router']);\n         *\n         * app.config(function ($urlRouterProvider) {\n         *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n         *     if ($state.$current.navigable !== state ||\n         *         !equalForKeys($match, $stateParams) {\n         *      $state.transitionTo(state, $match, false);\n         *     }\n         *   });\n         * });\n         * ```\n         *\n         * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n         * @param handler The path (or function that returns a path) that you want to redirect your user to.\n         * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n         *\n         * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n         */\n        UrlRouterProvider.prototype.when = function (what, handler) {\n            if (isArray(handler) || isFunction(handler)) {\n                handler = UrlRouterProvider.injectableHandler(this.router, handler);\n            }\n            this.router.urlService.rules.when(what, handler);\n            return this;\n        };\n        /**\n         * Disables monitoring of the URL.\n         *\n         * Call this method before UI-Router has bootstrapped.\n         * It will stop UI-Router from performing the initial url sync.\n         *\n         * This can be useful to perform some asynchronous initialization before the router starts.\n         * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n         *\n         * #### Example:\n         * ```js\n         * var app = angular.module('app', ['ui.router']);\n         *\n         * app.config(function ($urlRouterProvider) {\n         *   // Prevent $urlRouter from automatically intercepting URL changes;\n         *   $urlRouterProvider.deferIntercept();\n         * })\n         *\n         * app.run(function (MyService, $urlRouter, $http) {\n         *   $http.get(\"/stuff\").then(function(resp) {\n         *     MyService.doStuff(resp.data);\n         *     $urlRouter.listen();\n         *     $urlRouter.sync();\n         *   });\n         * });\n         * ```\n         *\n         * @param defer Indicates whether to defer location change interception.\n         *        Passing no parameter is equivalent to `true`.\n         */\n        UrlRouterProvider.prototype.deferIntercept = function (defer) {\n            this.router.urlService.deferIntercept(defer);\n        };\n        return UrlRouterProvider;\n    }());\n\n    /**\n     * # Angular 1 types\n     *\n     * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n     * The customizations to the core types for Angular UI-Router are documented here.\n     *\n     * The optional [[$resolve]] service is also documented here.\n     *\n     * @preferred @publicapi @module ng1\n     */ /** */\n    ng.module('ui.router.angular1', []);\n    var mod_init = ng.module('ui.router.init', ['ng']);\n    var mod_util = ng.module('ui.router.util', ['ui.router.init']);\n    var mod_rtr = ng.module('ui.router.router', ['ui.router.util']);\n    var mod_state = ng.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\n    var mod_main = ng.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\n    var mod_cmpt = ng.module('ui.router.compat', ['ui.router']); // tslint:disable-line\n    var router = null;\n    $uiRouterProvider.$inject = ['$locationProvider'];\n    /** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\n    function $uiRouterProvider($locationProvider) {\n        // Create a new instance of the Router when the $uiRouterProvider is initialized\n        router = this.router = new UIRouter();\n        router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n        // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n        router.stateRegistry.decorator('views', ng1ViewsBuilder);\n        router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\n        router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\n        router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\n        router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n        var ng1LocationService = (router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider));\n        Ng1LocationServices.monkeyPatchPathParameterType(router);\n        // backwards compat: also expose router instance as $uiRouterProvider.router\n        router['router'] = router;\n        router['$get'] = $get;\n        $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\n        function $get($location, $browser, $window, $sniffer, $rootScope, $http, $templateCache) {\n            ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\n            delete router['router'];\n            delete router['$get'];\n            return router;\n        }\n        return router;\n    }\n    var getProviderFor = function (serviceName) { return [\n        '$uiRouterProvider',\n        function ($urp) {\n            var service = $urp.router[serviceName];\n            service['$get'] = function () { return service; };\n            return service;\n        },\n    ]; };\n    // This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\n    runBlock.$inject = ['$injector', '$q', '$uiRouter'];\n    function runBlock($injector$$1, $q$$1, $uiRouter) {\n        services.$injector = $injector$$1;\n        services.$q = $q$$1;\n        // https://github.com/angular-ui/ui-router/issues/3678\n        if (!$injector$$1.hasOwnProperty('strictDi')) {\n            try {\n                $injector$$1.invoke(function (checkStrictDi) { });\n            }\n            catch (error) {\n                $injector$$1.strictDi = !!/strict mode/.exec(error && error.toString());\n            }\n        }\n        // The $injector is now available.\n        // Find any resolvables that had dependency annotation deferred\n        $uiRouter.stateRegistry\n            .get()\n            .map(function (x) { return x.$$state().resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (x) { return x.deps === 'deferred'; })\n            .forEach(function (resolvable) { return (resolvable.deps = $injector$$1.annotate(resolvable.resolveFn, $injector$$1.strictDi)); });\n    }\n    // $urlRouter service and $urlRouterProvider\n    var getUrlRouterProvider = function (uiRouter) { return (uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter)); };\n    // $state service and $stateProvider\n    // $urlRouter service and $urlRouterProvider\n    var getStateProvider = function () { return extend(router.stateProvider, { $get: function () { return router.stateService; } }); };\n    watchDigests.$inject = ['$rootScope'];\n    function watchDigests($rootScope) {\n        $rootScope.$watch(function () {\n            trace.approximateDigests++;\n        });\n    }\n    mod_init.provider('$uiRouter', $uiRouterProvider);\n    mod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\n    mod_util.provider('$urlService', getProviderFor('urlService'));\n    mod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\n    mod_util.provider('$templateFactory', function () { return new TemplateFactory(); });\n    mod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\n    mod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\n    mod_state.provider('$transitions', getProviderFor('transitionService'));\n    mod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\n    mod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\n    mod_main.factory('$view', function () { return router.viewService; });\n    mod_main.service('$trace', function () { return trace; });\n    mod_main.run(watchDigests);\n    mod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\n    mod_state.run(['$state', function ($state) { }]);\n    mod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\n    mod_init.run(runBlock);\n    /** @hidden TODO: find a place to move this */\n    var getLocals = function (ctx) {\n        var tokens = ctx.getTokens().filter(isString);\n        var tuples = tokens.map(function (key) {\n            var resolvable = ctx.getResolvable(key);\n            var waitPolicy = ctx.getPolicy(resolvable).async;\n            return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n        });\n        return tuples.reduce(applyPairs, {});\n    };\n\n    /**\n     * The current (or pending) State Parameters\n     *\n     * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n     *\n     * The values are not updated until *after* a `Transition` successfully completes.\n     *\n     * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n     *\n     * ### Deprecation warning:\n     *\n     * The value injected for `$stateParams` is different depending on where it is injected.\n     *\n     * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n     * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n     *\n     * Because of these confusing details, this service is deprecated.\n     *\n     * ### Instead of using the global `$stateParams` service object,\n     * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n     *\n     * ```js\n     * MyService.$inject = ['$uiRouterGlobals'];\n     * function MyService($uiRouterGlobals) {\n     *   return {\n     *     paramValues: function () {\n     *       return $uiRouterGlobals.params;\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * ### Instead of using the per-transition `$stateParams` object,\n     * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n     *\n     * ```js\n     * MyController.$inject = ['$transition$'];\n     * function MyController($transition$) {\n     *   var username = $transition$.params().username;\n     *   // .. do something with username\n     * }\n     * ```\n     *\n     * ---\n     *\n     * This object can be injected into other services.\n     *\n     * #### Deprecated Example:\n     * ```js\n     * SomeService.$inject = ['$http', '$stateParams'];\n     * function SomeService($http, $stateParams) {\n     *   return {\n     *     getUser: function() {\n     *       return $http.get('/api/users/' + $stateParams.username);\n     *     }\n     *   }\n     * };\n     * angular.service('SomeService', SomeService);\n     * ```\n     * @deprecated\n     */\n\n    /**\n     * # Angular 1 Directives\n     *\n     * These are the directives included in UI-Router for Angular 1.\n     * These directives are used in templates to create viewports and link/navigate to states.\n     *\n     * @preferred @publicapi @module directives\n     */ /** */\n    /** @hidden */\n    function parseStateRef(ref) {\n        var parsed;\n        var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/);\n        if (paramsOnly)\n            ref = '(' + paramsOnly[1] + ')';\n        parsed = ref.replace(/\\n/g, ' ').match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n        if (!parsed || parsed.length !== 4)\n            throw new Error(\"Invalid state ref '\" + ref + \"'\");\n        return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n    }\n    /** @hidden */\n    function stateContext(el) {\n        var $uiView = el.parent().inheritedData('$uiView');\n        var path = parse('$cfg.path')($uiView);\n        return path ? tail(path).state.name : undefined;\n    }\n    /** @hidden */\n    function processedDef($state, $element, def) {\n        var uiState = def.uiState || $state.current.name;\n        var uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\n        var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n        return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n    }\n    /** @hidden */\n    function getTypeInfo(el) {\n        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n        var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n        var isForm = el[0].nodeName === 'FORM';\n        return {\n            attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',\n            isAnchor: el.prop('tagName').toUpperCase() === 'A',\n            clickable: !isForm,\n        };\n    }\n    /** @hidden */\n    function clickHook(el, $state, $timeout, type, getDef) {\n        return function (e) {\n            var button = e.which || e.button, target = getDef();\n            if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n                // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n                var transition_1 = $timeout(function () {\n                    if (!el.attr('disabled')) {\n                        $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n                    }\n                });\n                e.preventDefault();\n                // if the state has no URL, ignore one preventDefault from the <a> directive.\n                var ignorePreventDefaultCount_1 = type.isAnchor && !target.href ? 1 : 0;\n                e.preventDefault = function () {\n                    if (ignorePreventDefaultCount_1-- <= 0)\n                        $timeout.cancel(transition_1);\n                };\n            }\n        };\n    }\n    /** @hidden */\n    function defaultOpts(el, $state) {\n        return {\n            relative: stateContext(el) || $state.$current,\n            inherit: true,\n            source: 'sref',\n        };\n    }\n    /** @hidden */\n    function bindEvents(element, scope, hookFn, uiStateOpts) {\n        var events;\n        if (uiStateOpts) {\n            events = uiStateOpts.events;\n        }\n        if (!isArray(events)) {\n            events = ['click'];\n        }\n        var on = element.on ? 'on' : 'bind';\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n            var event_1 = events_1[_i];\n            element[on](event_1, hookFn);\n        }\n        scope.$on('$destroy', function () {\n            var off = element.off ? 'off' : 'unbind';\n            for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n                var event_2 = events_2[_i];\n                element[off](event_2, hookFn);\n            }\n        });\n    }\n    /**\n     * `ui-sref`: A directive for linking to a state\n     *\n     * A directive which links to a state (and optionally, parameters).\n     * When clicked, this directive activates the linked state with the supplied parameter values.\n     *\n     * ### Linked State\n     * The attribute value of the `ui-sref` is the name of the state to link to.\n     *\n     * #### Example:\n     * This will activate the `home` state when the link is clicked.\n     * ```html\n     * <a ui-sref=\"home\">Home</a>\n     * ```\n     *\n     * ### Relative Links\n     * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n     * You just need to be aware that the path is relative to the state that *created* the link.\n     * This allows a state to create a relative `ui-sref` which always targets the same destination.\n     *\n     * #### Example:\n     * Both these links are relative to the parent state, even when a child state is currently active.\n     * ```html\n     * <a ui-sref=\".child1\">child 1 state</a>\n     * <a ui-sref=\".child2\">child 2 state</a>\n     * ```\n     *\n     * This link activates the parent state.\n     * ```html\n     * <a ui-sref=\"^\">Return</a>\n     * ```\n     *\n     * ### hrefs\n     * If the linked state has a URL, the directive will automatically generate and\n     * update the `href` attribute (using the [[StateService.href]]  method).\n     *\n     * #### Example:\n     * Assuming the `users` state has a url of `/users/`\n     * ```html\n     * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n     * ```\n     *\n     * ### Parameter Values\n     * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n     * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n     * The content inside the parentheses is an expression, evaluated to the parameter values.\n     *\n     * #### Example:\n     * This example renders a list of links to users.\n     * The state's `userId` parameter value comes from each user's `user.id` property.\n     * ```html\n     * <li ng-repeat=\"user in users\">\n     *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n     * </li>\n     * ```\n     *\n     * Note:\n     * The parameter values expression is `$watch`ed for updates.\n     *\n     * ### Transition Options\n     * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n     * Options are restricted to `location`, `inherit`, and `reload`.\n     *\n     * #### Example:\n     * ```html\n     * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n     * ```\n     *\n     * ### Other DOM Events\n     *\n     * You can also customize which DOM events to respond to (instead of `click`) by\n     * providing an `events` array in the `ui-sref-opts` attribute.\n     *\n     * #### Example:\n     * ```html\n     * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n     * ```\n     *\n     * ### Highlighting the active link\n     * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n     *\n     * ### Examples\n     * If you have the following template:\n     *\n     * ```html\n     * <a ui-sref=\"home\">Home</a>\n     * <a ui-sref=\"about\">About</a>\n     * <a ui-sref=\"{page: 2}\">Next page</a>\n     *\n     * <ul>\n     *     <li ng-repeat=\"contact in contacts\">\n     *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n     *     </li>\n     * </ul>\n     * ```\n     *\n     * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n     *\n     * ```html\n     * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n     * <a href=\"#/about\" ui-sref=\"about\">About</a>\n     * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n     *\n     * <ul>\n     *     <li ng-repeat=\"contact in contacts\">\n     *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n     *     </li>\n     *     <li ng-repeat=\"contact in contacts\">\n     *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n     *     </li>\n     *     <li ng-repeat=\"contact in contacts\">\n     *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n     *     </li>\n     * </ul>\n     *\n     * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n     * ```\n     *\n     * ### Notes\n     *\n     * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n     * #### Example:\n     * Sets the `lang` parameter to `en` and remains on the same state.\n     *\n     * ```html\n     * <a ui-sref=\"{ lang: 'en' }\">English</a>\n     * ```\n     *\n     * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n     *\n     * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n     * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n     */\n    var uiSrefDirective;\n    uiSrefDirective = [\n        '$uiRouter',\n        '$timeout',\n        function $StateRefDirective($uiRouter, $timeout) {\n            var $state = $uiRouter.stateService;\n            return {\n                restrict: 'A',\n                require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n                link: function (scope, element, attrs, uiSrefActive) {\n                    var type = getTypeInfo(element);\n                    var active = uiSrefActive[1] || uiSrefActive[0];\n                    var unlinkInfoFn = null;\n                    var hookFn;\n                    var rawDef = {};\n                    var getDef = function () { return processedDef($state, element, rawDef); };\n                    var ref = parseStateRef(attrs.uiSref);\n                    rawDef.uiState = ref.state;\n                    rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                    function update() {\n                        var def = getDef();\n                        if (unlinkInfoFn)\n                            unlinkInfoFn();\n                        if (active)\n                            unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                        if (def.href != null)\n                            attrs.$set(type.attr, def.href);\n                    }\n                    if (ref.paramExpr) {\n                        scope.$watch(ref.paramExpr, function (val$$1) {\n                            rawDef.uiStateParams = extend({}, val$$1);\n                            update();\n                        }, true);\n                        rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\n                    }\n                    update();\n                    scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                    scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                    if (!type.clickable)\n                        return;\n                    hookFn = clickHook(element, $state, $timeout, type, getDef);\n                    bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n                },\n            };\n        },\n    ];\n    /**\n     * `ui-state`: A fully dynamic directive for linking to a state\n     *\n     * A directive which links to a state (and optionally, parameters).\n     * When clicked, this directive activates the linked state with the supplied parameter values.\n     *\n     * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n     *\n     * A directive which links to a state (and optionally, parameters).\n     * When clicked, this directive activates the linked state with the supplied parameter values.\n     *\n     * ### Linked State\n     * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n     * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n     *\n     * #### Example:\n     * Create a list of links.\n     * ```html\n     * <li ng-repeat=\"link in navlinks\">\n     *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n     * </li>\n     * ```\n     *\n     * ### Relative Links\n     * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n     * You just need to be aware that the path is relative to the state that *created* the link.\n     * This allows a state to create relative `ui-state` which always targets the same destination.\n     *\n     * ### hrefs\n     * If the linked state has a URL, the directive will automatically generate and\n     * update the `href` attribute (using the [[StateService.href]]  method).\n     *\n     * ### Parameter Values\n     * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n     * Param values should be provided using the `ui-state-params` attribute.\n     * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n     *\n     * #### Example:\n     * This example renders a list of links with param values.\n     * The state's `userId` parameter value comes from each user's `user.id` property.\n     * ```html\n     * <li ng-repeat=\"link in navlinks\">\n     *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n     * </li>\n     * ```\n     *\n     * ### Transition Options\n     * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n     * Options are restricted to `location`, `inherit`, and `reload`.\n     * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n     *\n     * #### Example:\n     * ```html\n     * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n     * ```\n     *\n     * ### Other DOM Events\n     *\n     * You can also customize which DOM events to respond to (instead of `click`) by\n     * providing an `events` array in the `ui-state-opts` attribute.\n     *\n     * #### Example:\n     * ```html\n     * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n     * ```\n     *\n     * ### Highlighting the active link\n     * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n     *\n     * ### Notes\n     *\n     * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n     *   However, it might be simpler to use [[uiSref]] parameter-only links.\n     *\n     * #### Example:\n     * Sets the `lang` parameter to `en` and remains on the same state.\n     *\n     * ```html\n     * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n     * ```\n     *\n     * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n     * ```\n     */\n    var uiStateDirective;\n    uiStateDirective = [\n        '$uiRouter',\n        '$timeout',\n        function $StateRefDynamicDirective($uiRouter, $timeout) {\n            var $state = $uiRouter.stateService;\n            return {\n                restrict: 'A',\n                require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n                link: function (scope, element, attrs, uiSrefActive) {\n                    var type = getTypeInfo(element);\n                    var active = uiSrefActive[1] || uiSrefActive[0];\n                    var unlinkInfoFn = null;\n                    var hookFn;\n                    var rawDef = {};\n                    var getDef = function () { return processedDef($state, element, rawDef); };\n                    var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                    var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return ((acc[attr] = noop), acc); }, {});\n                    function update() {\n                        var def = getDef();\n                        if (unlinkInfoFn)\n                            unlinkInfoFn();\n                        if (active)\n                            unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                        if (def.href != null)\n                            attrs.$set(type.attr, def.href);\n                    }\n                    inputAttrs.forEach(function (field) {\n                        rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                        attrs.$observe(field, function (expr) {\n                            watchDeregFns[field]();\n                            watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                                rawDef[field] = newval;\n                                update();\n                            }, true);\n                        });\n                    });\n                    update();\n                    scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                    scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                    if (!type.clickable)\n                        return;\n                    hookFn = clickHook(element, $state, $timeout, type, getDef);\n                    bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n                },\n            };\n        },\n    ];\n    /**\n     * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n     *\n     * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n     * related directive's state is active (and remove them when it is inactive).\n     *\n     * The primary use-case is to highlight the active link in navigation menus,\n     * distinguishing it from the inactive menu items.\n     *\n     * ### Linking to a `ui-sref` or `ui-state`\n     * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n     * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n     *\n     * ### Matching\n     *\n     * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n     * This is a \"fuzzy match\" which uses [[StateService.includes]].\n     *\n     * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n     * This is an \"exact match\" which uses [[StateService.is]].\n     *\n     * ### Parameter values\n     * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n     * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n     *\n     * #### Example:\n     * ```html\n     * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n     *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n     * </li>\n     * ```\n     *\n     * ### Examples\n     *\n     * Given the following template:\n     * #### Example:\n     * ```html\n     * <ul>\n     *   <li ui-sref-active=\"active\" class=\"item\">\n     *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n     *   </li>\n     * </ul>\n     * ```\n     *\n     * When the app state is `app.user` (or any child state),\n     * and contains the state parameter \"user\" with value \"bilbobaggins\",\n     * the resulting HTML will appear as (note the 'active' class):\n     *\n     * ```html\n     * <ul>\n     *   <li ui-sref-active=\"active\" class=\"item active\">\n     *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n     *   </li>\n     * </ul>\n     * ```\n     *\n     * ### Glob mode\n     *\n     * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n     * The objects keys represent active class names and values represent the respective state names/globs.\n     * `ui-sref-active` will match if the current active state **includes** any of\n     * the specified state names/globs, even the abstract ones.\n     *\n     * #### Example:\n     * Given the following template, with \"admin\" being an abstract state:\n     * ```html\n     * <div ui-sref-active=\"{'active': 'admin.**'}\">\n     *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n     * </div>\n     * ```\n     *\n     * Arrays are also supported as values in the `ngClass`-like interface.\n     * This allows multiple states to add `active` class.\n     *\n     * #### Example:\n     * Given the following template, with \"admin.roles\" being the current state, the class will be added too:\n     * ```html\n     * <div ui-sref-active=\"{'active': ['owner.**', 'admin.**']}\">\n     *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n     * </div>\n     * ```\n     *\n     * When the current state is \"admin.roles\" the \"active\" class will be applied to both the `<div>` and `<a>` elements.\n     * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n     *\n     * ### Notes:\n     *\n     * - The class name is interpolated **once** during the directives link time (any further changes to the\n     * interpolated value are ignored).\n     *\n     * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n     */\n    var uiSrefActiveDirective;\n    uiSrefActiveDirective = [\n        '$state',\n        '$stateParams',\n        '$interpolate',\n        '$uiRouter',\n        function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n            return {\n                restrict: 'A',\n                controller: [\n                    '$scope',\n                    '$element',\n                    '$attrs',\n                    function ($scope, $element, $attrs) {\n                        var states = [];\n                        var activeEqClass;\n                        var uiSrefActive;\n                        // There probably isn't much point in $observing this\n                        // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                        // slight difference in logic routing\n                        activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                        try {\n                            uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                        }\n                        catch (e) {\n                            // Do nothing. uiSrefActive is not a valid expression.\n                            // Fall back to using $interpolate below\n                        }\n                        uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                        setStatesFromDefinitionObject(uiSrefActive);\n                        // Allow uiSref to communicate with uiSrefActive[Equals]\n                        this.$$addStateInfo = function (newState, newParams) {\n                            // we already got an explicit state provided by ui-sref-active, so we\n                            // shadow the one that comes from ui-sref\n                            if (isObject(uiSrefActive) && states.length > 0) {\n                                return;\n                            }\n                            var deregister = addState(newState, newParams, uiSrefActive);\n                            update();\n                            return deregister;\n                        };\n                        function updateAfterTransition(trans) {\n                            trans.promise.then(update, noop);\n                        }\n                        $scope.$on('$destroy', setupEventListeners());\n                        if ($uiRouter.globals.transition) {\n                            updateAfterTransition($uiRouter.globals.transition);\n                        }\n                        function setupEventListeners() {\n                            var deregisterStatesChangedListener = $uiRouter.stateRegistry.onStatesChanged(handleStatesChanged);\n                            var deregisterOnStartListener = $uiRouter.transitionService.onStart({}, updateAfterTransition);\n                            var deregisterStateChangeSuccessListener = $scope.$on('$stateChangeSuccess', update);\n                            return function cleanUp() {\n                                deregisterStatesChangedListener();\n                                deregisterOnStartListener();\n                                deregisterStateChangeSuccessListener();\n                            };\n                        }\n                        function handleStatesChanged() {\n                            setStatesFromDefinitionObject(uiSrefActive);\n                        }\n                        function setStatesFromDefinitionObject(statesDefinition) {\n                            if (isObject(statesDefinition)) {\n                                states = [];\n                                forEach(statesDefinition, function (stateOrName, activeClass) {\n                                    // Helper function to abstract adding state.\n                                    var addStateForClass = function (stateOrName, activeClass) {\n                                        var ref = parseStateRef(stateOrName);\n                                        addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                                    };\n                                    if (isString(stateOrName)) {\n                                        // If state is string, just add it.\n                                        addStateForClass(stateOrName, activeClass);\n                                    }\n                                    else if (isArray(stateOrName)) {\n                                        // If state is an array, iterate over it and add each array item individually.\n                                        forEach(stateOrName, function (stateOrName) {\n                                            addStateForClass(stateOrName, activeClass);\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                        function addState(stateName, stateParams, activeClass) {\n                            var state = $state.get(stateName, stateContext($element));\n                            var stateInfo = {\n                                state: state || { name: stateName },\n                                params: stateParams,\n                                activeClass: activeClass,\n                            };\n                            states.push(stateInfo);\n                            return function removeState() {\n                                removeFrom(states)(stateInfo);\n                            };\n                        }\n                        // Update route state\n                        function update() {\n                            var splitClasses = function (str) { return str.split(/\\s/).filter(identity); };\n                            var getClasses = function (stateList) {\n                                return stateList\n                                    .map(function (x) { return x.activeClass; })\n                                    .map(splitClasses)\n                                    .reduce(unnestR, []);\n                            };\n                            var allClasses = getClasses(states)\n                                .concat(splitClasses(activeEqClass))\n                                .reduce(uniqR, []);\n                            var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                            var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                            var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                            var addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\n                            var removeClasses = allClasses.filter(function (cls) { return !inArray(addClasses, cls); });\n                            $scope.$evalAsync(function () {\n                                addClasses.forEach(function (className) { return $element.addClass(className); });\n                                removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                            });\n                        }\n                        update();\n                    },\n                ],\n            };\n        },\n    ];\n    ng\n        .module('ui.router.state')\n        .directive('uiSref', uiSrefDirective)\n        .directive('uiSrefActive', uiSrefActiveDirective)\n        .directive('uiSrefActiveEq', uiSrefActiveDirective)\n        .directive('uiState', uiStateDirective);\n\n    /** @publicapi @module ng1 */ /** */\n    /**\n     * `isState` Filter: truthy if the current state is the parameter\n     *\n     * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n     *\n     * #### Example:\n     * ```html\n     * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n     * ```\n     */\n    $IsStateFilter.$inject = ['$state'];\n    function $IsStateFilter($state) {\n        var isFilter = function (state, params, options) {\n            return $state.is(state, params, options);\n        };\n        isFilter.$stateful = true;\n        return isFilter;\n    }\n    /**\n     * `includedByState` Filter: truthy if the current state includes the parameter\n     *\n     * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n     *\n     * #### Example:\n     * ```html\n     * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n     * ```\n     */\n    $IncludedByStateFilter.$inject = ['$state'];\n    function $IncludedByStateFilter($state) {\n        var includesFilter = function (state, params, options) {\n            return $state.includes(state, params, options);\n        };\n        includesFilter.$stateful = true;\n        return includesFilter;\n    }\n    ng\n        .module('ui.router.state')\n        .filter('isState', $IsStateFilter)\n        .filter('includedByState', $IncludedByStateFilter);\n\n    /** @publicapi @module directives */ /** */\n    /**\n     * `ui-view`: A viewport directive which is filled in by a view from the active state.\n     *\n     * ### Attributes\n     *\n     * - `name`: (Optional) A view name.\n     *   The name should be unique amongst the other views in the same state.\n     *   You can have views of the same name that live in different states.\n     *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n     *\n     * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n     *   Uses [[$uiViewScroll]] to do the scrolling.\n     *\n     * - `onload`: Expression to evaluate whenever the view updates.\n     *\n     * #### Example:\n     * A view can be unnamed or named.\n     * ```html\n     * <!-- Unnamed -->\n     * <div ui-view></div>\n     *\n     * <!-- Named -->\n     * <div ui-view=\"viewName\"></div>\n     *\n     * <!-- Named (different style) -->\n     * <ui-view name=\"viewName\"></ui-view>\n     * ```\n     *\n     * You can only have one unnamed view within any template (or root html). If you are only using a\n     * single view and it is unnamed then you can populate it like so:\n     *\n     * ```html\n     * <div ui-view></div>\n     * $stateProvider.state(\"home\", {\n     *   template: \"<h1>HELLO!</h1>\"\n     * })\n     * ```\n     *\n     * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n     * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n     *\n     * ```js\n     * $stateProvider.state(\"home\", {\n     *   views: {\n     *     \"\": {\n     *       template: \"<h1>HELLO!</h1>\"\n     *     }\n     *   }\n     * })\n     * ```\n     *\n     * But typically you'll only use the views property if you name your view or have more than one view\n     * in the same template. There's not really a compelling reason to name a view if its the only one,\n     * but you could if you wanted, like so:\n     *\n     * ```html\n     * <div ui-view=\"main\"></div>\n     * ```\n     *\n     * ```js\n     * $stateProvider.state(\"home\", {\n     *   views: {\n     *     \"main\": {\n     *       template: \"<h1>HELLO!</h1>\"\n     *     }\n     *   }\n     * })\n     * ```\n     *\n     * Really though, you'll use views to set up multiple views:\n     *\n     * ```html\n     * <div ui-view></div>\n     * <div ui-view=\"chart\"></div>\n     * <div ui-view=\"data\"></div>\n     * ```\n     *\n     * ```js\n     * $stateProvider.state(\"home\", {\n     *   views: {\n     *     \"\": {\n     *       template: \"<h1>HELLO!</h1>\"\n     *     },\n     *     \"chart\": {\n     *       template: \"<chart_thing/>\"\n     *     },\n     *     \"data\": {\n     *       template: \"<data_thing/>\"\n     *     }\n     *   }\n     * })\n     * ```\n     *\n     * #### Examples for `autoscroll`:\n     * ```html\n     * <!-- If autoscroll present with no expression,\n     *      then scroll ui-view into view -->\n     * <ui-view autoscroll/>\n     *\n     * <!-- If autoscroll present with valid expression,\n     *      then scroll ui-view into view if expression evaluates to true -->\n     * <ui-view autoscroll='true'/>\n     * <ui-view autoscroll='false'/>\n     * <ui-view autoscroll='scopeVariable'/>\n     * ```\n     *\n     * Resolve data:\n     *\n     * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n     * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n     *\n     * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n     * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n     * depends on `$resolve` data.\n     *\n     * #### Example:\n     * ```js\n     * $stateProvider.state('home', {\n     *   template: '<my-component user=\"$resolve.user\"></my-component>',\n     *   resolve: {\n     *     user: function(UserService) { return UserService.fetchUser(); }\n     *   }\n     * });\n     * ```\n     */\n    var uiView;\n    uiView = [\n        '$view',\n        '$animate',\n        '$uiViewScroll',\n        '$interpolate',\n        '$q',\n        function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q$$1) {\n            function getRenderer(attrs, scope) {\n                return {\n                    enter: function (element, target, cb) {\n                        if (ng.version.minor > 2) {\n                            $animate.enter(element, null, target).then(cb);\n                        }\n                        else {\n                            $animate.enter(element, null, target, cb);\n                        }\n                    },\n                    leave: function (element, cb) {\n                        if (ng.version.minor > 2) {\n                            $animate.leave(element).then(cb);\n                        }\n                        else {\n                            $animate.leave(element, cb);\n                        }\n                    },\n                };\n            }\n            function configsEqual(config1, config2) {\n                return config1 === config2;\n            }\n            var rootData = {\n                $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n                $uiView: {},\n            };\n            var directive = {\n                count: 0,\n                restrict: 'ECA',\n                terminal: true,\n                priority: 400,\n                transclude: 'element',\n                compile: function (tElement, tAttrs, $transclude) {\n                    return function (scope, $element, attrs) {\n                        var onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                        var previousEl, currentEl, currentScope, viewConfig, unregister;\n                        var activeUIView = {\n                            $type: 'ng1',\n                            id: directive.count++,\n                            name: name,\n                            fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + '.' + name : name,\n                            config: null,\n                            configUpdated: configUpdatedCallback,\n                            get creationContext() {\n                                // The context in which this ui-view \"tag\" was created\n                                var fromParentTagConfig = parse('$cfg.viewDecl.$context')(inherited);\n                                // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                                // See https://github.com/angular-ui/ui-router/issues/3355\n                                var fromParentTag = parse('$uiView.creationContext')(inherited);\n                                return fromParentTagConfig || fromParentTag;\n                            },\n                        };\n                        trace.traceUIViewEvent('Linking', activeUIView);\n                        function configUpdatedCallback(config) {\n                            if (config && !(config instanceof Ng1ViewConfig))\n                                return;\n                            if (configsEqual(viewConfig, config))\n                                return;\n                            trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                            viewConfig = config;\n                            updateView(config);\n                        }\n                        $element.data('$uiView', { $uiView: activeUIView });\n                        updateView();\n                        unregister = $view.registerUIView(activeUIView);\n                        scope.$on('$destroy', function () {\n                            trace.traceUIViewEvent('Destroying/Unregistering', activeUIView);\n                            unregister();\n                        });\n                        function cleanupLastView() {\n                            if (previousEl) {\n                                trace.traceUIViewEvent('Removing (previous) el', previousEl.data('$uiView'));\n                                previousEl.remove();\n                                previousEl = null;\n                            }\n                            if (currentScope) {\n                                trace.traceUIViewEvent('Destroying scope', activeUIView);\n                                currentScope.$destroy();\n                                currentScope = null;\n                            }\n                            if (currentEl) {\n                                var _viewData_1 = currentEl.data('$uiViewAnim');\n                                trace.traceUIViewEvent('Animate out', _viewData_1);\n                                renderer.leave(currentEl, function () {\n                                    _viewData_1.$$animLeave.resolve();\n                                    previousEl = null;\n                                });\n                                previousEl = currentEl;\n                                currentEl = null;\n                            }\n                        }\n                        function updateView(config) {\n                            var newScope = scope.$new();\n                            var animEnter = $q$$1.defer(), animLeave = $q$$1.defer();\n                            var $uiViewData = {\n                                $cfg: config,\n                                $uiView: activeUIView,\n                            };\n                            var $uiViewAnim = {\n                                $animEnter: animEnter.promise,\n                                $animLeave: animLeave.promise,\n                                $$animLeave: animLeave,\n                            };\n                            /**\n                             * @ngdoc event\n                             * @name ui.router.state.directive:ui-view#$viewContentLoading\n                             * @eventOf ui.router.state.directive:ui-view\n                             * @eventType emits on ui-view directive scope\n                             * @description\n                             *\n                             * Fired once the view **begins loading**, *before* the DOM is rendered.\n                             *\n                             * @param {Object} event Event object.\n                             * @param {string} viewName Name of the view.\n                             */\n                            newScope.$emit('$viewContentLoading', name);\n                            var cloned = $transclude(newScope, function (clone) {\n                                clone.data('$uiViewAnim', $uiViewAnim);\n                                clone.data('$uiView', $uiViewData);\n                                renderer.enter(clone, $element, function onUIViewEnter() {\n                                    animEnter.resolve();\n                                    if (currentScope)\n                                        currentScope.$emit('$viewContentAnimationEnded');\n                                    if ((isDefined(autoScrollExp) && !autoScrollExp) || scope.$eval(autoScrollExp)) {\n                                        $uiViewScroll(clone);\n                                    }\n                                });\n                                cleanupLastView();\n                            });\n                            currentEl = cloned;\n                            currentScope = newScope;\n                            /**\n                             * @ngdoc event\n                             * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                             * @eventOf ui.router.state.directive:ui-view\n                             * @eventType emits on ui-view directive scope\n                             * @description           *\n                             * Fired once the view is **loaded**, *after* the DOM is rendered.\n                             *\n                             * @param {Object} event Event object.\n                             */\n                            currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                            currentScope.$eval(onloadExp);\n                        }\n                    };\n                },\n            };\n            return directive;\n        },\n    ];\n    $ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n    /** @hidden */\n    function $ViewDirectiveFill($compile, $controller, $transitions, $view, $q$$1, $timeout) {\n        var getControllerAs = parse('viewDecl.controllerAs');\n        var getResolveAs = parse('viewDecl.resolveAs');\n        return {\n            restrict: 'ECA',\n            priority: -400,\n            compile: function (tElement) {\n                var initial = tElement.html();\n                tElement.empty();\n                return function (scope, $element) {\n                    var data = $element.data('$uiView');\n                    if (!data) {\n                        $element.html(initial);\n                        $compile($element.contents())(scope);\n                        return;\n                    }\n                    var cfg = data.$cfg || { viewDecl: {}, getTemplate: noop };\n                    var resolveCtx = cfg.path && new ResolveContext(cfg.path);\n                    $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                    trace.traceUIViewFill(data.$uiView, $element.html());\n                    var link = $compile($element.contents());\n                    var controller = cfg.controller;\n                    var controllerAs = getControllerAs(cfg);\n                    var resolveAs = getResolveAs(cfg);\n                    var locals = resolveCtx && getLocals(resolveCtx);\n                    scope[resolveAs] = locals;\n                    if (controller) {\n                        var controllerInstance = ($controller(controller, extend({}, locals, { $scope: scope, $element: $element })));\n                        if (controllerAs) {\n                            scope[controllerAs] = controllerInstance;\n                            scope[controllerAs][resolveAs] = locals;\n                        }\n                        // TODO: Use $view service as a central point for registering component-level hooks\n                        // Then, when a component is created, tell the $view service, so it can invoke hooks\n                        // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                        // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                        $element.data('$ngControllerController', controllerInstance);\n                        $element.children().data('$ngControllerController', controllerInstance);\n                        registerControllerCallbacks($q$$1, $transitions, controllerInstance, scope, cfg);\n                    }\n                    // Wait for the component to appear in the DOM\n                    if (isString(cfg.component)) {\n                        var kebobName = kebobString(cfg.component);\n                        var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", 'i');\n                        var getComponentController = function () {\n                            var directiveEl = [].slice\n                                .call($element[0].children)\n                                .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                            return directiveEl && ng.element(directiveEl).data(\"$\" + cfg.component + \"Controller\");\n                        };\n                        var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                            if (!ctrlInstance)\n                                return;\n                            registerControllerCallbacks($q$$1, $transitions, ctrlInstance, scope, cfg);\n                            deregisterWatch_1();\n                        });\n                    }\n                    link(scope);\n                };\n            },\n        };\n    }\n    /** @hidden */\n    var hasComponentImpl = typeof ng.module('ui.router')['component'] === 'function';\n    /** @hidden incrementing id */\n    var _uiCanExitId = 0;\n    /** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\n    function registerControllerCallbacks($q$$1, $transitions, controllerInstance, $scope, cfg) {\n        // Call $onInit() ASAP\n        if (isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n            controllerInstance.$onInit();\n        }\n        var viewState = tail(cfg.path).state.self;\n        var hookOptions = { bind: controllerInstance };\n        // Add component-level hook for onUiParamsChanged\n        if (isFunction(controllerInstance.uiOnParamsChanged)) {\n            var resolveContext = new ResolveContext(cfg.path);\n            var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n            // Fire callback on any successful transition\n            var paramsUpdated = function ($transition$) {\n                // Exit early if the $transition$ is the same as the view was created within.\n                // Exit early if the $transition$ will exit the state the view is for.\n                if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                    return;\n                var toParams = $transition$.params('to');\n                var fromParams = $transition$.params('from');\n                var getNodeSchema = function (node) { return node.paramSchema; };\n                var toSchema = $transition$\n                    .treeChanges('to')\n                    .map(getNodeSchema)\n                    .reduce(unnestR, []);\n                var fromSchema = $transition$\n                    .treeChanges('from')\n                    .map(getNodeSchema)\n                    .reduce(unnestR, []);\n                // Find the to params that have different values than the from params\n                var changedToParams = toSchema.filter(function (param) {\n                    var idx = fromSchema.indexOf(param);\n                    return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n                });\n                // Only trigger callback if a to param has changed or is new\n                if (changedToParams.length) {\n                    var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                    // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                    var newValues = filter(toParams, function (val$$1, key) { return changedKeys_1.indexOf(key) !== -1; });\n                    controllerInstance.uiOnParamsChanged(newValues, $transition$);\n                }\n            };\n            $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n        }\n        // Add component-level hook for uiCanExit\n        if (isFunction(controllerInstance.uiCanExit)) {\n            var id_1 = _uiCanExitId++;\n            var cacheProp_1 = '_uiCanExitIds';\n            // Returns true if a redirect transition already answered truthy\n            var prevTruthyAnswer_1 = function (trans) {\n                return !!trans && ((trans[cacheProp_1] && trans[cacheProp_1][id_1] === true) || prevTruthyAnswer_1(trans.redirectedFrom()));\n            };\n            // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n            var wrappedHook = function (trans) {\n                var promise;\n                var ids = (trans[cacheProp_1] = trans[cacheProp_1] || {});\n                if (!prevTruthyAnswer_1(trans)) {\n                    promise = $q$$1.when(controllerInstance.uiCanExit(trans));\n                    promise.then(function (val$$1) { return (ids[id_1] = val$$1 !== false); });\n                }\n                return promise;\n            };\n            var criteria = { exiting: viewState.name };\n            $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n        }\n    }\n    ng.module('ui.router.state').directive('uiView', uiView);\n    ng.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\n    /** @publicapi @module ng1 */ /** */\n    /** @hidden */\n    function $ViewScrollProvider() {\n        var useAnchorScroll = false;\n        this.useAnchorScroll = function () {\n            useAnchorScroll = true;\n        };\n        this.$get = [\n            '$anchorScroll',\n            '$timeout',\n            function ($anchorScroll, $timeout) {\n                if (useAnchorScroll) {\n                    return $anchorScroll;\n                }\n                return function ($element) {\n                    return $timeout(function () {\n                        $element[0].scrollIntoView();\n                    }, 0, false);\n                };\n            },\n        ];\n    }\n    ng.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n    var index$1 = 'ui.router';\n\n    exports.default = index$1;\n    exports.core = index;\n    exports.watchDigests = watchDigests;\n    exports.getLocals = getLocals;\n    exports.getNg1ViewConfigFactory = getNg1ViewConfigFactory;\n    exports.ng1ViewsBuilder = ng1ViewsBuilder;\n    exports.Ng1ViewConfig = Ng1ViewConfig;\n    exports.StateProvider = StateProvider;\n    exports.UrlRouterProvider = UrlRouterProvider;\n    exports.root = root;\n    exports.fromJson = fromJson;\n    exports.toJson = toJson;\n    exports.forEach = forEach;\n    exports.extend = extend;\n    exports.equals = equals;\n    exports.identity = identity;\n    exports.noop = noop;\n    exports.createProxyFunctions = createProxyFunctions;\n    exports.inherit = inherit;\n    exports.inArray = inArray;\n    exports._inArray = _inArray;\n    exports.removeFrom = removeFrom;\n    exports._removeFrom = _removeFrom;\n    exports.pushTo = pushTo;\n    exports._pushTo = _pushTo;\n    exports.deregAll = deregAll;\n    exports.defaults = defaults;\n    exports.mergeR = mergeR;\n    exports.ancestors = ancestors;\n    exports.pick = pick;\n    exports.omit = omit;\n    exports.pluck = pluck;\n    exports.filter = filter;\n    exports.find = find;\n    exports.mapObj = mapObj;\n    exports.map = map;\n    exports.values = values;\n    exports.allTrueR = allTrueR;\n    exports.anyTrueR = anyTrueR;\n    exports.unnestR = unnestR;\n    exports.flattenR = flattenR;\n    exports.pushR = pushR;\n    exports.uniqR = uniqR;\n    exports.unnest = unnest;\n    exports.flatten = flatten;\n    exports.assertPredicate = assertPredicate;\n    exports.assertMap = assertMap;\n    exports.assertFn = assertFn;\n    exports.pairs = pairs;\n    exports.arrayTuples = arrayTuples;\n    exports.applyPairs = applyPairs;\n    exports.tail = tail;\n    exports.copy = copy;\n    exports._extend = _extend;\n    exports.silenceUncaughtInPromise = silenceUncaughtInPromise;\n    exports.silentRejection = silentRejection;\n    exports.makeStub = makeStub;\n    exports.services = services;\n    exports.Glob = Glob;\n    exports.curry = curry;\n    exports.compose = compose;\n    exports.pipe = pipe;\n    exports.prop = prop;\n    exports.propEq = propEq;\n    exports.parse = parse;\n    exports.not = not;\n    exports.and = and;\n    exports.or = or;\n    exports.all = all;\n    exports.any = any;\n    exports.is = is;\n    exports.eq = eq;\n    exports.val = val;\n    exports.invoke = invoke;\n    exports.pattern = pattern;\n    exports.isUndefined = isUndefined;\n    exports.isDefined = isDefined;\n    exports.isNull = isNull;\n    exports.isNullOrUndefined = isNullOrUndefined;\n    exports.isFunction = isFunction;\n    exports.isNumber = isNumber;\n    exports.isString = isString;\n    exports.isObject = isObject;\n    exports.isArray = isArray;\n    exports.isDate = isDate;\n    exports.isRegExp = isRegExp;\n    exports.isInjectable = isInjectable;\n    exports.isPromise = isPromise;\n    exports.Queue = Queue;\n    exports.maxLength = maxLength;\n    exports.padString = padString;\n    exports.kebobString = kebobString;\n    exports.functionToString = functionToString;\n    exports.fnToString = fnToString;\n    exports.stringify = stringify;\n    exports.beforeAfterSubstr = beforeAfterSubstr;\n    exports.hostRegex = hostRegex;\n    exports.stripLastPathElement = stripLastPathElement;\n    exports.splitHash = splitHash;\n    exports.splitQuery = splitQuery;\n    exports.splitEqual = splitEqual;\n    exports.trimHashVal = trimHashVal;\n    exports.splitOnDelim = splitOnDelim;\n    exports.joinNeighborsR = joinNeighborsR;\n    exports.Trace = Trace;\n    exports.trace = trace;\n    exports.Param = Param;\n    exports.ParamTypes = ParamTypes;\n    exports.StateParams = StateParams;\n    exports.ParamType = ParamType;\n    exports.PathNode = PathNode;\n    exports.PathUtils = PathUtils;\n    exports.resolvePolicies = resolvePolicies;\n    exports.defaultResolvePolicy = defaultResolvePolicy;\n    exports.Resolvable = Resolvable;\n    exports.NATIVE_INJECTOR_TOKEN = NATIVE_INJECTOR_TOKEN;\n    exports.ResolveContext = ResolveContext;\n    exports.resolvablesBuilder = resolvablesBuilder;\n    exports.StateBuilder = StateBuilder;\n    exports.StateObject = StateObject;\n    exports.StateMatcher = StateMatcher;\n    exports.StateQueueManager = StateQueueManager;\n    exports.StateRegistry = StateRegistry;\n    exports.StateService = StateService;\n    exports.TargetState = TargetState;\n    exports.HookBuilder = HookBuilder;\n    exports.matchState = matchState;\n    exports.RegisteredHook = RegisteredHook;\n    exports.makeEvent = makeEvent;\n    exports.Rejection = Rejection;\n    exports.Transition = Transition;\n    exports.TransitionHook = TransitionHook;\n    exports.TransitionEventType = TransitionEventType;\n    exports.defaultTransOpts = defaultTransOpts;\n    exports.TransitionService = TransitionService;\n    exports.UrlRules = UrlRules;\n    exports.UrlConfig = UrlConfig;\n    exports.UrlMatcher = UrlMatcher;\n    exports.ParamFactory = ParamFactory;\n    exports.UrlMatcherFactory = UrlMatcherFactory;\n    exports.UrlRouter = UrlRouter;\n    exports.UrlRuleFactory = UrlRuleFactory;\n    exports.BaseUrlRule = BaseUrlRule;\n    exports.UrlService = UrlService;\n    exports.ViewService = ViewService;\n    exports.UIRouterGlobals = UIRouterGlobals;\n    exports.UIRouter = UIRouter;\n    exports.$q = $q;\n    exports.$injector = $injector;\n    exports.BaseLocationServices = BaseLocationServices;\n    exports.HashLocationService = HashLocationService;\n    exports.MemoryLocationService = MemoryLocationService;\n    exports.PushStateLocationService = PushStateLocationService;\n    exports.MemoryLocationConfig = MemoryLocationConfig;\n    exports.BrowserLocationConfig = BrowserLocationConfig;\n    exports.keyValsToObjectR = keyValsToObjectR;\n    exports.getParams = getParams;\n    exports.parseUrl = parseUrl$1;\n    exports.buildUrl = buildUrl;\n    exports.locationPluginFactory = locationPluginFactory;\n    exports.servicesPlugin = servicesPlugin;\n    exports.hashLocationPlugin = hashLocationPlugin;\n    exports.pushStateLocationPlugin = pushStateLocationPlugin;\n    exports.memoryLocationPlugin = memoryLocationPlugin;\n    exports.UIRouterPluginBase = UIRouterPluginBase;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=angular-ui-router.js.map\n","/*\n AngularJS v1.7.8\n (c) 2010-2018 Google, Inc. http://angularjs.org\n License: MIT\n*/\n(function(T,a){'use strict';function M(m,f){f=f||{};a.forEach(f,function(a,d){delete f[d]});for(var d in m)!m.hasOwnProperty(d)||\"$\"===d.charAt(0)&&\"$\"===d.charAt(1)||(f[d]=m[d]);return f}var B=a.$$minErr(\"$resource\"),H=/^(\\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;a.module(\"ngResource\",[\"ng\"]).info({angularVersion:\"1.7.8\"}).provider(\"$resource\",function(){var m=/^https?:\\/\\/\\[[^\\]]*][^/]*/,f=this;this.defaults={stripTrailingSlashes:!0,cancellable:!1,actions:{get:{method:\"GET\"},save:{method:\"POST\"},query:{method:\"GET\",\nisArray:!0},remove:{method:\"DELETE\"},\"delete\":{method:\"DELETE\"}}};this.$get=[\"$http\",\"$log\",\"$q\",\"$timeout\",function(d,F,G,N){function C(a,d){this.template=a;this.defaults=n({},f.defaults,d);this.urlParams={}}var O=a.noop,r=a.forEach,n=a.extend,R=a.copy,P=a.isArray,D=a.isDefined,x=a.isFunction,I=a.isNumber,y=a.$$encodeUriQuery,S=a.$$encodeUriSegment;C.prototype={setUrlParams:function(a,d,f){var g=this,c=f||g.template,s,h,n=\"\",b=g.urlParams=Object.create(null);r(c.split(/\\W/),function(a){if(\"hasOwnProperty\"===\na)throw B(\"badname\");!/^\\d+$/.test(a)&&a&&(new RegExp(\"(^|[^\\\\\\\\]):\"+a+\"(\\\\W|$)\")).test(c)&&(b[a]={isQueryParamValue:(new RegExp(\"\\\\?.*=:\"+a+\"(?:\\\\W|$)\")).test(c)})});c=c.replace(/\\\\:/g,\":\");c=c.replace(m,function(b){n=b;return\"\"});d=d||{};r(g.urlParams,function(b,a){s=d.hasOwnProperty(a)?d[a]:g.defaults[a];D(s)&&null!==s?(h=b.isQueryParamValue?y(s,!0):S(s),c=c.replace(new RegExp(\":\"+a+\"(\\\\W|$)\",\"g\"),function(b,a){return h+a})):c=c.replace(new RegExp(\"(/?):\"+a+\"(\\\\W|$)\",\"g\"),function(b,a,e){return\"/\"===\ne.charAt(0)?e:a+e})});g.defaults.stripTrailingSlashes&&(c=c.replace(/\\/+$/,\"\")||\"/\");c=c.replace(/\\/\\.(?=\\w+($|\\?))/,\".\");a.url=n+c.replace(/\\/(\\\\|%5C)\\./,\"/.\");r(d,function(b,c){g.urlParams[c]||(a.params=a.params||{},a.params[c]=b)})}};return function(m,y,z,g){function c(b,c){var d={};c=n({},y,c);r(c,function(c,f){x(c)&&(c=c(b));var e;if(c&&c.charAt&&\"@\"===c.charAt(0)){e=b;var k=c.substr(1);if(null==k||\"\"===k||\"hasOwnProperty\"===k||!H.test(\".\"+k))throw B(\"badmember\",k);for(var k=k.split(\".\"),h=0,\nn=k.length;h<n&&a.isDefined(e);h++){var g=k[h];e=null!==e?e[g]:void 0}}else e=c;d[f]=e});return d}function s(b){return b.resource}function h(b){M(b||{},this)}var Q=new C(m,g);z=n({},f.defaults.actions,z);h.prototype.toJSON=function(){var b=n({},this);delete b.$promise;delete b.$resolved;delete b.$cancelRequest;return b};r(z,function(b,a){var f=!0===b.hasBody||!1!==b.hasBody&&/^(POST|PUT|PATCH)$/i.test(b.method),g=b.timeout,m=D(b.cancellable)?b.cancellable:Q.defaults.cancellable;g&&!I(g)&&(F.debug(\"ngResource:\\n  Only numeric values are allowed as `timeout`.\\n  Promises are not supported in $resource, because the same value would be used for multiple requests. If you are looking for a way to cancel requests, you should use the `cancellable` option.\"),\ndelete b.timeout,g=null);h[a]=function(e,k,J,y){function z(a){p.catch(O);null!==u&&u.resolve(a)}var K={},v,t,w;switch(arguments.length){case 4:w=y,t=J;case 3:case 2:if(x(k)){if(x(e)){t=e;w=k;break}t=k;w=J}else{K=e;v=k;t=J;break}case 1:x(e)?t=e:f?v=e:K=e;break;case 0:break;default:throw B(\"badargs\",arguments.length);}var E=this instanceof h,l=E?v:b.isArray?[]:new h(v),q={},C=b.interceptor&&b.interceptor.request||void 0,D=b.interceptor&&b.interceptor.requestError||void 0,F=b.interceptor&&b.interceptor.response||\ns,H=b.interceptor&&b.interceptor.responseError||G.reject,I=t?function(a){t(a,A.headers,A.status,A.statusText)}:void 0;w=w||void 0;var u,L,A;r(b,function(a,b){switch(b){default:q[b]=R(a);case \"params\":case \"isArray\":case \"interceptor\":case \"cancellable\":}});!E&&m&&(u=G.defer(),q.timeout=u.promise,g&&(L=N(u.resolve,g)));f&&(q.data=v);Q.setUrlParams(q,n({},c(v,b.params||{}),K),b.url);var p=G.resolve(q).then(C).catch(D).then(d),p=p.then(function(c){var e=c.data;if(e){if(P(e)!==!!b.isArray)throw B(\"badcfg\",\na,b.isArray?\"array\":\"object\",P(e)?\"array\":\"object\",q.method,q.url);if(b.isArray)l.length=0,r(e,function(a){\"object\"===typeof a?l.push(new h(a)):l.push(a)});else{var d=l.$promise;M(e,l);l.$promise=d}}c.resource=l;A=c;return F(c)},function(a){a.resource=l;A=a;return H(a)}),p=p[\"finally\"](function(){l.$resolved=!0;!E&&m&&(l.$cancelRequest=O,N.cancel(L),u=L=q.timeout=null)});p.then(I,w);return E?p:(l.$promise=p,l.$resolved=!1,m&&(l.$cancelRequest=z),l)};h.prototype[\"$\"+a]=function(b,c,d){x(b)&&(d=c,c=\nb,b={});b=h[a].call(this,b,this,c,d);return b.$promise||b}});return h}}]})})(window,window.angular);\n//# sourceMappingURL=angular-resource.min.js.map\n"]}