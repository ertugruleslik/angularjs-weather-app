{"version":3,"sources":["app.js","Controller/listCtrl.js","Controller/mainCtrl.js","constants/config.js","services/service.js","utils/utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"weather.js","sourcesContent":["'use strict';\n\n/**\n * # Weather App\n */\n\nvar app = angular.module('weather',['ui.router','ngResource']);\n\napp.config(['$stateProvider','$urlRouterProvider','$locationProvider', function ($stateProvider,$urlRouterProvider,$locationProvider) {\n\n   $locationProvider.html5Mode(true);\n\n   $stateProvider\n       .state('home', {\n           url: '/',\n           templateUrl: './assets/Views/home.html',\n           controller: 'mainCtrl'\n       })\n       .state('main', {\n           url: '/:id',\n           templateUrl: './assets/Views/home.html',\n           controller: 'mainCtrl',\n           params: {\n               id:{\n                    value: null,\n                    squash: true\n               },\n               ci:{\n                   value: null,\n                   squash: true\n               }\n           }\n       })\n        .state('list', {\n            url: '/list',\n            templateUrl: './assets/Views/cityList.html',\n            controller: 'listCtrl'\n        });\n\n       $urlRouterProvider.otherwise('/');\n\n}]);\n","'use strict';\n\napp.controller('listCtrl',['$scope','Forecast','Utils','config', function($scope,Forecast,Utils,config){\n\n    $scope.cityArray = [];\n\n    angular.forEach(config.cityList, function(value, key) {\n        $scope.cityArray.push(value.id);\n    });\n\n    $scope.getForecast = function (city) {\n        return Forecast.get({cities:city}).$promise\n            .then(function (data) {\n                $scope.cities = data;\n            });\n    };\n\n    $scope.getForecast($scope.cityArray.join(','));\n\n    $scope.setClass = function (code) {\n        return Utils.setClass(code);\n    };\n\n}]);","'use strict';\n\napp.controller('mainCtrl',['$scope','Location','$stateParams','Weather','Forecast','Utils', function($scope,Location,$stateParams,Weather,Forecast,Utils){\n\n    $scope.getLocation = function () {\n        return Location.get().$promise\n            .then(function (data) {\n                $scope.getWeather(data.city);\n            });\n    };\n\n    $scope.getWeather = function (city) {\n        return Weather.get({city:city}).$promise\n            .then(function (data) {\n                $scope.weather = data;\n            });\n    };\n\n    if($stateParams.id){\n        $scope.getWeather($stateParams.id)\n    } else {\n        $scope.getLocation();\n    }\n\n\n    $scope.setClass = function (code) {\n        return Utils.setClass(code);\n    };\n\n    $scope.setBackground = function (code) {\n        return Utils.setBackground(code);\n    };\n\n}]);\n","'use strict';\n\n/**\n * # CONFIG\n * constant in the weather app\n */\n\napp.constant('config', {\n    addressUrl: 'https://api.ipgeolocation.io/ipgeo',\n    forecastUrl: 'http://api.openweathermap.org/data/2.5/group',\n    weatherUrl: 'http://api.openweathermap.org/data/2.5/weather',\n    openWeatherMapAPIKey: '306fe08f984a42954813ce9d05ee0af4',\n    ipGeolocationAPIKEY: '099f5c9e000f4b9896790b416e93259f',\n    cityList: [\n        {\n            \"id\": 745044,\n            \"name\": \"Istanbul\"\n        },\n        {\n            \"id\": 323786,\n            \"name\": \"Ankara\"\n        },\n        {\n            \"id\": 306571,\n            \"name\": \"Konya\"\n        },\n        {\n            \"id\": 2643743,\n            \"name\": \"London\"\n        },\n        {\n            \"id\": 304183,\n            \"name\": \"MuÄŸla\"\n        },\n        {\n            \"id\": 323777,\n            \"name\": \"Antalya\"\n        },\n        {\n            \"id\": 5128581,\n            \"name\": \"New York\"\n        },\n        {\n            \"id\": 524901,\n            \"name\": \"Moscow\"\n        },\n        {\n            \"id\": 2964574,\n            \"name\": \"Dublin\"\n        },\n        {\n            \"id\": 292223,\n            \"name\": \"Dubai\"\n        },\n        {\n            \"id\": 2761369,\n            \"name\": \"Vienna\"\n        }\n    ],\n    codeList: [\n        {\n            code: '01d',\n            iconClass: 'icon icon-sunny',\n            backgroundClass: 'day-clear'\n        },\n        {\n            code: '01n',\n            iconClass: 'icon icon-night-clear',\n            backgroundClass: 'night-clear'\n        },\n        {\n            code: '02d',\n            iconClass: 'icon icon-cloudy',\n            backgroundClass: 'day-clear'\n        },\n        {\n            code: '02n',\n            iconClass: 'icon icon-partly-cloudy',\n            backgroundClass: 'night-cloudy'\n        },\n        {\n            code: '03d',\n            iconClass: 'icon icon-cloudy',\n            backgroundClass: 'cloudy'\n        },\n        {\n            code: '03n',\n            iconClass: 'icon icon-cloudy',\n            backgroundClass: 'night-cloudy'\n        },\n        {\n            code: '04d',\n            iconClass: 'icon icon-cloudy',\n            backgroundClass: 'cloudy'\n        },\n        {\n            code: '04n',\n            iconClass: 'icon icon-cloudy',\n            backgroundClass: 'night-cloudy'\n        },\n        {\n            code: '09d',\n            iconClass: 'icon icon-thundery-showers',\n            backgroundClass: 'rainy'\n        },\n        {\n            code: '09n',\n            iconClass: 'icon icon-thundery-showers',\n            backgroundClass: 'rainy'\n        },\n        {\n            code: '10d',\n            iconClass: 'icon icon-rainy',\n            backgroundClass: 'rainy'\n        },\n        {\n            code: '10n',\n            iconClass: 'icon icon-rainy',\n            backgroundClass: 'rainy'\n        },\n        {\n            code: '11d',\n            iconClass: 'icon icon-thunderstorm',\n            backgroundClass: 'thunderstorm'\n        },\n        {\n            code: '11n',\n            iconClass: 'icon icon-thunderstorm',\n            backgroundClass: 'thunderstorm'\n        },\n        {\n            code: '13d',\n            iconClass: 'icon icon-snowy',\n            backgroundClass: 'snowy'\n        },\n        {\n            code: '13n',\n            iconClass: 'icon icon-snowy',\n            backgroundClass: 'snowy'\n        },\n        {\n            code: '50d',\n            iconClass: 'icon icon-foggy',\n            backgroundClass: 'foggy'\n        },\n        {\n            code: '50n',\n            iconClass: 'icon icon-foggy',\n            backgroundClass: 'foggy'\n        }\n    ]\n});","'use strict';\n\n/**\n * # Services\n * services in the weather app\n */\n\napp.factory('Location', ['$resource','config', function($resource,config) {\n    var apiKey = config.ipGeolocationAPIKEY;\n    return $resource(config.addressUrl + '?apiKey=:apikey', {apikey:apiKey}, {\n        'query': { method: 'GET', params: { action: 'read', format: '.json' } , isArray : true }\n    });\n}]);\n\n\napp.factory('Weather', ['$resource','config', function($resource,config) {\n    var apiKey = config.openWeatherMapAPIKey;\n    return $resource(config.weatherUrl + '?q=:city&APPID=:api', {api:apiKey}, {\n        'query': { method: 'GET', params: { action: 'read', format: '.json' } , isArray : false }\n    });\n}]);\n\n\napp.factory('Forecast', ['$resource','config', function($resource,config) {\n    var apiKey = config.openWeatherMapAPIKey;\n    return $resource(config.forecastUrl + '?id=:cities&APPID=:api', {api:apiKey}, {\n        'query': { method: 'GET', params: { action: 'read', format: '.json' } , isArray : false }\n    });\n}]);\n","'use strict';\n\n/**\n * # Utils\n * utils in the weather app\n */\n\napp.factory('Utils', function (config) {\n\n    return {\n        setClass: function (code) {\n            var iconClass;\n            angular.forEach(config.codeList, function (obj) {\n                if (obj.code === code) {\n                    iconClass = obj.iconClass;\n                }\n            });\n            return iconClass;\n        },\n\n        setBackground: function (code) {\n            var backgroundClass;\n            angular.forEach(config.codeList, function (obj) {\n                if (obj.code === code) {\n                    backgroundClass = obj.backgroundClass;\n                }\n            });\n            return backgroundClass;\n        }\n    };\n\n});"]}